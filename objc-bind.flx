include "std/apple/Foundation";

open syntax ObjC;

// This is required at the moment to declare the class 
header small_class_interface = c"""
@interface SmallClass: NSObject { }
- (int)get1977;
@end
""";

body small_class_implementation = c"""
@implementation SmallClass
- (instancetype)init {
	self = [super init];
	return self;
}
- (int)get1977 {
	return 1977;
}
- (int)getsum: (int)toadd {
  return 1977 + toadd;
}
-(NSString*)description { return @"SmallClassInstance"; }

@end
""";

requires small_class_interface, small_class_implementation, package "foundation", package "objc";
// PROTOCOL

 @objc-bind @protocol hasDescription
   -(NSString)description;
 @end


 @objc-bind @interface SmallClass<hasDescription>
 +(SmallClass)alloc;
 -(SmallClass)init;
 -(int)get1977;
 -(int)getsum:(int);
 @end

var sc : SmallClass = cexpr[SmallClass] "[[SmallClass alloc] init]" endcexpr;
println$ "Get: " + (sc.get1977) . str ;
println$ "Add: " + (sc.getsum' 42) . str ;


var sc2 : SmallClass = #SmallClass'alloc.init;
println$ "Get: " + (sc2.get1977) . str ;
println$ "Add: " + (sc2.getsum' 42) . str ;

fun require_subtype (x:NSObject) => (x.description).str;
println$ sc.require_subtype;

fun require_description(x:hasDescription) => (x.description).str;
println$ sc.require_description;

