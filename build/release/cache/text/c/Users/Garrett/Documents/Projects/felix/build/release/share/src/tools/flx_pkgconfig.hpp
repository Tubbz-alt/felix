#ifndef _FLX_GUARD_flx_pkgconfig
#define _FLX_GUARD_flx_pkgconfig
//Input file: build\release\share\src\tools\flx_pkgconfig
//Generated by Felix Version 2019.01.06
//Timestamp: 2020/3/7 3:20:51 UTC
//Timestamp: 2020/3/6 21:20:51 (local)

//FELIX RUNTIME
#include "flx_rtl.hpp"
#include "flx_gc.hpp"
#include "flx_world.hpp"
#ifndef FLX_NO_INCLUDES
#include "flx_pkgconfig.includes"
#endif


//-----------------------------------------
//USER HEADERS
#include "flx_rtl_config.hpp"
#include <ctype.h>
#include <stddef.h>
#include <stdio.h>
#include <string>
#include <cstdlib>

    namespace flx { namespace list {
      template<class T> struct snoc { void *mem_0; T mem_1; };
      template<class T> struct cons { T mem_0; void * mem_1; };
      template<class T> cons<T> snoc2cons (void *x) {
        return cons<T> {((snoc<T>*)x)->mem_1, ((snoc<T>*)x)->mem_0};
      }
    }}
  
#include "flx_serialisers.hpp"

#include <iostream>
#include "flx_ioutil.hpp"
#include "flx_strutil.hpp"
#include "flx_rtl.hpp"
#include "flx_gc.hpp"


//-----------------------------------------
//FELIX SYSTEM
namespace flxusr { namespace flx_pkgconfig {
struct thread_frame_t;

//-----------------------------------------
//NAME THE TYPES

//PRIMITIVE 17555 INSTANCE 75163: string
typedef ::std::basic_string<char> _a17555t_75163;

//TYPE 75164: bool
// typedef _us2  ::flx::rtl::cl_t;

//TYPE 75165: string^2
// typedef _at<_a17555t_75163,2> _at75165;
struct _at75165;

//TYPE 75168: list * list
// typedef _tt2<void*,void*> _tt75168;
struct _tt75168;

//PRIMITIVE 102 INSTANCE 75169: int
//typedef int int;

//TYPE 75171: int^3
// typedef _at<int,3> _at75171;
struct _at75171;

//TYPE 75173: unit -> bool
// typedef _ft< ::flx::rtl::cl_t, ::flx::rtl::cl_t> _ft75173;
struct _ft75173;

//TYPE 75174: bool * (unit -> bool)
// typedef _tt2< ::flx::rtl::cl_t,_ft75173*> _tt75174;
struct _tt75174;

//TYPE 75175: list * string
// typedef _tt2<void*,_a17555t_75163> _tt75175;
struct _tt75175;

//TYPE 75176: list * string -> list
// typedef _ft<_tt75175,void*> _ft75176;
struct _ft75176;

//TYPE 75177: int * list
// typedef _tt2<int,void*> _tt75177;
struct _tt75177;

//TYPE 75178: int * list -> int
// typedef _ft<_tt75177,int> _ft75178;
struct _ft75178;

//TYPE 75179: int * list -> list
// typedef _ft<_tt75177,void*> _ft75179;
struct _ft75179;

//PRIMITIVE 11552 INSTANCE 75180: ofile
typedef FILE* _a11552t_75180;

//TYPE 75181: ofile * string
// typedef _tt2<_a11552t_75180,_a17555t_75163> _tt75181;
struct _tt75181;

//TYPE 75182: string * list
// typedef _tt2<_a17555t_75163,void*> _tt75182;
struct _tt75182;

//TYPE 75183: int^2
// typedef _at<int,2> _at75183;
struct _at75183;

//TYPE 75186: RWptr((int^3),[]) -> RWptr(int,[])
// typedef _ft<_at75171*,int*> _ft75186;
struct _ft75186;

//TYPE 75187: int^3 -> int
// typedef _ft<_at75171,int> _ft75187;
struct _ft75187;

//TYPE 75188: list * int
// typedef _tt2<void*,int> _tt75188;
struct _tt75188;

//PRIMITIVE 112 INSTANCE 75189: size
typedef size_t _a112t_75189;

//TYPE 75190: size^2
// typedef _at<_a112t_75189,2> _at75190;
struct _at75190;

//PRIMITIVE 7678 INSTANCE 75191: char
//typedef char char;

//TYPE 75192: char^2
// typedef _at<char,2> _at75192;
struct _at75192;

//TYPE 75193: string * size
// typedef _tt2<_a17555t_75163,_a112t_75189> _tt75193;
struct _tt75193;

//TYPE 75195: string * int
// typedef _tt2<_a17555t_75163,int> _tt75195;
struct _tt75195;

//TYPE 75197: string * list -> list
// typedef _ft<_tt75182,void*> _ft75197;
struct _ft75197;

//TYPE 75198: string * list -> string
// typedef _ft<_tt75182,_a17555t_75163> _ft75198;
struct _ft75198;

//TYPE 75199: string * int * int
// typedef _tt3<_a17555t_75163,int,int> _tt75199;
struct _tt75199;

//TYPE 75201: list^2
// typedef _at<void*,2> _at75201;
struct _at75201;

//TYPE 75204: string -> bool
// typedef _ft<_a17555t_75163, ::flx::rtl::cl_t> _ft75204;
struct _ft75204;

//TYPE 75205: (string -> bool) * list
// typedef _tt2<_ft75204*,void*> _tt75205;
struct _tt75205;

//TYPE 75206: string -> void
// typedef _pt<_a17555t_75163> _pt75206;
struct _pt75206;

//TYPE 75207: (string -> void) * list
// typedef _tt2<_pt75206*,void*> _tt75207;
struct _tt75207;

//PRIMITIVE 11551 INSTANCE 75208: ifile
typedef FILE* _a11551t_75208;

//TYPE 75209: string^2 -> string
// typedef _ft<_at75165,_a17555t_75163> _ft75209;
struct _ft75209;

//TYPE 75210: list * string
// typedef _tt2<void*,_a17555t_75163> _tt75210;
struct _tt75210;

//TYPE 75211: list * string^2
// typedef _tt2<void*,_at75165> _tt75211;
struct _tt75211;

//PRIMITIVE 19692 INSTANCE 75212: lex_iterator
typedef char const* _a19692t_75212;

//TYPE 75213: lex_iterator^2
// typedef _at<_a19692t_75212,2> _at75213;
struct _at75213;

//TYPE 75215: lex_iterator * token_t
// typedef _tt2<_a19692t_75212,void*> _tt75215;
struct _tt75215;

//TYPE 75216: lex_iterator * token_t -> token_t
// typedef _ft<_tt75215,void*> _ft75216;
struct _ft75216;

//TYPE 75217: lex_iterator * token_t -> lex_iterator
// typedef _ft<_tt75215,_a19692t_75212> _ft75217;
struct _ft75217;

//TYPE 75218: int * string
// typedef _tt2<int,_a17555t_75163> _tt75218;
struct _tt75218;

//TYPE 75219: int * string -> string
// typedef _ft<_tt75218,_a17555t_75163> _ft75219;
struct _ft75219;

//TYPE 75220: RWptr(list,[]) * list
// typedef _tt2<void**,void*> _tt75220;
struct _tt75220;

//TYPE 75222: lex_iterator * int
// typedef _tt2<_a19692t_75212,int> _tt75222;
struct _tt75222;

//TYPE 75223: string * char
// typedef _tt2<_a17555t_75163,char> _tt75223;
struct _tt75223;

//TYPE 75224: size * int
// typedef _tt2<_a112t_75189,int> _tt75224;
struct _tt75224;

//TYPE 75226: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft75226;
struct _ft75226;

//STRUCT 20591 INSTANCE 75246: Win32
struct _s20591t_75246;

//PRIMITIVE 20764 INSTANCE 75250: process_status_t
typedef intptr_t _a20764t_75250;

//TYPE 75259: list * string -> string
// typedef _ft<_tt75175,_a17555t_75163> _ft75259;
struct _ft75259;

//TYPE 75261: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft75261;
struct _ft75261;

//TYPE 75262: string * string * size
// typedef _tt3<_a17555t_75163,_a17555t_75163,_a112t_75189> _tt75262;
struct _tt75262;

//TYPE 75264: RWptr(string,[]) * string
// typedef _tt2<_a17555t_75163*,_a17555t_75163> _tt75264;
struct _tt75264;

//TYPE 75265: string * size * size
// typedef _tt3<_a17555t_75163,_a112t_75189,_a112t_75189> _tt75265;
struct _tt75265;

//TYPE 75269: unit -> opt
// typedef _ft< ::flx::rtl::cl_t,void*> _ft75269;
struct _ft75269;

//TYPE 75270: RWptr(size,[]) * size
// typedef _tt2<_a112t_75189*,_a112t_75189> _tt75270;
struct _tt75270;

//TYPE 75271: RWptr(string,[]) * size
// typedef _tt2<_a17555t_75163*,_a112t_75189> _tt75271;
struct _tt75271;

//TYPE 75274: list * int -> int
// typedef _ft<_tt75188,int> _ft75274;
struct _ft75274;

//TYPE 75275: list * int -> list
// typedef _ft<_tt75188,void*> _ft75275;
struct _ft75275;

//TYPE 75277: list * string^2 -> string^2
// typedef _ft<_tt75211,_at75165> _ft75277;
struct _ft75277;

//TYPE 75278: list * string^2 -> list
// typedef _ft<_tt75211,void*> _ft75278;
struct _ft75278;

//TYPE 75280: string * RWptr(char,[])
// typedef _tt2<_a17555t_75163,char*> _tt75280;
struct _tt75280;


//-----------------------------------------
//DEFINE THE TYPES

//TYPE 75165: string^2
struct _at75165 {
  static ::std::size_t const len = 2;
  typedef _a17555t_75163 element_type;
  _a17555t_75163 data[2];
  _at75165() {}
  _at75165(_a17555t_75163 a0, _a17555t_75163 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 75168: list * list
struct _tt75168 {
  void* mem_0;
  void* mem_1;
  _tt75168(){}
  _tt75168(void* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75171: int^3
struct _at75171 {
  static ::std::size_t const len = 3;
  typedef int element_type;
  int data[3];
  _at75171() {}
  _at75171(int a0, int a1, int a2) {
    data[0] = a0;
    data[1] = a1;
    data[2] = a2;
  }
};

//TYPE 75173: unit -> bool
struct _ft75173 {
  typedef  ::flx::rtl::cl_t rettype;
  typedef void argtype;
  virtual  ::flx::rtl::cl_t apply()=0;
  virtual _ft75173 *clone()=0;
  virtual ~_ft75173(){};
};

//TYPE 75174: bool * (unit -> bool)
struct _tt75174 {
   ::flx::rtl::cl_t mem_0;
  _ft75173* mem_1;
  _tt75174(){}
  _tt75174( ::flx::rtl::cl_t a0, _ft75173* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75175: list * string
struct _tt75175 {
  void* mem_0;
  _a17555t_75163 mem_1;
  _tt75175(){}
  _tt75175(void* a0, _a17555t_75163 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75176: list * string -> list
struct _ft75176 {
  typedef void* rettype;
  typedef _tt75175 argtype;
  virtual void* apply(_tt75175 const &)=0;
  virtual _ft75176 *clone()=0;
  virtual ~_ft75176(){};
};

//TYPE 75177: int * list
struct _tt75177 {
  int mem_0;
  void* mem_1;
  _tt75177(){}
  _tt75177(int a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75178: int * list -> int
struct _ft75178 {
  typedef int rettype;
  typedef _tt75177 argtype;
  virtual int apply(_tt75177 const &)=0;
  virtual _ft75178 *clone()=0;
  virtual ~_ft75178(){};
};

//TYPE 75179: int * list -> list
struct _ft75179 {
  typedef void* rettype;
  typedef _tt75177 argtype;
  virtual void* apply(_tt75177 const &)=0;
  virtual _ft75179 *clone()=0;
  virtual ~_ft75179(){};
};

//TYPE 75181: ofile * string
struct _tt75181 {
  _a11552t_75180 mem_0;
  _a17555t_75163 mem_1;
  _tt75181(){}
  _tt75181(_a11552t_75180 a0, _a17555t_75163 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75182: string * list
struct _tt75182 {
  _a17555t_75163 mem_0;
  void* mem_1;
  _tt75182(){}
  _tt75182(_a17555t_75163 a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75183: int^2
struct _at75183 {
  static ::std::size_t const len = 2;
  typedef int element_type;
  int data[2];
  _at75183() {}
  _at75183(int a0, int a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 75186: RWptr((int^3),[]) -> RWptr(int,[])
struct _ft75186 {
  typedef int* rettype;
  typedef _at75171* argtype;
  virtual int* apply(_at75171* const &)=0;
  virtual _ft75186 *clone()=0;
  virtual ~_ft75186(){};
};

//TYPE 75187: int^3 -> int
struct _ft75187 {
  typedef int rettype;
  typedef _at75171 argtype;
  virtual int apply(_at75171 const &)=0;
  virtual _ft75187 *clone()=0;
  virtual ~_ft75187(){};
};

//TYPE 75188: list * int
struct _tt75188 {
  void* mem_0;
  int mem_1;
  _tt75188(){}
  _tt75188(void* a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75190: size^2
struct _at75190 {
  static ::std::size_t const len = 2;
  typedef _a112t_75189 element_type;
  _a112t_75189 data[2];
  _at75190() {}
  _at75190(_a112t_75189 a0, _a112t_75189 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 75192: char^2
struct _at75192 {
  static ::std::size_t const len = 2;
  typedef char element_type;
  char data[2];
  _at75192() {}
  _at75192(char a0, char a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 75193: string * size
struct _tt75193 {
  _a17555t_75163 mem_0;
  _a112t_75189 mem_1;
  _tt75193(){}
  _tt75193(_a17555t_75163 a0, _a112t_75189 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75195: string * int
struct _tt75195 {
  _a17555t_75163 mem_0;
  int mem_1;
  _tt75195(){}
  _tt75195(_a17555t_75163 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75197: string * list -> list
struct _ft75197 {
  typedef void* rettype;
  typedef _tt75182 argtype;
  virtual void* apply(_tt75182 const &)=0;
  virtual _ft75197 *clone()=0;
  virtual ~_ft75197(){};
};

//TYPE 75198: string * list -> string
struct _ft75198 {
  typedef _a17555t_75163 rettype;
  typedef _tt75182 argtype;
  virtual _a17555t_75163 apply(_tt75182 const &)=0;
  virtual _ft75198 *clone()=0;
  virtual ~_ft75198(){};
};

//TYPE 75199: string * int * int
struct _tt75199 {
  _a17555t_75163 mem_0;
  int mem_1;
  int mem_2;
  _tt75199(){}
  _tt75199(_a17555t_75163 a0, int a1, int a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 75201: list^2
struct _at75201 {
  static ::std::size_t const len = 2;
  typedef void* element_type;
  void* data[2];
  _at75201() {}
  _at75201(void* a0, void* a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 75204: string -> bool
struct _ft75204 {
  typedef  ::flx::rtl::cl_t rettype;
  typedef _a17555t_75163 argtype;
  virtual  ::flx::rtl::cl_t apply(_a17555t_75163 const &)=0;
  virtual _ft75204 *clone()=0;
  virtual ~_ft75204(){};
};

//TYPE 75205: (string -> bool) * list
struct _tt75205 {
  _ft75204* mem_0;
  void* mem_1;
  _tt75205(){}
  _tt75205(_ft75204* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75206: string -> void
struct _pt75206: ::flx::rtl::con_t {
  typedef void rettype;
  typedef _a17555t_75163 argtype;
  virtual ::flx::rtl::con_t *call(::flx::rtl::con_t *, _a17555t_75163 const &)=0;
  virtual _pt75206 *clone()=0;
  virtual ::flx::rtl::con_t *resume()=0;
};

//TYPE 75207: (string -> void) * list
struct _tt75207 {
  _pt75206* mem_0;
  void* mem_1;
  _tt75207(){}
  _tt75207(_pt75206* a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75209: string^2 -> string
struct _ft75209 {
  typedef _a17555t_75163 rettype;
  typedef _at75165 argtype;
  virtual _a17555t_75163 apply(_at75165 const &)=0;
  virtual _ft75209 *clone()=0;
  virtual ~_ft75209(){};
};

//TYPE 75210: list * string
struct _tt75210 {
  void* mem_0;
  _a17555t_75163 mem_1;
  _tt75210(){}
  _tt75210(void* a0, _a17555t_75163 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75211: list * string^2
struct _tt75211 {
  void* mem_0;
  _at75165 mem_1;
  _tt75211(){}
  _tt75211(void* a0, _at75165 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75213: lex_iterator^2
struct _at75213 {
  static ::std::size_t const len = 2;
  typedef _a19692t_75212 element_type;
  _a19692t_75212 data[2];
  _at75213() {}
  _at75213(_a19692t_75212 a0, _a19692t_75212 a1) {
    data[0] = a0;
    data[1] = a1;
  }
};

//TYPE 75215: lex_iterator * token_t
struct _tt75215 {
  _a19692t_75212 mem_0;
  void* mem_1;
  _tt75215(){}
  _tt75215(_a19692t_75212 a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75216: lex_iterator * token_t -> token_t
struct _ft75216 {
  typedef void* rettype;
  typedef _tt75215 argtype;
  virtual void* apply(_tt75215 const &)=0;
  virtual _ft75216 *clone()=0;
  virtual ~_ft75216(){};
};

//TYPE 75217: lex_iterator * token_t -> lex_iterator
struct _ft75217 {
  typedef _a19692t_75212 rettype;
  typedef _tt75215 argtype;
  virtual _a19692t_75212 apply(_tt75215 const &)=0;
  virtual _ft75217 *clone()=0;
  virtual ~_ft75217(){};
};

//TYPE 75218: int * string
struct _tt75218 {
  int mem_0;
  _a17555t_75163 mem_1;
  _tt75218(){}
  _tt75218(int a0, _a17555t_75163 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75219: int * string -> string
struct _ft75219 {
  typedef _a17555t_75163 rettype;
  typedef _tt75218 argtype;
  virtual _a17555t_75163 apply(_tt75218 const &)=0;
  virtual _ft75219 *clone()=0;
  virtual ~_ft75219(){};
};

//TYPE 75220: RWptr(list,[]) * list
struct _tt75220 {
  void** mem_0;
  void* mem_1;
  _tt75220(){}
  _tt75220(void** a0, void* a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75222: lex_iterator * int
struct _tt75222 {
  _a19692t_75212 mem_0;
  int mem_1;
  _tt75222(){}
  _tt75222(_a19692t_75212 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75223: string * char
struct _tt75223 {
  _a17555t_75163 mem_0;
  char mem_1;
  _tt75223(){}
  _tt75223(_a17555t_75163 a0, char a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75224: size * int
struct _tt75224 {
  _a112t_75189 mem_0;
  int mem_1;
  _tt75224(){}
  _tt75224(_a112t_75189 a0, int a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75226: unit -> opt
struct _ft75226 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft75226 *clone()=0;
  virtual ~_ft75226(){};
};

//GENERIC STRUCT 20591 INSTANCE 75246: Win32
struct _s20591t_75246 {
  _s20591t_75246(){}
};

//TYPE 75259: list * string -> string
struct _ft75259 {
  typedef _a17555t_75163 rettype;
  typedef _tt75175 argtype;
  virtual _a17555t_75163 apply(_tt75175 const &)=0;
  virtual _ft75259 *clone()=0;
  virtual ~_ft75259(){};
};

//TYPE 75261: unit -> opt
struct _ft75261 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft75261 *clone()=0;
  virtual ~_ft75261(){};
};

//TYPE 75262: string * string * size
struct _tt75262 {
  _a17555t_75163 mem_0;
  _a17555t_75163 mem_1;
  _a112t_75189 mem_2;
  _tt75262(){}
  _tt75262(_a17555t_75163 a0, _a17555t_75163 a1, _a112t_75189 a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 75264: RWptr(string,[]) * string
struct _tt75264 {
  _a17555t_75163* mem_0;
  _a17555t_75163 mem_1;
  _tt75264(){}
  _tt75264(_a17555t_75163* a0, _a17555t_75163 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75265: string * size * size
struct _tt75265 {
  _a17555t_75163 mem_0;
  _a112t_75189 mem_1;
  _a112t_75189 mem_2;
  _tt75265(){}
  _tt75265(_a17555t_75163 a0, _a112t_75189 a1, _a112t_75189 a2):
    mem_0(a0), mem_1(a1), mem_2(a2){}
};

//TYPE 75269: unit -> opt
struct _ft75269 {
  typedef void* rettype;
  typedef void argtype;
  virtual void* apply()=0;
  virtual _ft75269 *clone()=0;
  virtual ~_ft75269(){};
};

//TYPE 75270: RWptr(size,[]) * size
struct _tt75270 {
  _a112t_75189* mem_0;
  _a112t_75189 mem_1;
  _tt75270(){}
  _tt75270(_a112t_75189* a0, _a112t_75189 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75271: RWptr(string,[]) * size
struct _tt75271 {
  _a17555t_75163* mem_0;
  _a112t_75189 mem_1;
  _tt75271(){}
  _tt75271(_a17555t_75163* a0, _a112t_75189 a1):
    mem_0(a0), mem_1(a1){}
};

//TYPE 75274: list * int -> int
struct _ft75274 {
  typedef int rettype;
  typedef _tt75188 argtype;
  virtual int apply(_tt75188 const &)=0;
  virtual _ft75274 *clone()=0;
  virtual ~_ft75274(){};
};

//TYPE 75275: list * int -> list
struct _ft75275 {
  typedef void* rettype;
  typedef _tt75188 argtype;
  virtual void* apply(_tt75188 const &)=0;
  virtual _ft75275 *clone()=0;
  virtual ~_ft75275(){};
};

//TYPE 75277: list * string^2 -> string^2
struct _ft75277 {
  typedef _at75165 rettype;
  typedef _tt75211 argtype;
  virtual _at75165 apply(_tt75211 const &)=0;
  virtual _ft75277 *clone()=0;
  virtual ~_ft75277(){};
};

//TYPE 75278: list * string^2 -> list
struct _ft75278 {
  typedef void* rettype;
  typedef _tt75211 argtype;
  virtual void* apply(_tt75211 const &)=0;
  virtual _ft75278 *clone()=0;
  virtual ~_ft75278(){};
};

//TYPE 75280: string * RWptr(char,[])
struct _tt75280 {
  _a17555t_75163 mem_0;
  char* mem_1;
  _tt75280(){}
  _tt75280(_a17555t_75163 a0, char* a1):
    mem_0(a0), mem_1(a1){}
};


//-----------------------------------------
//DEFINE FUNCTION CLASS NAMES
struct isidstart;
struct flx_pkgconfig;
struct print_help;
struct lexit;
struct lexstr;
struct xfind;
struct parse_args;
struct reattach_drive_letters;
struct check_id;
struct get_field;
struct get_variable;
struct add_val;
struct tail_val;
struct keep_val;
struct handle_pkg;
struct _lam_64825;
struct _lam_64836;
struct _lam_64848;
struct _init_;
struct _fI70009___plus_;
struct mem_uncurry;
struct iter_uncurry;
struct search_and_replace_uncurry;
struct cat_uncurry;
struct _a70718_argv;
struct aux_uncurry;
struct _lam_3641;
struct _lam_3631;
struct _lam_3712;
struct _lam_3713;
struct _fI71249_aux_uncurry;
struct _lam_3647;
struct _fI71273_aux_uncurry;
struct _fI71294__lam_3647;
struct _lam_3610;
struct aux;
struct _fI71481_aux_uncurry;
struct _fI71502__lam_3647;
struct _lam_3758;
struct _fI71516_aux_uncurry;
struct _fI71537__lam_3647;
struct _fI71543_aux_uncurry;
struct _fI71564__lam_3647;
struct _fI71604_iterator__apos_2;
struct _lam_64798;
struct _lam_2325;
struct _lam_64824;
struct _fI71932_iterator__apos_2;
struct _lam_3822;
struct _lam_4674;
struct _lam_4676;
struct _lam_64805;
struct _fI72143__lam_3713;
struct _fI72146_aux_uncurry;
struct _fI72167__lam_3647;
struct _fI72170_aux_uncurry;
struct _fI72191__lam_3647;
struct _lam_64760;
struct _lam_64763;
struct _fI72586_aux_uncurry;
struct _fI72607__lam_3647;
struct _fI72621_aux_uncurry;
struct _fI72642__lam_3647;
struct _fI72703_search_and_replace__apos_2;
struct _fI72717_iterator__apos_2;
struct _fI72728__lam_3822;
struct _fI72729__lam_4674;
struct _fI72744__lam_4676;
struct _fI72810_aux_uncurry;
struct _fI72831__lam_3641;
struct _fI72845__lam_3713;
struct _fI72869__lam_3713;
struct _fI72983__lam_3713;
struct _fI72986_aux_uncurry;
struct _fI73007__lam_3647;
struct _fI73010_aux_uncurry;
struct _fI73031__lam_3647;
struct _fI73042_aux;
struct _fI73099_aux_uncurry;
struct _fI73120__lam_3647;
struct _fI73122__lam_3758;
struct _fI73171_aux_uncurry;
struct _fI73192__lam_3647;
struct _fI73201__lam_3713;
struct _fI73274__lam_3713;
struct _fI73277_aux_uncurry;
struct _fI73298__lam_3647;
struct _fI73301_aux_uncurry;
struct _fI73322__lam_3647;
struct _lam_64769;
struct _lam_64782;
struct _fI74470_aux;
struct _fI74527_aux_uncurry;
struct _fI74548__lam_3647;
struct _fI74550__lam_3758;
struct _fI74563_aux;
struct _fI74620_aux_uncurry;
struct _fI74641__lam_3647;
struct _fI74643__lam_3758;
struct _fI74668_aux;
struct _lam_4611;
struct _lam_64792;
struct _lam_64793;
struct _fI74967_aux;
struct _lam_4600;
struct _lam_64856;
struct _fI75087_iterator__apos_2;
struct _fI75098__lam_3822;
struct _lam_3690;
struct _lam_3701;
struct _lam_3700;


//-----------------------------------------
//DEFINE FUNCTION CLASSES

//------------------------------
//PURE C FUNCTION <7820>: andthen bool * (unit -> bool) -> bool
 ::flx::rtl::cl_t andthen(  ::flx::rtl::cl_t, _ft75173*);

//------------------------------
//FUNCTION <8883>: isidstart char -> bool
//    parent = None
struct isidstart {
  thread_frame_t *ptf;

  _a112t_75189 i_param_std_4202;
  _a112t_75189 find_mv_4416;
  void* isidstart_mv_2322;
  char x;
  isidstart(thread_frame_t *_ptf);
  isidstart* clone();
   ::flx::rtl::cl_t apply(char const &);
};

//------------------------------
//PURE C FUNCTION <14971>: range int^3 -> list
void* range(thread_frame_t *_ptf,  int, int, int);

//------------------------------
//PURE C FUNCTION <18182>: lstrip string^2 -> string
_a17555t_75163 lstrip( _a17555t_75163, _a17555t_75163);

//------------------------------
//PURE C FUNCTION <18200>: rstrip string^2 -> string
_a17555t_75163 rstrip( _a17555t_75163, _a17555t_75163);

//------------------------------
//FUNCTION <65036>: flx_pkgconfig list -> int * list
//    parent = None
struct flx_pkgconfig {
  thread_frame_t *ptf;

  _a17555t_75163 pkg_param_flx_pkgconfig_64749;
  void* tail_param_flx_pkgconfig_64750;
  void* flx_pkgconfig_mv_64850;
  void* is_empty_mv_3624;
   ::flx::rtl::cl_t _urv75038;
  void* _genout_urv75027;
  void* _genout_urv75026;
  void* _genout_urv74958;
  void* _genout_urv74957;
  void* _genout_urv70874;
  void* y;
  void* _vI75018_x;
  void* args;
  void* result;
  void* dirs;
  _a17555t_75163 extension;
  int keep;
   ::flx::rtl::cl_t backwards;
  int return_code;
   ::flx::rtl::cl_t listkeys;
   ::flx::rtl::cl_t dolist;
  void* recfields;
   ::flx::rtl::cl_t missing;
   ::flx::rtl::cl_t require_pkg_exists;
   ::flx::rtl::cl_t hide;
  void* pkgs;
  void* fields;
  _a17555t_75163 path;
  flx_pkgconfig(thread_frame_t *_ptf);
  flx_pkgconfig* clone();
  _tt75177 apply(void* const &);
};

//------------------------------
//PROCEDURE <65038>: flx_pkgconfig::print_help unit -> void
//    parent = flx_pkgconfig<65036>
struct print_help {
  flx_pkgconfig *ptrflx_pkgconfig;

  print_help  (flx_pkgconfig*);
  void stack_call();
};

//------------------------------
//FUNCTION <65049>: flx_pkgconfig::lexit lex_iterator^2 -> lex_iterator * token_t
//    parent = flx_pkgconfig<65036>
struct lexit {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a19692t_75212 finish;
  _a19692t_75212 ini;
  _a19692t_75212 p4;
  _a19692t_75212 p3;
  _a19692t_75212 p2;
  _a19692t_75212 p1;
  _a19692t_75212 start;
  lexit  (thread_frame_t *_ptf, flx_pkgconfig*);
  _tt75215 apply(_at75213 const &);
};

//------------------------------
//FUNCTION <65076>: flx_pkgconfig::lexstr string -> list
//    parent = flx_pkgconfig<65036>
struct lexstr {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _genout_urv72618;
  void* _genout_urv72373;
  void* _genout_urv72360;
  void* _genout_urv72352;
  void* x1;
  void* _vI72612_y;
  void* _vI72611_x;
  void* _vI72609_x;
  void* recres;
  _a17555t_75163 s;
  _tt75218 _ds2_64762;
  _a17555t_75163 cmd_param_flx_pkgconfig_64665;
  _a17555t_75163 lexeme_param_flx_pkgconfig_64662;
  void* _lam_64755_mv_64756;
  _a19692t_75212 next_param_flx_pkgconfig_64659;
  void* token_param_flx_pkgconfig_64660;
  _tt75215 lexstr_mv_64752;
  _a17555t_75163 _vI65104_s__apos_;
  void* words;
  _a19692t_75212 current;
  _a19692t_75212 _vI65080_finish;
  _a19692t_75212 first;
  _a17555t_75163 _vI65078_s;
  lexstr  (thread_frame_t *_ptf, flx_pkgconfig*);
  lexstr* clone();
  void* apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <65132>: flx_pkgconfig::xfind string^2 -> bool
//    parent = flx_pkgconfig<65036>
struct xfind {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a112t_75189 i_param_std_4194;
  _a112t_75189 find_mv_4396;
  void* xfind_mv_64765;
  _a17555t_75163 c;
  _a17555t_75163 flags;
  xfind  (thread_frame_t *_ptf, flx_pkgconfig*);
  xfind* clone();
   ::flx::rtl::cl_t apply(_at75165 const &);
};

//------------------------------
//PROCEDURE <65140>: flx_pkgconfig::parse_args list -> void
//    parent = flx_pkgconfig<65036>
struct parse_args: ::flx::rtl::con_t {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _genout_urv74728;
  void* _genout_urv74727;
  void* _genout_urv74016;
  void* _genout_urv74015;
  void* _genout_urv73947;
  void* _genout_urv73946;
  void* _vI74721__genout_urv70874;
  void* _vI74720_y;
  void* _vI74719_x;
   ::flx::rtl::cl_t _lam_64776_mv_64778;
  _a17555t_75163 _urv73675;
  _a17555t_75163 data;
  _a17555t_75163 _vI74391_x;
  _a17555t_75163 fld;
  _a17555t_75163 _vI74388_flags;
  _a17555t_75163 arg_param_flx_pkgconfig_64666;
  void* tail_param_flx_pkgconfig_64667;
  void* parse_args_mv_64771;
  void* _vI65207_args;
  parse_args  (thread_frame_t *_ptf, flx_pkgconfig*);
  parse_args* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,void* const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//FUNCTION <65209>: flx_pkgconfig::reattach_drive_letters list -> list
//    parent = flx_pkgconfig<65036>
struct reattach_drive_letters {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t reattach_drive_letters_mv_64788;
  void* other_param_flx_pkgconfig_64717;
  _a17555t_75163 a_param_flx_pkgconfig_64714;
  _a17555t_75163 b_param_flx_pkgconfig_64715;
  void* tail_param_flx_pkgconfig_64716;
  void* reattach_drive_letters_mv_64784;
  void* _a;
  reattach_drive_letters  (thread_frame_t *_ptf, flx_pkgconfig*);
  reattach_drive_letters* clone();
  void* apply(void* const &);
};

//------------------------------
//FUNCTION <65226>: flx_pkgconfig::check_id string -> bool
//    parent = flx_pkgconfig<65036>
struct check_id: _ft75204 {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI71608_x;
  _a17555t_75163 _vI65233_s;
  char elt_param_flx_pkgconfig_64719;
  _ft75226* _generator_flx_pkgconfig_11993;
   ::flx::rtl::cl_t acc;
  void* check_id_mv_64795;
  check_id  (thread_frame_t *_ptf, flx_pkgconfig*);
  check_id* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <65239>: flx_pkgconfig::get_field string -> string^2
//    parent = flx_pkgconfig<65036>
struct get_field {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a112t_75189 _vI72063_i_param_std_4202;
  _a112t_75189 _vI72061_find_mv_4416;
  _a112t_75189 n_param_flx_pkgconfig_64720;
  void* get_field_mv_64801;
  _a17555t_75163 line;
  get_field  (thread_frame_t *_ptf, flx_pkgconfig*);
  get_field* clone();
  _at75165 apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <65247>: flx_pkgconfig::get_variable string -> string^2
//    parent = flx_pkgconfig<65036>
struct get_variable {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t get_variable_mv_64820;
  _a17555t_75163 value_param_flx_pkgconfig_64723;
  _a17555t_75163 get_variable_mv_64816;
  _a17555t_75163 name_param_flx_pkgconfig_64722;
  _a17555t_75163 get_variable_mv_64812;
  _a112t_75189 _vI71871_i_param_std_4202;
  _a112t_75189 _vI71869_find_mv_4416;
  _a112t_75189 n_param_flx_pkgconfig_64721;
  void* get_variable_mv_64807;
  _a17555t_75163 _vI65260_line;
  get_variable  (thread_frame_t *_ptf, flx_pkgconfig*);
  get_variable* clone();
  _at75165 apply(_a17555t_75163 const &);
};

//------------------------------
//PROCEDURE <65261>: flx_pkgconfig::add_val string -> void
//    parent = flx_pkgconfig<65036>
struct add_val: _pt75206 {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI71272_x;
   ::flx::rtl::cl_t _vI71241_insert_unique__apos_3_mv_3743;
  void* _urv71179;
  _a17555t_75163 v;
  add_val  (thread_frame_t *_ptf, flx_pkgconfig*);
  add_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a17555t_75163 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65265>: flx_pkgconfig::tail_val string -> void
//    parent = flx_pkgconfig<65036>
struct tail_val: _pt75206 {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI65267_v;
  tail_val  (thread_frame_t *_ptf, flx_pkgconfig*);
  tail_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a17555t_75163 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65269>: flx_pkgconfig::keep_val string -> void
//    parent = flx_pkgconfig<65036>
struct keep_val: _pt75206 {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI65271_v;
  keep_val  (thread_frame_t *_ptf, flx_pkgconfig*);
  keep_val* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a17555t_75163 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65273>: flx_pkgconfig::handle_pkg string * list -> void
//    parent = flx_pkgconfig<65036>
struct handle_pkg: ::flx::rtl::con_t {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73300_x;
   ::flx::rtl::cl_t _vI73269_insert_unique__apos_3_mv_3743;
  void* _vI73207__urv71179;
  void* trace;
  _a17555t_75163 pkg;
   ::flx::rtl::cl_t found;
  void* variables;
  handle_pkg  (thread_frame_t *_ptf, flx_pkgconfig*);
  handle_pkg* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_tt75182 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65277>: flx_pkgconfig::handle_pkg::_lam_64825 string -> void
//    parent = handle_pkg<65273>
struct _lam_64825: _pt75206 {
  thread_frame_t *ptf;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _genout_urv73168;
  _a17555t_75163 _genout_urv73133;
  void* _vI73009_x;
   ::flx::rtl::cl_t _vI72978_insert_unique__apos_3_mv_3743;
  void* _vI72916__urv71179;
   ::flx::rtl::cl_t _genout_urv72911;
  _a11551t_75208 _genout_urv72910;
  _a11551t_75208 _genout_urv72896;
   ::flx::rtl::cl_t _lam_64825_mv_64827;
  _a17555t_75163 _urv72875;
  _a17555t_75163 dir;
  _a17555t_75163 _vI65284_line;
  void* lines;
  _a11551t_75208 file;
  _a17555t_75163 filename;
  int _lam_64825_mv_64831;
  _lam_64825  (thread_frame_t *_ptf, handle_pkg*, flx_pkgconfig*);
  _lam_64825* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a17555t_75163 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65285>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836 string -> void
//    parent = _lam_64825<65277>
struct _lam_64836: _pt75206 {
  thread_frame_t *ptf;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  int _lam_64836_mv_64840;
  void* _genout_urv72840;
  void* _genout_urv72803;
  void* _vI72835__genout_urv70874;
  void* _vI72834_y;
  void* _vI72833_x;
  void* _vI72169_x;
   ::flx::rtl::cl_t _vI72138_insert_unique__apos_3_mv_3743;
  void* _vI72076__urv71179;
  _a17555t_75163 _vI65308_line;
  void* values;
  _a17555t_75163 value;
  _a17555t_75163 key;
  _at75165 _ds2_64838;
  _a17555t_75163 bdy;
  _a17555t_75163 vval;
  _a17555t_75163 variable;
  _at75165 _ds2_64837;
  _lam_64836  (thread_frame_t *_ptf, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _lam_64836* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a17555t_75163 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65304>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_64848 string -> void
//    parent = _lam_64836<65285>
struct _lam_64848: _pt75206 {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI65306_s;
  _lam_64848  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _lam_64848* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_a17555t_75163 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PROCEDURE <65368>: _init_ unit -> void
//    parent = None
struct _init_: ::flx::rtl::con_t {
  thread_frame_t *ptf;

  void* tail_mv_3628;
  void* t_param_std_3527;
  void* _vI70966_x;
  void* _urv70965;
  void* _genout_urv70957;
  void* _genout_urv70917;
  void* _genout_urv70880;
  void* _vI70952__genout_urv70874;
  void* _vI70951_y;
  void* _vI70950_x;
  _init_(thread_frame_t *_ptf);
  _init_* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//PURE C FUNCTION <69513>: eq string^2 -> bool
 ::flx::rtl::cl_t eq( _a17555t_75163, _a17555t_75163);

//------------------------------
//PURE C FUNCTION <69621>: basic_get_stdout string -> int * string
_tt75218 basic_get_stdout( _a17555t_75163);

//------------------------------
//FUNCTION <70009>: + list * string -> list
//    parent = None
struct _fI70009___plus_: _ft75176 {
  thread_frame_t *ptf;

  void* _vI71542_x;
  _a17555t_75163 _vI70011_y;
  void* _vI70010_x;
  _fI70009___plus_(thread_frame_t *_ptf);
  _fI70009___plus_* clone();
  void* apply(_tt75175 const &);
};

//------------------------------
//FUNCTION <70474>: mem_uncurry (string -> bool) * list -> bool
//    parent = None
struct mem_uncurry {
  thread_frame_t *ptf;

   ::flx::rtl::cl_t _vI71027_mem__apos_2_mv_3708;
  void* _vI71017_mem__apos_2_mv_3703;
  _a17555t_75163 h_param_std_3558;
  void* t_param_std_3557;
  void* xs;
  _ft75204* eq_uncurry;
  mem_uncurry(thread_frame_t *_ptf);
  mem_uncurry* clone();
   ::flx::rtl::cl_t apply(_tt75205 const &);
};

//------------------------------
//PROCEDURE <70477>: iter_uncurry (string -> void) * list -> void
//    parent = None
struct iter_uncurry: ::flx::rtl::con_t {
  thread_frame_t *ptf;

  void* _vI71317_iter__apos_2_mv_3604;
  _a17555t_75163 h_param_std_3521;
  void* t_param_std_3520;
  void* _vI70496_x;
  _pt75206* _f_uncurry;
  iter_uncurry(thread_frame_t *_ptf);
  iter_uncurry* clone();
  ::flx::rtl::con_t *call(::flx::rtl::con_t*,_tt75207 const &);
  ::flx::rtl::con_t *resume();
};

//------------------------------
//FUNCTION <70478>: search_and_replace_uncurry list * string -> string
//    parent = None
struct search_and_replace_uncurry {
  thread_frame_t *ptf;

  _a112t_75189 spos;
  _a112t_75189 n;
  _a17555t_75163 o;
  _a112t_75189 m;
  void* _vI71931_xs;
  void* vs_uncurry;
  _a17555t_75163 _vI70517_v;
  _a17555t_75163 k_param_std_4326;
  _a17555t_75163 b_param_std_4327;
  _ft75261* _generator_strings_8155;
  void* _vI70508_search_and_replace__apos_2_mv_4671;
  search_and_replace_uncurry(thread_frame_t *_ptf);
  search_and_replace_uncurry* clone();
  _a17555t_75163 apply(_tt75210 const &);
};

//------------------------------
//FUNCTION <70479>: cat_uncurry string * list -> string
//    parent = None
struct cat_uncurry: _ft75198 {
  thread_frame_t *ptf;

  void* _vI75086_xs;
  _a17555t_75163 sep_uncurry;
  void* _vI70555_x;
  void* t_param_std_3552_param_std_3555;
  _a17555t_75163 h_param_std_3553_param_std_3556;
  void* tl;
  void* tail_param_std_3549;
  _a17555t_75163 head_param_std_3550;
  _a17555t_75163 r;
  _a17555t_75163 s_param_std_3547;
  _ft75269* _generator_lists_5792;
  _a112t_75189 _vI70543_n;
  void* _vI70540_cat__apos_2_mv_3696;
  void* _vI70537_cat__apos_2_mv_3692;
  void* _vI70534_cat__apos_2_mv_3687;
  cat_uncurry(thread_frame_t *_ptf);
  cat_uncurry* clone();
  _a17555t_75163 apply(_tt75182 const &);
};

//------------------------------
//FUNCTION <70920>: _init_::_a70718_argv int -> string
//    parent = _init_<65368>
struct _a70718_argv {
  thread_frame_t *ptf;
  _init_ *ptr_init_;

  int _a70719;
  _a70718_argv  (thread_frame_t *_ptf, _init_*);
  _a17555t_75163 apply(int const &);
};

//------------------------------
//FUNCTION <70927>: _init_::aux_uncurry list * list -> list
//    parent = _init_<65368>
struct aux_uncurry {
  thread_frame_t *ptf;
  _init_ *ptr_init_;

  void* _vI70944_aux__apos_2_mv_3637;
  int h_param_std_3531;
  void* t_param_std_3530;
  void* out;
  void* inp_uncurry;
  aux_uncurry  (thread_frame_t *_ptf, _init_*);
  aux_uncurry* clone();
  void* apply(_tt75168 const &);
};

//------------------------------
//FUNCTION <70948>: _init_::aux_uncurry::_lam_3641 unit -> bool
//    parent = aux_uncurry<70927>
struct _lam_3641: _ft75173 {
  thread_frame_t *ptf;
  aux_uncurry *ptraux_uncurry;
  _init_ *ptr_init_;

  _lam_3641  (thread_frame_t *_ptf, aux_uncurry*, _init_*);
  _lam_3641* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <70972>: _init_::_lam_3631 unit -> bool
//    parent = _init_<65368>
struct _lam_3631: _ft75173 {
  thread_frame_t *ptf;
  _init_ *ptr_init_;

  _lam_3631  (thread_frame_t *_ptf, _init_*);
  _lam_3631* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71025>: mem_uncurry::_lam_3712 unit -> bool
//    parent = mem_uncurry<70474>
struct _lam_3712: _ft75173 {
  thread_frame_t *ptf;
  mem_uncurry *ptrmem_uncurry;

  _lam_3712  (thread_frame_t *_ptf, mem_uncurry*);
  _lam_3712* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71246>: flx_pkgconfig::add_val::_lam_3713 string -> bool
//    parent = add_val<65261>
struct _lam_3713: _ft75204 {
  thread_frame_t *ptf;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI71247_x;
  _lam_3713  (thread_frame_t *_ptf, add_val*, flx_pkgconfig*);
  _lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <71249>: flx_pkgconfig::add_val::aux_uncurry list^2 -> list
//    parent = add_val<65261>
struct _fI71249_aux_uncurry {
  thread_frame_t *ptf;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI71266_aux__apos_2_mv_3643;
  _a17555t_75163 h_param_std_3533;
  void* t_param_std_3532;
  void* _vI71251_y;
  void* x_uncurry;
  _fI71249_aux_uncurry  (thread_frame_t *_ptf, add_val*, flx_pkgconfig*);
  _fI71249_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <71270>: flx_pkgconfig::add_val::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<71249>
struct _lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI71249_aux_uncurry *ptr_fI71249_aux_uncurry;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_3647  (thread_frame_t *_ptf, _fI71249_aux_uncurry*, add_val*, flx_pkgconfig*);
  _lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71273>: flx_pkgconfig::add_val::aux_uncurry list^2 -> list
//    parent = add_val<65261>
struct _fI71273_aux_uncurry {
  thread_frame_t *ptf;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI71290_aux__apos_2_mv_3643;
  _a17555t_75163 _vI71288_h_param_std_3533;
  void* _vI71287_t_param_std_3532;
  void* _vI71275_y;
  void* _vI71274_x_uncurry;
  _fI71273_aux_uncurry  (thread_frame_t *_ptf, add_val*, flx_pkgconfig*);
  _fI71273_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <71294>: flx_pkgconfig::add_val::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<71273>
struct _fI71294__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI71273_aux_uncurry *ptr_fI71273_aux_uncurry;
  add_val *ptradd_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI71294__lam_3647  (thread_frame_t *_ptf, _fI71273_aux_uncurry*, add_val*, flx_pkgconfig*);
  _fI71294__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71323>: iter_uncurry::_lam_3610 unit -> bool
//    parent = iter_uncurry<70477>
struct _lam_3610: _ft75173 {
  thread_frame_t *ptf;
  iter_uncurry *ptriter_uncurry;

  _lam_3610  (thread_frame_t *_ptf, iter_uncurry*);
  _lam_3610* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71424>: flx_pkgconfig::tail_val::aux list^2 -> list
//    parent = tail_val<65265>
struct aux {
  thread_frame_t *ptf;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t aux_mv_3754;
  void* aux_mv_3749;
  _a17555t_75163 h_param_std_3564;
  void* t_param_std_3563;
  void* _vI71426_out;
  void* inp;
  aux  (thread_frame_t *_ptf, tail_val*, flx_pkgconfig*);
  aux* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <71481>: flx_pkgconfig::tail_val::aux::aux_uncurry list^2 -> list
//    parent = aux<71424>
struct _fI71481_aux_uncurry {
  thread_frame_t *ptf;
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI71498_aux__apos_2_mv_3643;
  _a17555t_75163 _vI71496_h_param_std_3533;
  void* _vI71495_t_param_std_3532;
  void* _vI71483_y;
  void* _vI71482_x_uncurry;
  _fI71481_aux_uncurry  (thread_frame_t *_ptf, aux*, tail_val*, flx_pkgconfig*);
  _fI71481_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <71502>: flx_pkgconfig::tail_val::aux::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<71481>
struct _fI71502__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI71481_aux_uncurry *ptr_fI71481_aux_uncurry;
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI71502__lam_3647  (thread_frame_t *_ptf, _fI71481_aux_uncurry*, aux*, tail_val*, flx_pkgconfig*);
  _fI71502__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71504>: flx_pkgconfig::tail_val::aux::_lam_3758 unit -> bool
//    parent = aux<71424>
struct _lam_3758: _ft75173 {
  thread_frame_t *ptf;
  aux *ptraux;
  tail_val *ptrtail_val;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_3758  (thread_frame_t *_ptf, aux*, tail_val*, flx_pkgconfig*);
  _lam_3758* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71516>: +::aux_uncurry list^2 -> list
//    parent = +<70009>
struct _fI71516_aux_uncurry {
  thread_frame_t *ptf;
  _fI70009___plus_ *ptr_fI70009___plus_;

  void* _vI71533_aux__apos_2_mv_3643;
  _a17555t_75163 _vI71531_h_param_std_3533;
  void* _vI71530_t_param_std_3532;
  void* _vI71518_y;
  void* _vI71517_x_uncurry;
  _fI71516_aux_uncurry  (thread_frame_t *_ptf, _fI70009___plus_*);
  _fI71516_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <71537>: +::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<71516>
struct _fI71537__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI71516_aux_uncurry *ptr_fI71516_aux_uncurry;
  _fI70009___plus_ *ptr_fI70009___plus_;

  _fI71537__lam_3647  (thread_frame_t *_ptf, _fI71516_aux_uncurry*, _fI70009___plus_*);
  _fI71537__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71543>: +::aux_uncurry list^2 -> list
//    parent = +<70009>
struct _fI71543_aux_uncurry {
  thread_frame_t *ptf;
  _fI70009___plus_ *ptr_fI70009___plus_;

  void* _vI71560_aux__apos_2_mv_3643;
  _a17555t_75163 _vI71558_h_param_std_3533;
  void* _vI71557_t_param_std_3532;
  void* _vI71545_y;
  void* _vI71544_x_uncurry;
  _fI71543_aux_uncurry  (thread_frame_t *_ptf, _fI70009___plus_*);
  _fI71543_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <71564>: +::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<71543>
struct _fI71564__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI71543_aux_uncurry *ptr_fI71543_aux_uncurry;
  _fI70009___plus_ *ptr_fI70009___plus_;

  _fI71564__lam_3647  (thread_frame_t *_ptf, _fI71543_aux_uncurry*, _fI70009___plus_*);
  _fI71564__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71604>: flx_pkgconfig::check_id::iterator'2 unit -> opt
//    parent = check_id<65226>
struct _fI71604_iterator__apos_2: _ft75226 {
  thread_frame_t *ptf;
  FLX_PC_DECL
  check_id *ptrcheck_id;
  flx_pkgconfig *ptrflx_pkgconfig;

  int i;
  _fI71604_iterator__apos_2  (thread_frame_t *_ptf, check_id*, flx_pkgconfig*);
  _fI71604_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <71614>: flx_pkgconfig::check_id::_lam_64798 unit -> bool
//    parent = check_id<65226>
struct _lam_64798: _ft75173 {
  thread_frame_t *ptf;
  check_id *ptrcheck_id;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64798  (thread_frame_t *_ptf, check_id*, flx_pkgconfig*);
  _lam_64798* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71671>: isidstart::_lam_2325 unit -> bool
//    parent = isidstart<8883>
struct _lam_2325: _ft75173 {
  thread_frame_t *ptf;
  isidstart *ptrisidstart;

  _lam_2325  (thread_frame_t *_ptf, isidstart*);
  _lam_2325* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71874>: flx_pkgconfig::get_variable::_lam_64824 unit -> bool
//    parent = get_variable<65247>
struct _lam_64824: _ft75173 {
  thread_frame_t *ptf;
  get_variable *ptrget_variable;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64824  (thread_frame_t *_ptf, get_variable*, flx_pkgconfig*);
  _lam_64824* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71932>: search_and_replace_uncurry::iterator'2 unit -> opt
//    parent = search_and_replace_uncurry<70478>
struct _fI71932_iterator__apos_2: _ft75261 {
  thread_frame_t *ptf;
  FLX_PC_DECL
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  void* _vI71939_iterator__apos_2_mv_3819;
  _at75165 h_param_std_3581;
  void* t_param_std_3580;
  _fI71932_iterator__apos_2  (thread_frame_t *_ptf, search_and_replace_uncurry*);
  _fI71932_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <71943>: search_and_replace_uncurry::iterator'2::_lam_3822 unit -> bool
//    parent = iterator'2<71932>
struct _lam_3822: _ft75173 {
  thread_frame_t *ptf;
  _fI71932_iterator__apos_2 *ptr_fI71932_iterator__apos_2;
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_3822  (thread_frame_t *_ptf, _fI71932_iterator__apos_2*, search_and_replace_uncurry*);
  _lam_3822* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71947>: search_and_replace_uncurry::_lam_4674 unit -> bool
//    parent = search_and_replace_uncurry<70478>
struct _lam_4674: _ft75173 {
  thread_frame_t *ptf;
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_4674  (thread_frame_t *_ptf, search_and_replace_uncurry*);
  _lam_4674* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <71991>: search_and_replace_uncurry::_lam_4676 unit -> bool
//    parent = search_and_replace_uncurry<70478>
struct _lam_4676: _ft75173 {
  thread_frame_t *ptf;
  search_and_replace_uncurry *ptrsearch_and_replace_uncurry;

  _lam_4676  (thread_frame_t *_ptf, search_and_replace_uncurry*);
  _lam_4676* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72066>: flx_pkgconfig::get_field::_lam_64805 unit -> bool
//    parent = get_field<65239>
struct _lam_64805: _ft75173 {
  thread_frame_t *ptf;
  get_field *ptrget_field;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64805  (thread_frame_t *_ptf, get_field*, flx_pkgconfig*);
  _lam_64805* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72143>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_3713 string -> bool
//    parent = _lam_64836<65285>
struct _fI72143__lam_3713: _ft75204 {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI72144_x;
  _fI72143__lam_3713  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72143__lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <72146>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry list^2 -> list
//    parent = _lam_64836<65285>
struct _fI72146_aux_uncurry {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI72163_aux__apos_2_mv_3643;
  _a17555t_75163 _vI72161_h_param_std_3533;
  void* _vI72160_t_param_std_3532;
  void* _vI72148_y;
  void* _vI72147_x_uncurry;
  _fI72146_aux_uncurry  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72146_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <72167>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<72146>
struct _fI72167__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI72146_aux_uncurry *ptr_fI72146_aux_uncurry;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72167__lam_3647  (thread_frame_t *_ptf, _fI72146_aux_uncurry*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72167__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72170>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry list^2 -> list
//    parent = _lam_64836<65285>
struct _fI72170_aux_uncurry {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI72187_aux__apos_2_mv_3643;
  _a17555t_75163 _vI72185_h_param_std_3533;
  void* _vI72184_t_param_std_3532;
  void* _vI72172_y;
  void* _vI72171_x_uncurry;
  _fI72170_aux_uncurry  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72170_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <72191>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<72170>
struct _fI72191__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI72170_aux_uncurry *ptr_fI72170_aux_uncurry;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72191__lam_3647  (thread_frame_t *_ptf, _fI72170_aux_uncurry*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72191__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72566>: flx_pkgconfig::lexstr::_lam_64760 unit -> bool
//    parent = lexstr<65076>
struct _lam_64760: _ft75173 {
  thread_frame_t *ptf;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64760  (thread_frame_t *_ptf, lexstr*, flx_pkgconfig*);
  _lam_64760* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72571>: flx_pkgconfig::lexstr::_lam_64763 unit -> bool
//    parent = lexstr<65076>
struct _lam_64763: _ft75173 {
  thread_frame_t *ptf;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64763  (thread_frame_t *_ptf, lexstr*, flx_pkgconfig*);
  _lam_64763* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72586>: flx_pkgconfig::lexstr::aux_uncurry list^2 -> list
//    parent = lexstr<65076>
struct _fI72586_aux_uncurry {
  thread_frame_t *ptf;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI72603_aux__apos_2_mv_3643;
  _a17555t_75163 _vI72601_h_param_std_3533;
  void* _vI72600_t_param_std_3532;
  void* _vI72588_y;
  void* _vI72587_x_uncurry;
  _fI72586_aux_uncurry  (thread_frame_t *_ptf, lexstr*, flx_pkgconfig*);
  _fI72586_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <72607>: flx_pkgconfig::lexstr::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<72586>
struct _fI72607__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI72586_aux_uncurry *ptr_fI72586_aux_uncurry;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72607__lam_3647  (thread_frame_t *_ptf, _fI72586_aux_uncurry*, lexstr*, flx_pkgconfig*);
  _fI72607__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72621>: flx_pkgconfig::lexstr::aux_uncurry list^2 -> list
//    parent = lexstr<65076>
struct _fI72621_aux_uncurry {
  thread_frame_t *ptf;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI72638_aux__apos_2_mv_3643;
  _a17555t_75163 _vI72636_h_param_std_3533;
  void* _vI72635_t_param_std_3532;
  void* _vI72623_y;
  void* _vI72622_x_uncurry;
  _fI72621_aux_uncurry  (thread_frame_t *_ptf, lexstr*, flx_pkgconfig*);
  _fI72621_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <72642>: flx_pkgconfig::lexstr::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<72621>
struct _fI72642__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI72621_aux_uncurry *ptr_fI72621_aux_uncurry;
  lexstr *ptrlexstr;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72642__lam_3647  (thread_frame_t *_ptf, _fI72621_aux_uncurry*, lexstr*, flx_pkgconfig*);
  _fI72642__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72703>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2 string -> string
//    parent = _lam_64836<65285>
struct _fI72703_search_and_replace__apos_2 {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a112t_75189 _vI72737_spos;
  _a112t_75189 _vI72735_n;
  _a17555t_75163 _vI72734_o;
  _a112t_75189 _vI72733_m;
  void* _vI72716_xs;
  _a17555t_75163 _vI72709_v;
  _a17555t_75163 _vI72707_k_param_std_4326;
  _a17555t_75163 _vI72706_b_param_std_4327;
  _ft75261* _vI72704__generator_strings_8155;
  void* _vI72699_search_and_replace__apos_2_mv_4671;
  _fI72703_search_and_replace__apos_2  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72703_search_and_replace__apos_2* clone();
  _a17555t_75163 apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <72717>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::iterator'2 unit -> opt
//    parent = search_and_replace'2<72703>
struct _fI72717_iterator__apos_2: _ft75261 {
  thread_frame_t *ptf;
  FLX_PC_DECL
  _fI72703_search_and_replace__apos_2 *ptr_fI72703_search_and_replace__apos_2;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI72724_iterator__apos_2_mv_3819;
  _at75165 _vI72723_h_param_std_3581;
  void* _vI72722_t_param_std_3580;
  _fI72717_iterator__apos_2  (thread_frame_t *_ptf, _fI72703_search_and_replace__apos_2*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72717_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <72728>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::iterator'2::_lam_3822 unit -> bool
//    parent = iterator'2<72717>
struct _fI72728__lam_3822: _ft75173 {
  thread_frame_t *ptf;
  _fI72717_iterator__apos_2 *ptr_fI72717_iterator__apos_2;
  _fI72703_search_and_replace__apos_2 *ptr_fI72703_search_and_replace__apos_2;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72728__lam_3822  (thread_frame_t *_ptf, _fI72717_iterator__apos_2*, _fI72703_search_and_replace__apos_2*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72728__lam_3822* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72729>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::_lam_4674 unit -> bool
//    parent = search_and_replace'2<72703>
struct _fI72729__lam_4674: _ft75173 {
  thread_frame_t *ptf;
  _fI72703_search_and_replace__apos_2 *ptr_fI72703_search_and_replace__apos_2;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72729__lam_4674  (thread_frame_t *_ptf, _fI72703_search_and_replace__apos_2*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72729__lam_4674* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72744>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::_lam_4676 unit -> bool
//    parent = search_and_replace'2<72703>
struct _fI72744__lam_4676: _ft75173 {
  thread_frame_t *ptf;
  _fI72703_search_and_replace__apos_2 *ptr_fI72703_search_and_replace__apos_2;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72744__lam_4676  (thread_frame_t *_ptf, _fI72703_search_and_replace__apos_2*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72744__lam_4676* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72810>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry list^2 -> list
//    parent = _lam_64836<65285>
struct _fI72810_aux_uncurry {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI72827_aux__apos_2_mv_3637;
  _a17555t_75163 _vI72825_h_param_std_3531;
  void* _vI72824_t_param_std_3530;
  void* _vI72812_out;
  void* _vI72811_inp_uncurry;
  _fI72810_aux_uncurry  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72810_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <72831>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry::_lam_3641 unit -> bool
//    parent = aux_uncurry<72810>
struct _fI72831__lam_3641: _ft75173 {
  thread_frame_t *ptf;
  _fI72810_aux_uncurry *ptr_fI72810_aux_uncurry;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI72831__lam_3641  (thread_frame_t *_ptf, _fI72810_aux_uncurry*, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72831__lam_3641* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <72845>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_3713 string -> bool
//    parent = _lam_64836<65285>
struct _fI72845__lam_3713: _ft75204 {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI72846_x;
  _fI72845__lam_3713  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72845__lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <72869>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_3713 string -> bool
//    parent = _lam_64836<65285>
struct _fI72869__lam_3713: _ft75204 {
  thread_frame_t *ptf;
  _lam_64836 *ptr_lam_64836;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI72870_x;
  _fI72869__lam_3713  (thread_frame_t *_ptf, _lam_64836*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72869__lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <72983>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_3713 string -> bool
//    parent = _lam_64825<65277>
struct _fI72983__lam_3713: _ft75204 {
  thread_frame_t *ptf;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI72984_x;
  _fI72983__lam_3713  (thread_frame_t *_ptf, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72983__lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <72986>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry list^2 -> list
//    parent = _lam_64825<65277>
struct _fI72986_aux_uncurry {
  thread_frame_t *ptf;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73003_aux__apos_2_mv_3643;
  _a17555t_75163 _vI73001_h_param_std_3533;
  void* _vI73000_t_param_std_3532;
  void* _vI72988_y;
  void* _vI72987_x_uncurry;
  _fI72986_aux_uncurry  (thread_frame_t *_ptf, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI72986_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73007>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<72986>
struct _fI73007__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI72986_aux_uncurry *ptr_fI72986_aux_uncurry;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73007__lam_3647  (thread_frame_t *_ptf, _fI72986_aux_uncurry*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73007__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73010>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry list^2 -> list
//    parent = _lam_64825<65277>
struct _fI73010_aux_uncurry {
  thread_frame_t *ptf;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73027_aux__apos_2_mv_3643;
  _a17555t_75163 _vI73025_h_param_std_3533;
  void* _vI73024_t_param_std_3532;
  void* _vI73012_y;
  void* _vI73011_x_uncurry;
  _fI73010_aux_uncurry  (thread_frame_t *_ptf, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73010_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73031>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<73010>
struct _fI73031__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI73010_aux_uncurry *ptr_fI73010_aux_uncurry;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73031__lam_3647  (thread_frame_t *_ptf, _fI73010_aux_uncurry*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73031__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73042>: flx_pkgconfig::handle_pkg::_lam_64825::aux list^2 -> list
//    parent = _lam_64825<65277>
struct _fI73042_aux {
  thread_frame_t *ptf;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI73124_aux_mv_3754;
  void* _vI73090_aux_mv_3749;
  _a17555t_75163 _vI73088_h_param_std_3564;
  void* _vI73087_t_param_std_3563;
  void* _vI73044_out;
  void* _vI73043_inp;
  _fI73042_aux  (thread_frame_t *_ptf, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73042_aux* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73099>: flx_pkgconfig::handle_pkg::_lam_64825::aux::aux_uncurry list^2 -> list
//    parent = aux<73042>
struct _fI73099_aux_uncurry {
  thread_frame_t *ptf;
  _fI73042_aux *ptr_fI73042_aux;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73116_aux__apos_2_mv_3643;
  _a17555t_75163 _vI73114_h_param_std_3533;
  void* _vI73113_t_param_std_3532;
  void* _vI73101_y;
  void* _vI73100_x_uncurry;
  _fI73099_aux_uncurry  (thread_frame_t *_ptf, _fI73042_aux*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73099_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73120>: flx_pkgconfig::handle_pkg::_lam_64825::aux::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<73099>
struct _fI73120__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI73099_aux_uncurry *ptr_fI73099_aux_uncurry;
  _fI73042_aux *ptr_fI73042_aux;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73120__lam_3647  (thread_frame_t *_ptf, _fI73099_aux_uncurry*, _fI73042_aux*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73120__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73122>: flx_pkgconfig::handle_pkg::_lam_64825::aux::_lam_3758 unit -> bool
//    parent = aux<73042>
struct _fI73122__lam_3758: _ft75173 {
  thread_frame_t *ptf;
  _fI73042_aux *ptr_fI73042_aux;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73122__lam_3758  (thread_frame_t *_ptf, _fI73042_aux*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73122__lam_3758* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73171>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry list^2 -> list
//    parent = _lam_64825<65277>
struct _fI73171_aux_uncurry {
  thread_frame_t *ptf;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73188_aux__apos_2_mv_3643;
  _a17555t_75163 _vI73186_h_param_std_3533;
  void* _vI73185_t_param_std_3532;
  void* _vI73173_y;
  void* _vI73172_x_uncurry;
  _fI73171_aux_uncurry  (thread_frame_t *_ptf, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73171_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73192>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<73171>
struct _fI73192__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI73171_aux_uncurry *ptr_fI73171_aux_uncurry;
  _lam_64825 *ptr_lam_64825;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73192__lam_3647  (thread_frame_t *_ptf, _fI73171_aux_uncurry*, _lam_64825*, handle_pkg*, flx_pkgconfig*);
  _fI73192__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73201>: flx_pkgconfig::handle_pkg::_lam_3713 string -> bool
//    parent = handle_pkg<65273>
struct _fI73201__lam_3713: _ft75204 {
  thread_frame_t *ptf;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI73202_x;
  _fI73201__lam_3713  (thread_frame_t *_ptf, handle_pkg*, flx_pkgconfig*);
  _fI73201__lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <73274>: flx_pkgconfig::handle_pkg::_lam_3713 string -> bool
//    parent = handle_pkg<65273>
struct _fI73274__lam_3713: _ft75204 {
  thread_frame_t *ptf;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a17555t_75163 _vI73275_x;
  _fI73274__lam_3713  (thread_frame_t *_ptf, handle_pkg*, flx_pkgconfig*);
  _fI73274__lam_3713* clone();
   ::flx::rtl::cl_t apply(_a17555t_75163 const &);
};

//------------------------------
//FUNCTION <73277>: flx_pkgconfig::handle_pkg::aux_uncurry list^2 -> list
//    parent = handle_pkg<65273>
struct _fI73277_aux_uncurry {
  thread_frame_t *ptf;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73294_aux__apos_2_mv_3643;
  _a17555t_75163 _vI73292_h_param_std_3533;
  void* _vI73291_t_param_std_3532;
  void* _vI73279_y;
  void* _vI73278_x_uncurry;
  _fI73277_aux_uncurry  (thread_frame_t *_ptf, handle_pkg*, flx_pkgconfig*);
  _fI73277_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73298>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<73277>
struct _fI73298__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI73277_aux_uncurry *ptr_fI73277_aux_uncurry;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73298__lam_3647  (thread_frame_t *_ptf, _fI73277_aux_uncurry*, handle_pkg*, flx_pkgconfig*);
  _fI73298__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73301>: flx_pkgconfig::handle_pkg::aux_uncurry list^2 -> list
//    parent = handle_pkg<65273>
struct _fI73301_aux_uncurry {
  thread_frame_t *ptf;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI73318_aux__apos_2_mv_3643;
  _a17555t_75163 _vI73316_h_param_std_3533;
  void* _vI73315_t_param_std_3532;
  void* _vI73303_y;
  void* _vI73302_x_uncurry;
  _fI73301_aux_uncurry  (thread_frame_t *_ptf, handle_pkg*, flx_pkgconfig*);
  _fI73301_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <73322>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<73301>
struct _fI73322__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI73301_aux_uncurry *ptr_fI73301_aux_uncurry;
  handle_pkg *ptrhandle_pkg;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI73322__lam_3647  (thread_frame_t *_ptf, _fI73301_aux_uncurry*, handle_pkg*, flx_pkgconfig*);
  _fI73322__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <73512>: flx_pkgconfig::xfind::_lam_64769 unit -> bool
//    parent = xfind<65132>
struct _lam_64769: _ft75173 {
  thread_frame_t *ptf;
  xfind *ptrxfind;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64769  (thread_frame_t *_ptf, xfind*, flx_pkgconfig*);
  _lam_64769* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74379>: flx_pkgconfig::parse_args::_lam_64782 unit -> bool
//    parent = parse_args<65140>
struct _lam_64782: _ft75173 {
  thread_frame_t *ptf;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64782  (thread_frame_t *_ptf, parse_args*, flx_pkgconfig*);
  _lam_64782* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74470>: flx_pkgconfig::parse_args::aux list^2 -> list
//    parent = parse_args<65140>
struct _fI74470_aux {
  thread_frame_t *ptf;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI74552_aux_mv_3754;
  void* _vI74518_aux_mv_3749;
  _a17555t_75163 _vI74516_h_param_std_3564;
  void* _vI74515_t_param_std_3563;
  void* _vI74472_out;
  void* _vI74471_inp;
  _fI74470_aux  (thread_frame_t *_ptf, parse_args*, flx_pkgconfig*);
  _fI74470_aux* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <74527>: flx_pkgconfig::parse_args::aux::aux_uncurry list^2 -> list
//    parent = aux<74470>
struct _fI74527_aux_uncurry {
  thread_frame_t *ptf;
  _fI74470_aux *ptr_fI74470_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI74544_aux__apos_2_mv_3643;
  _a17555t_75163 _vI74542_h_param_std_3533;
  void* _vI74541_t_param_std_3532;
  void* _vI74529_y;
  void* _vI74528_x_uncurry;
  _fI74527_aux_uncurry  (thread_frame_t *_ptf, _fI74470_aux*, parse_args*, flx_pkgconfig*);
  _fI74527_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <74548>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<74527>
struct _fI74548__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI74527_aux_uncurry *ptr_fI74527_aux_uncurry;
  _fI74470_aux *ptr_fI74470_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI74548__lam_3647  (thread_frame_t *_ptf, _fI74527_aux_uncurry*, _fI74470_aux*, parse_args*, flx_pkgconfig*);
  _fI74548__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74550>: flx_pkgconfig::parse_args::aux::_lam_3758 unit -> bool
//    parent = aux<74470>
struct _fI74550__lam_3758: _ft75173 {
  thread_frame_t *ptf;
  _fI74470_aux *ptr_fI74470_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI74550__lam_3758  (thread_frame_t *_ptf, _fI74470_aux*, parse_args*, flx_pkgconfig*);
  _fI74550__lam_3758* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74563>: flx_pkgconfig::parse_args::aux list^2 -> list
//    parent = parse_args<65140>
struct _fI74563_aux {
  thread_frame_t *ptf;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

   ::flx::rtl::cl_t _vI74645_aux_mv_3754;
  void* _vI74611_aux_mv_3749;
  _a17555t_75163 _vI74609_h_param_std_3564;
  void* _vI74608_t_param_std_3563;
  void* _vI74565_out;
  void* _vI74564_inp;
  _fI74563_aux  (thread_frame_t *_ptf, parse_args*, flx_pkgconfig*);
  _fI74563_aux* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <74620>: flx_pkgconfig::parse_args::aux::aux_uncurry list^2 -> list
//    parent = aux<74563>
struct _fI74620_aux_uncurry {
  thread_frame_t *ptf;
  _fI74563_aux *ptr_fI74563_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  void* _vI74637_aux__apos_2_mv_3643;
  _a17555t_75163 _vI74635_h_param_std_3533;
  void* _vI74634_t_param_std_3532;
  void* _vI74622_y;
  void* _vI74621_x_uncurry;
  _fI74620_aux_uncurry  (thread_frame_t *_ptf, _fI74563_aux*, parse_args*, flx_pkgconfig*);
  _fI74620_aux_uncurry* clone();
  void* apply(_at75201 const &);
};

//------------------------------
//FUNCTION <74641>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_3647 unit -> bool
//    parent = aux_uncurry<74620>
struct _fI74641__lam_3647: _ft75173 {
  thread_frame_t *ptf;
  _fI74620_aux_uncurry *ptr_fI74620_aux_uncurry;
  _fI74563_aux *ptr_fI74563_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI74641__lam_3647  (thread_frame_t *_ptf, _fI74620_aux_uncurry*, _fI74563_aux*, parse_args*, flx_pkgconfig*);
  _fI74641__lam_3647* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74643>: flx_pkgconfig::parse_args::aux::_lam_3758 unit -> bool
//    parent = aux<74563>
struct _fI74643__lam_3758: _ft75173 {
  thread_frame_t *ptf;
  _fI74563_aux *ptr_fI74563_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _fI74643__lam_3758  (thread_frame_t *_ptf, _fI74563_aux*, parse_args*, flx_pkgconfig*);
  _fI74643__lam_3758* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74668>: flx_pkgconfig::parse_args::aux string * list -> list
//    parent = parse_args<65140>
struct _fI74668_aux: _ft75197 {
  thread_frame_t *ptf;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a112t_75189 i_param_std_4222;
  _a112t_75189 find_first_of_mv_4466;
  _a112t_75189 n_param_std_4281;
  void* aux_mv_4607;
  void* _vI74674_y;
  _a17555t_75163 _vI74673_x;
  _fI74668_aux  (thread_frame_t *_ptf, parse_args*, flx_pkgconfig*);
  _fI74668_aux* clone();
  void* apply(_tt75182 const &);
};

//------------------------------
//FUNCTION <74715>: flx_pkgconfig::parse_args::aux::_lam_4611 unit -> bool
//    parent = aux<74668>
struct _lam_4611: _ft75173 {
  thread_frame_t *ptf;
  _fI74668_aux *ptr_fI74668_aux;
  parse_args *ptrparse_args;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_4611  (thread_frame_t *_ptf, _fI74668_aux*, parse_args*, flx_pkgconfig*);
  _lam_4611* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74809>: flx_pkgconfig::reattach_drive_letters::_lam_64792 unit -> bool
//    parent = reattach_drive_letters<65209>
struct _lam_64792: _ft75173 {
  thread_frame_t *ptf;
  reattach_drive_letters *ptrreattach_drive_letters;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64792  (thread_frame_t *_ptf, reattach_drive_letters*, flx_pkgconfig*);
  _lam_64792* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74810>: flx_pkgconfig::reattach_drive_letters::_lam_64792::_lam_64793 unit -> bool
//    parent = _lam_64792<74809>
struct _lam_64793: _ft75173 {
  thread_frame_t *ptf;
  _lam_64792 *ptr_lam_64792;
  reattach_drive_letters *ptrreattach_drive_letters;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64793  (thread_frame_t *_ptf, _lam_64792*, reattach_drive_letters*, flx_pkgconfig*);
  _lam_64793* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <74967>: flx_pkgconfig::aux string * list -> list
//    parent = flx_pkgconfig<65036>
struct _fI74967_aux: _ft75197 {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _a112t_75189 _vI75009_i_param_std_4202;
  _a112t_75189 _vI75007_find_mv_4416;
  _a112t_75189 n_param_std_4277;
  void* aux_mv_4596;
  void* _vI74973_y;
  _a17555t_75163 _vI74972_x;
  _fI74967_aux  (thread_frame_t *_ptf, flx_pkgconfig*);
  _fI74967_aux* clone();
  void* apply(_tt75182 const &);
};

//------------------------------
//FUNCTION <75014>: flx_pkgconfig::aux::_lam_4600 unit -> bool
//    parent = aux<74967>
struct _lam_4600: _ft75173 {
  thread_frame_t *ptf;
  _fI74967_aux *ptr_fI74967_aux;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_4600  (thread_frame_t *_ptf, _fI74967_aux*, flx_pkgconfig*);
  _lam_4600* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <75059>: flx_pkgconfig::_lam_64856 unit -> bool
//    parent = flx_pkgconfig<65036>
struct _lam_64856: _ft75173 {
  thread_frame_t *ptf;
  flx_pkgconfig *ptrflx_pkgconfig;

  _lam_64856  (thread_frame_t *_ptf, flx_pkgconfig*);
  _lam_64856* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <75087>: cat_uncurry::iterator'2 unit -> opt
//    parent = cat_uncurry<70479>
struct _fI75087_iterator__apos_2: _ft75269 {
  thread_frame_t *ptf;
  FLX_PC_DECL
  cat_uncurry *ptrcat_uncurry;

  void* _vI75094_iterator__apos_2_mv_3819;
  _a17555t_75163 _vI75093_h_param_std_3581;
  void* _vI75092_t_param_std_3580;
  _fI75087_iterator__apos_2  (thread_frame_t *_ptf, cat_uncurry*);
  _fI75087_iterator__apos_2* clone();
  void* apply();
};

//------------------------------
//FUNCTION <75098>: cat_uncurry::iterator'2::_lam_3822 unit -> bool
//    parent = iterator'2<75087>
struct _fI75098__lam_3822: _ft75173 {
  thread_frame_t *ptf;
  _fI75087_iterator__apos_2 *ptr_fI75087_iterator__apos_2;
  cat_uncurry *ptrcat_uncurry;

  _fI75098__lam_3822  (thread_frame_t *_ptf, _fI75087_iterator__apos_2*, cat_uncurry*);
  _fI75098__lam_3822* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <75102>: cat_uncurry::_lam_3690 unit -> bool
//    parent = cat_uncurry<70479>
struct _lam_3690: _ft75173 {
  thread_frame_t *ptf;
  cat_uncurry *ptrcat_uncurry;

  _lam_3690  (thread_frame_t *_ptf, cat_uncurry*);
  _lam_3690* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <75112>: cat_uncurry::_lam_3701 unit -> bool
//    parent = cat_uncurry<70479>
struct _lam_3701: _ft75173 {
  thread_frame_t *ptf;
  cat_uncurry *ptrcat_uncurry;

  _lam_3701  (thread_frame_t *_ptf, cat_uncurry*);
  _lam_3701* clone();
   ::flx::rtl::cl_t apply();
};

//------------------------------
//FUNCTION <75119>: cat_uncurry::_lam_3700 unit -> bool
//    parent = cat_uncurry<70479>
struct _lam_3700: _ft75173 {
  thread_frame_t *ptf;
  cat_uncurry *ptrcat_uncurry;

  _lam_3700  (thread_frame_t *_ptf, cat_uncurry*);
  _lam_3700* clone();
   ::flx::rtl::cl_t apply();
};

struct thread_frame_t {
  int argc;
  char **argv;
  FILE *flx_stdin;
  FILE *flx_stdout;
  FILE *flx_stderr;
  ::flx::gc::generic::gc_profile_t *gcp;
  ::flx::run::flx_world *world;
  thread_frame_t(
  );
  _a17555t_75163 lower;
  _a17555t_75163 letters;
  _a17555t_75163 upper;
  _tt75177 _ds2_64642;
  void* _vI65367_result;
  int _vI65366_return_code;

};

FLX_DCL_THREAD_FRAME

}} // namespace flxusr::flx_pkgconfig
//header complete
#endif
