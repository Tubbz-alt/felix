//Input file: build\release\share\src\tools\flx_pkgconfig
//Generated by Felix Version 2019.01.06
//Timestamp: 2020/3/7 3:20:51 UTC
//Timestamp: 2020/3/6 21:20:51 (local)
#define FLX_EXTERN_flx_pkgconfig FLX_EXPORT
#include "flx_pkgconfig.hpp"
#include <stdio.h>
#define comma ,

//-----------------------------------------
//EMIT USER BODY CODE
using namespace ::flxusr::flx_pkgconfig;

    static void _rev(void** plt, _a17555t_75163*) // second arg is a dummy
    { // in place reversal
      struct node_t { void *tail; _a17555t_75163 elt; };
      void *nutail = 0;
      void *cur = *plt;
      while(cur)
      {
        void *oldtail = ((node_t*)FLX_VNP(cur))->tail;   // save old tail in temp
        ((node_t*)FLX_VNP(cur))->tail = nutail;          // overwrite current node tail
        nutail = cur;                                   // set new tail to current
        cur = oldtail;                                  // set current to saved old tail
      }
      *plt = nutail;                                    // overwrite
    }
    

//-----------------------------------------
namespace flxusr { namespace flx_pkgconfig {

//-----------------------------------------
//DEFINE OFFSET tables for GC
#include "flx_pkgconfig.rtti"
FLX_DEF_THREAD_FRAME
//Thread Frame Constructor
thread_frame_t::thread_frame_t(
) :
  gcp(0)
{}

//-----------------------------------------
//DEFINE FUNCTION CLASS METHODS
#include "flx_pkgconfig.ctors_cpp"
//------------------------------
//FUNCTION <73120>: flx_pkgconfig::handle_pkg::_lam_64825::aux::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI73120__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <70474>: mem_uncurry: Apply method
 ::flx::rtl::cl_t mem_uncurry::apply(_tt75205 const &_arg ){
  eq_uncurry = _arg.mem_0;
  xs = _arg.mem_1;
    start_71030_L71030:;
      _vI71017_mem__apos_2_mv_3703  = xs; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71017_mem__apos_2_mv_3703)==0) ) goto _ml3705_L71016;
      return 0;
    _ml3705_L71016:;
/*match case 2:|Snoc (t_param_std_3557, h_param_std_3558)*/
      if(!andthen(FLX_VNI(_vI71017_mem__apos_2_mv_3703)==1,(FLX_NEWP(_lam_3712)(ptf, this))) ) goto _ml3706_L71013;
      h_param_std_3558  = (*((_tt75175*)FLX_VNP(_vI71017_mem__apos_2_mv_3703))).mem_1; //init
      t_param_std_3557  = (*((_tt75175*)FLX_VNP(_vI71017_mem__apos_2_mv_3703))).mem_0; //init
      _vI71027_mem__apos_2_mv_3708  = (eq_uncurry)->clone()
      ->apply(h_param_std_3558) /* general apply */; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI71027_mem__apos_2_mv_3708==1) ) goto _ml3710_L71026;
      return 1;
    _ml3710_L71026:;
/*match case 2:any*/
/*parallel assignment (1)*/
      xs  = t_param_std_3557; //init
      goto start_71030_L71030;
    _ml3706_L71013:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",551,5,553,58);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",550,3,555,4); // HACK! 
}

//------------------------------
//FUNCTION <75014>: flx_pkgconfig::aux::_lam_4600: Apply method
 ::flx::rtl::cl_t _lam_4600::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",387,9,387,15); // HACK! 
}

//------------------------------
//FUNCTION <72845>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_3713: Apply method
 ::flx::rtl::cl_t _fI72845__lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI72846_x = _arg;
      return eq(_vI72846_x,ptr_lam_64836->key);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <74668>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI74668_aux::apply(_tt75182 const &_arg ){
  _vI74673_x = _arg.mem_0;
  _vI74674_y = _arg.mem_1;
    start_73879_L74718:;
      find_first_of_mv_4466  = _vI74673_x.find_first_of((" \n\x0D\x09,")); //init
/*begin match*/
/*match case 1:(i_param_std_4221 when (== (i_param_std_4221, stl_npos)))*/
      if(!((find_first_of_mv_4466 == ::std::string::npos)) ) goto _ml4468_L74711;
      aux_mv_4607  = (void* /*VR_nullptr*/ )0; //init
      goto _end_inline_find_first_of_73835_L74712;
    _ml4468_L74711:;
/*match case 2:i_param_std_4222*/
      i_param_std_4222  = find_first_of_mv_4466; //init
      aux_mv_4607  = FLX_VNR(1, new(*ptf->gcp, _a112t_75189_ptr_map, true) _a112t_75189 (i_param_std_4222)); //init
    _end_inline_find_first_of_73835_L74712:;
/*begin match*/
/*match case 1:|None*/
      if(!(FLX_VNI(aux_mv_4607)==0) ) goto _ml4609_L74699;
      return FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74674_y, _vI74673_x)));
    _ml4609_L74699:;
/*match case 2:|Some n_param_std_4281*/
      if(!andthen(FLX_VNI(aux_mv_4607)==1,(FLX_NEWP(_lam_4611)(ptf, this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml4610_L74700;
      n_param_std_4281  = *((_a112t_75189*)FLX_VNP(aux_mv_4607)); //init
/*parallel assignment (2)*/
      _vI74674_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74674_y, ::flx::rtl::strutil::substr(_vI74673_x,0,n_param_std_4281)))); //init
      _vI74673_x  = ::flx::rtl::strutil::substr(_vI74673_x,n_param_std_4281 + 1 ,_vI74673_x.size()); //init
      goto start_73879_L74718;
    _ml4610_L74700:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",409,7,411,61);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",408,5,413,6); // HACK! 
}

//------------------------------
//FUNCTION <72191>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI72191__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <71424>: flx_pkgconfig::tail_val::aux: Apply method
void* aux::apply(_at75201 const &_arg ){
  inp = (_arg.data)[0];
  _vI71426_out = (_arg.data)[1];
    start_71418_L71508:;
      aux_mv_3749  = inp; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(aux_mv_3749)==0) ) goto _ml3751_L71471;
      return _fI71481_aux_uncurry(ptf, this, ptrtail_val, ptrflx_pkgconfig)
      .apply(_at75201(FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71426_out, ptrtail_val->_vI65267_v))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    _ml3751_L71471:;
/*match case 2:|Snoc (t_param_std_3563, h_param_std_3564)*/
      if(!andthen(FLX_VNI(aux_mv_3749)==1,(FLX_NEWP(_lam_3758)(ptf, this, ptrtail_val, ptrflx_pkgconfig))) ) goto _ml3752_L71468;
      h_param_std_3564  = (*((_tt75175*)FLX_VNP(aux_mv_3749))).mem_1; //init
      t_param_std_3563  = (*((_tt75175*)FLX_VNP(aux_mv_3749))).mem_0; //init
      aux_mv_3754  = !eq(h_param_std_3564,ptrtail_val->_vI65267_v) ; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(aux_mv_3754==1) ) goto _ml3756_L71505;
/*parallel assignment (2)*/
      _vI71426_out  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71426_out, h_param_std_3564))); //init
      inp  = t_param_std_3563; //init
      goto start_71418_L71508;
    _ml3756_L71505:;
/*match case 2:any*/
/*parallel assignment (1)*/
      inp  = t_param_std_3563; //init
      goto start_71418_L71508;
    _ml3752_L71468:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",625,7,630,14);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",624,5,632,6); // HACK! 
}

//------------------------------
//FUNCTION <71516>: +::aux_uncurry: Apply method
void* _fI71516_aux_uncurry::apply(_at75201 const &_arg ){
  _vI71517_x_uncurry = (_arg.data)[0];
  _vI71518_y = (_arg.data)[1];
    start_71064_L71538:;
      _vI71533_aux__apos_2_mv_3643  = _vI71517_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71533_aux__apos_2_mv_3643)==0) ) goto _ml3645_L71532;
      return _vI71518_y;
    _ml3645_L71532:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI71533_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI71537__lam_3647)(ptf, this, ptr_fI70009___plus_))) ) goto _ml3646_L71529;
      _vI71531_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI71533_aux__apos_2_mv_3643))).mem_1; //init
      _vI71530_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI71533_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI71518_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71518_y, _vI71531_h_param_std_3533))); //init
      _vI71517_x_uncurry  = _vI71530_t_param_std_3532; //init
      goto start_71064_L71538;
    _ml3646_L71529:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <73042>: flx_pkgconfig::handle_pkg::_lam_64825::aux: Apply method
void* _fI73042_aux::apply(_at75201 const &_arg ){
  _vI73043_inp = (_arg.data)[0];
  _vI73044_out = (_arg.data)[1];
    start_71418_L73126:;
      _vI73090_aux_mv_3749  = _vI73043_inp; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73090_aux_mv_3749)==0) ) goto _ml3751_L73089;
      return _fI73099_aux_uncurry(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73044_out, ptrhandle_pkg->pkg))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    _ml3751_L73089:;
/*match case 2:|Snoc (t_param_std_3563, h_param_std_3564)*/
      if(!andthen(FLX_VNI(_vI73090_aux_mv_3749)==1,(FLX_NEWP(_fI73122__lam_3758)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3752_L73086;
      _vI73088_h_param_std_3564  = (*((_tt75175*)FLX_VNP(_vI73090_aux_mv_3749))).mem_1; //init
      _vI73087_t_param_std_3563  = (*((_tt75175*)FLX_VNP(_vI73090_aux_mv_3749))).mem_0; //init
      _vI73124_aux_mv_3754  = !eq(_vI73088_h_param_std_3564,ptrhandle_pkg->pkg) ; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI73124_aux_mv_3754==1) ) goto _ml3756_L73123;
/*parallel assignment (2)*/
      _vI73044_out  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73044_out, _vI73088_h_param_std_3564))); //init
      _vI73043_inp  = _vI73087_t_param_std_3563; //init
      goto start_71418_L73126;
    _ml3756_L73123:;
/*match case 2:any*/
/*parallel assignment (1)*/
      _vI73043_inp  = _vI73087_t_param_std_3563; //init
      goto start_71418_L73126;
    _ml3752_L73086:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",625,7,630,14);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",624,5,632,6); // HACK! 
}

//------------------------------
//FUNCTION <71025>: mem_uncurry::_lam_3712: Apply method
 ::flx::rtl::cl_t _lam_3712::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",553,7,553,16); // HACK! 
}

//------------------------------
//FUNCTION <71932>: search_and_replace_uncurry::iterator'2: Apply method
void* _fI71932_iterator__apos_2::apply(){
  FLX_START_SWITCH
    continue__ll_lists_5922_L71933:;
      _vI71939_iterator__apos_2_mv_3819  = ptrsearch_and_replace_uncurry->_vI71931_xs; //init
/*begin match*/
/*match case 1:|Snoc (t_param_std_3580, h_param_std_3581)*/
      if(!andthen(FLX_VNI(_vI71939_iterator__apos_2_mv_3819)==1,(FLX_NEWP(_lam_3822)(ptf, this, ptrsearch_and_replace_uncurry))) ) goto _ml3821_L71936;
      h_param_std_3581  = (*((_tt75211*)FLX_VNP(_vI71939_iterator__apos_2_mv_3819))).mem_1; //init
      t_param_std_3580  = (*((_tt75211*)FLX_VNP(_vI71939_iterator__apos_2_mv_3819))).mem_0; //init
      ptrsearch_and_replace_uncurry->_vI71931_xs = t_param_std_3580; //assign simple
      FLX_SET_PC(75286)
      return FLX_VNR(1, new(*ptf->gcp, _at75165_ptr_map, true) _at75165 (h_param_std_3581));//yield
    FLX_CASE_LABEL(75286)
      goto continue__ll_lists_5922_L71933;
    _ml3821_L71936:;
/*match case 2:|Empty*/
      if(!(FLX_VNI(_vI71939_iterator__apos_2_mv_3819)==0) ) goto _ml3823_L71935;
      return (void* /*VR_nullptr*/ )0;
    _ml3823_L71935:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",725,9,728,18);
;
      goto continue__ll_lists_5922_L71933;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",723,5,730,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <74643>: flx_pkgconfig::parse_args::aux::_lam_3758: Apply method
 ::flx::rtl::cl_t _fI74643__lam_3758::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",627,9,627,18); // HACK! 
}

//------------------------------
//FUNCTION <65209>: flx_pkgconfig::reattach_drive_letters: Apply method
void* reattach_drive_letters::apply(void* const &_arg ){
  _a = _arg;
      reattach_drive_letters_mv_64784  = _a; //init
/*begin match*/
/*match case 1:|Cons (a_param_flx_pkgconfig_64714, |Cons (b_param_flx_pkgconfig_64715, tail_param_flx_pkgconfig_64716))*/
      if(!andthen(!!reattach_drive_letters_mv_64784 ,(FLX_NEWP(_lam_64792)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64786_L74798;
      tail_param_flx_pkgconfig_64716  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(((reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(reattach_drive_letters_mv_64784))).mem_1)))).mem_1; //init
      b_param_flx_pkgconfig_64715  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(((reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(reattach_drive_letters_mv_64784))).mem_1)))).mem_0; //init
      a_param_flx_pkgconfig_64714  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(reattach_drive_letters_mv_64784))).mem_0; //init
      reattach_drive_letters_mv_64788  = ((a_param_flx_pkgconfig_64714.size() == (static_cast<_a112t_75189>(1)/*int.flx: ctor size from _a112t_75189*/)) && (!!isalpha((::flx::rtl::strutil::subscript(a_param_flx_pkgconfig_64714,0)))) ) && (::flx::rtl::strutil::substr(b_param_flx_pkgconfig_64715,0,::std::string("\\").size()) == ::std::string("\\")) ; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(reattach_drive_letters_mv_64788==1) ) goto _ml64790_L74813;
      return FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(reattach_drive_letters(ptf, ptrflx_pkgconfig)
      .apply(tail_param_flx_pkgconfig_64716) /* apply_stack */, (a_param_flx_pkgconfig_64714 + ::std::string(":") ) + b_param_flx_pkgconfig_64715 )));
    _ml64790_L74813:;
/*match case 2:any*/
      return FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(reattach_drive_letters(ptf, ptrflx_pkgconfig)
      .apply(FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(tail_param_flx_pkgconfig_64716, b_param_flx_pkgconfig_64715)))) /* apply_stack */, a_param_flx_pkgconfig_64714)));
    _ml64786_L74798:;
/*match case 2:other_param_flx_pkgconfig_64717*/
      other_param_flx_pkgconfig_64717  = reattach_drive_letters_mv_64784; //init
      return other_param_flx_pkgconfig_64717;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",250,5,258,6); // HACK! 
}

//------------------------------

//PROCEDURE <65265:> flx_pkgconfig::tail_val: Call method
::flx::rtl::con_t * tail_val::call(::flx::rtl::con_t *_ptr_caller, _a17555t_75163 const &_arg){
  _caller = _ptr_caller;
  _vI65267_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65265:> flx_pkgconfig::tail_val: Resume method
::flx::rtl::con_t *tail_val::resume(){
      ptrflx_pkgconfig->result = aux(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <73274>: flx_pkgconfig::handle_pkg::_lam_3713: Apply method
 ::flx::rtl::cl_t _fI73274__lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI73275_x = _arg;
      return eq(_vI73275_x,ptrhandle_pkg->pkg);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <65076>: flx_pkgconfig::lexstr: Apply method
void* lexstr::apply(_a17555t_75163 const &_arg ){
  _vI65104_s__apos_ = _arg;
      _vI65078_s  = _vI65104_s__apos_; //init
      first  = _vI65078_s.c_str(); //init
      _vI65080_finish  = _vI65078_s.c_str()+_vI65078_s.size(); //init
      current  = first; //init
      words  = (void* /*VR_nullptr*/ )0; //init
    continue__ll_flx_pkgconfig_11807_L65105:;
      if(FLX_UNLIKELY(!(!((current == _vI65080_finish)) ) )) goto break__ll_flx_pkgconfig_11807_L65106;
      lexstr_mv_64752  = lexit(ptf, ptrflx_pkgconfig)
      .apply(_at75213(current, _vI65080_finish)) /* apply_stack */; //init
/*begin match*/
/*match case 1:(next_param_flx_pkgconfig_64659, token_param_flx_pkgconfig_64660)*/
      token_param_flx_pkgconfig_64660  = lexstr_mv_64752.mem_1; //init
      next_param_flx_pkgconfig_64659  = lexstr_mv_64752.mem_0; //init
      current = next_param_flx_pkgconfig_64659; //assign simple
      _lam_64755_mv_64756  = token_param_flx_pkgconfig_64660; //init
/*begin match*/
/*match case 1:|Eos*/
      if(!(FLX_VI(_lam_64755_mv_64756)==2) ) goto _ml64758_L72560;
      goto continue__ll_flx_pkgconfig_11807_L65105;
    _ml64758_L72560:;
/*match case 2:|Str lexeme_param_flx_pkgconfig_64662*/
      if(!andthen(FLX_VI(_lam_64755_mv_64756)==0,(FLX_NEWP(_lam_64760)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64759_L72563;
      lexeme_param_flx_pkgconfig_64662  = *((_a17555t_75163*)FLX_VP(_lam_64755_mv_64756)); //init
      if(!(!((lexeme_param_flx_pkgconfig_64662 == ::std::string(""))) ) ) goto continue__ll_flx_pkgconfig_11807_L65105;
      words = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(words, lexeme_param_flx_pkgconfig_64662))); //assign simple
      goto continue__ll_flx_pkgconfig_11807_L65105;
      goto continue__ll_flx_pkgconfig_11807_L65105;
    _ml64759_L72563:;
/*match case 3:|Cmd cmd_param_flx_pkgconfig_64665*/
      if(!andthen(FLX_VI(_lam_64755_mv_64756)==1,(FLX_NEWP(_lam_64763)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64761_L72564;
      cmd_param_flx_pkgconfig_64665  = *((_a17555t_75163*)FLX_VP(_lam_64755_mv_64756)); //init
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_SHELL_ECHO")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_2672_L72574;
      {
      _a17555t_75163 _tmp75288 = (::std::string("[get_stdout] ") + cmd_param_flx_pkgconfig_64665 ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp75288)));
      }
      fflush(stderr);
    _ifdoelse_std_2672_L72574:;
      _ds2_64762  = basic_get_stdout(cmd_param_flx_pkgconfig_64665); //init
      s  = _ds2_64762.mem_1; //init
      recres  = lexstr(ptf, ptrflx_pkgconfig)
      .apply(lstrip(rstrip(s,::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B"))) /* apply_stack */; //init
      _vI72609_x  = _fI72586_aux_uncurry(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(recres, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
      _vI72611_x  = _vI72609_x; //init
      _vI72612_y  = words; //init
      _genout_urv72618  = (_vI72611_x); //init
      _genout_urv72373  = _genout_urv72618; //init
      _genout_urv72360  = _genout_urv72373; //init
      _genout_urv72352  = _genout_urv72360; //init
      x1  = _genout_urv72352; //init
      {
      void** _tmp75289 = (void**)&x1;
      
    { // list splice
      struct node_t { void *tail; _a17555t_75163 elt; };
      void **p = ((_tmp75289));
      while(*p) p = &((node_t*)FLX_VNP(*p))->tail;
      *p = _vI72612_y;
    }
    
      }
      words = x1; //assign simple
      goto continue__ll_flx_pkgconfig_11807_L65105;
    _ml64761_L72564:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",125,13,132,22);
;
      goto continue__ll_flx_pkgconfig_11807_L65105;
      goto continue__ll_flx_pkgconfig_11807_L65105;
    break__ll_flx_pkgconfig_11807_L65106:;
      return _fI72621_aux_uncurry(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(words, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",113,5,138,6); // HACK! 
}

//------------------------------

//PROCEDURE <65038:> flx_pkgconfig::print_help: Call method
void print_help::stack_call(){
      {
      _a17555t_75163 _tmp75291 = ::std::string("flx_pkgconfig [options] pkg pkg ...") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75291)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75292 = ::std::string("  returns code 1 if any packages are missing unless --noerror is specified") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75292)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75293 = ::std::string("  prints package or field list to standard output on one line") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75293)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75294 = ::std::string("options: (follows GNU conventions)") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75294)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75295 = ::std::string("  --path=dirname        set database directory name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75295)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75296 = ::std::string("  --path+=dirname       append database directory name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75296)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75297 = ::std::string("  --extension=fpc       set resource descriptor extensions,") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75297)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75298 = ::std::string("                          default 'fpc' use 'pc' for pkgconfig databases") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75298)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75299 = ::std::string("  -h") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75299)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75300 = ::std::string("  --hide                only process first package in path with a given name") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75300)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75301 = ::std::string("                          default, process all occurences") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75301)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75302 = ::std::string("  --list                list available packages from specified set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75302)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75303 = ::std::string("  --missing             list missing packages from specified set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75303)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75304 = ::std::string("  --noerror             do not return 1 because of missing packages") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75304)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75305 = ::std::string("  -r") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75305)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75306 = ::std::string("  --rec                 form transitive closure of specified set based on Requires field") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75306)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75307 = ::std::string("  --rec=field           form transitive closure of specified set based on specified field") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75307)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75308 = ::std::string("  -b") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75308)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75309 = ::std::string("  --backwards           process specified packages in reverse order") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75309)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75310 = ::std::string("  --field=field         collate values of field in package set") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75310)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75311 = ::std::string("  --keepleftmost        remove duplicate values in output keeping only leftmost occurrence") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75311)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75312 = ::std::string("  --keeprightmost       remove duplicate values in output keeping only rightmost occurrence") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75312)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75313 = ::std::string("  --keepall             keep duplicate values in output") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75313)));
      }
      fflush(stdout);
      {
      _a17555t_75163 _tmp75314 = ::std::string("  @filename             Replace with arguments from filename, one line per argument") + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75314)));
      }
      fflush(stdout);
      return; // proc return from stackable 

}
//------------------------------
//FUNCTION <74809>: flx_pkgconfig::reattach_drive_letters::_lam_64792: Apply method
 ::flx::rtl::cl_t _lam_64792::apply(){
      return andthen(!!((reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>((ptrreattach_drive_letters->reattach_drive_letters_mv_64784)))).mem_1) ,(FLX_NEWP(_lam_64793)(ptf, this, ptrreattach_drive_letters, ptrflx_pkgconfig)));
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",251,9,251,33); // HACK! 
}

//------------------------------
//FUNCTION <72986>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry: Apply method
void* _fI72986_aux_uncurry::apply(_at75201 const &_arg ){
  _vI72987_x_uncurry = (_arg.data)[0];
  _vI72988_y = (_arg.data)[1];
    start_71064_L73008:;
      _vI73003_aux__apos_2_mv_3643  = _vI72987_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73003_aux__apos_2_mv_3643)==0) ) goto _ml3645_L73002;
      return _vI72988_y;
    _ml3645_L73002:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI73003_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI73007__lam_3647)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L72999;
      _vI73001_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI73003_aux__apos_2_mv_3643))).mem_1; //init
      _vI73000_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI73003_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI72988_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI72988_y, _vI73001_h_param_std_3533))); //init
      _vI72987_x_uncurry  = _vI73000_t_param_std_3532; //init
      goto start_71064_L73008;
    _ml3646_L72999:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <73512>: flx_pkgconfig::xfind::_lam_64769: Apply method
 ::flx::rtl::cl_t _lam_64769::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",166,8,166,14); // HACK! 
}

//------------------------------
//FUNCTION <72810>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry: Apply method
void* _fI72810_aux_uncurry::apply(_at75201 const &_arg ){
  _vI72811_inp_uncurry = (_arg.data)[0];
  _vI72812_out = (_arg.data)[1];
    start_72768_L72832:;
      _vI72827_aux__apos_2_mv_3637  = _vI72811_inp_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI72827_aux__apos_2_mv_3637)==0) ) goto _ml3639_L72826;
      return _vI72812_out;
    _ml3639_L72826:;
/*match case 2:|Snoc (t_param_std_3530, h_param_std_3531)*/
      if(!andthen(FLX_VNI(_vI72827_aux__apos_2_mv_3637)==1,(FLX_NEWP(_fI72831__lam_3641)(ptf, this, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3640_L72823;
      _vI72825_h_param_std_3531  = (*((_tt75175*)FLX_VNP(_vI72827_aux__apos_2_mv_3637))).mem_1; //init
      _vI72824_t_param_std_3530  = (*((_tt75175*)FLX_VNP(_vI72827_aux__apos_2_mv_3637))).mem_0; //init
/*parallel assignment (2)*/
      _vI72812_out  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI72812_out, _fI72703_search_and_replace__apos_2(ptf, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_vI72825_h_param_std_3531) /* apply_stack */))); //init
      _vI72811_inp_uncurry  = _vI72824_t_param_std_3530; //init
      goto start_72768_L72832;
    _ml3640_L72823:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",367,7,369,45);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",366,5,371,6); // HACK! 
}

//------------------------------
//FUNCTION <71604>: flx_pkgconfig::check_id::iterator'2: Apply method
void* _fI71604_iterator__apos_2::apply(){
  FLX_START_SWITCH
      i  = 0; //init
    redo__ll_strings_7795_L71606:;
      if(FLX_UNLIKELY(!(!(((static_cast<int>((ptrcheck_id->_vI71608_x.size()))/*int.flx: ctor*/) - 1  < i)) ) )) goto break__ll_strings_7795_L71607;
      FLX_SET_PC(75317)
      return FLX_VNR(1, new(*ptf->gcp, char_ptr_map, true) char (::flx::rtl::strutil::subscript(ptrcheck_id->_vI71608_x,i)));//yield
    FLX_CASE_LABEL(75317)
      {
      int* _tmp75318 = (int*)&i;
      ++*((_tmp75318));
      }
      goto redo__ll_strings_7795_L71606;
    break__ll_strings_7795_L71607:;
      return (void* /*VR_nullptr*/ )0;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",271,5,274,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <73007>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI73007__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------

//PROCEDURE <65304:> flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_64848: Call method
::flx::rtl::con_t * _lam_64848::call(::flx::rtl::con_t *_ptr_caller, _a17555t_75163 const &_arg){
  _caller = _ptr_caller;
  _vI65306_s = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65304:> flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_64848: Resume method
::flx::rtl::con_t *_lam_64848::resume(){
      {
      void* _tmp75319 = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(ptrhandle_pkg->trace, ptrhandle_pkg->pkg)));
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(handle_pkg)(ptf, ptrflx_pkgconfig))
      ->call(tmp, _tt75182(_vI65306_s, (_tmp75319)));
      }
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <71543>: +::aux_uncurry: Apply method
void* _fI71543_aux_uncurry::apply(_at75201 const &_arg ){
  _vI71544_x_uncurry = (_arg.data)[0];
  _vI71545_y = (_arg.data)[1];
    start_71064_L71565:;
      _vI71560_aux__apos_2_mv_3643  = _vI71544_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71560_aux__apos_2_mv_3643)==0) ) goto _ml3645_L71559;
      return _vI71545_y;
    _ml3645_L71559:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI71560_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI71564__lam_3647)(ptf, this, ptr_fI70009___plus_))) ) goto _ml3646_L71556;
      _vI71558_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI71560_aux__apos_2_mv_3643))).mem_1; //init
      _vI71557_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI71560_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI71545_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71545_y, _vI71558_h_param_std_3533))); //init
      _vI71544_x_uncurry  = _vI71557_t_param_std_3532; //init
      goto start_71064_L71565;
    _ml3646_L71556:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <70479>: cat_uncurry: Apply method
_a17555t_75163 cat_uncurry::apply(_tt75182 const &_arg ){
  sep_uncurry = _arg.mem_0;
  _vI70555_x = _arg.mem_1;
      _vI70543_n  = 0; //init
      _vI75086_xs  = _vI70555_x; //init
      _generator_lists_5792  = (FLX_NEWP(_fI75087_iterator__apos_2)(ptf, this)); //init
    continue__ll_lists_5788_L70556:;
      _vI70534_cat__apos_2_mv_3687  = (_generator_lists_5792)->clone()
      ->apply() /* general apply */; //init
/*begin match*/
/*match case 1:|Some s_param_std_3547*/
      if(!andthen(FLX_VNI(_vI70534_cat__apos_2_mv_3687)==1,(FLX_NEWP(_lam_3690)(ptf, this))) ) goto _ml3689_L70557;
      s_param_std_3547  = *((_a17555t_75163*)FLX_VNP(_vI70534_cat__apos_2_mv_3687)); //init
      {
      _a112t_75189* _tmp75322 = (_a112t_75189*)&_vI70543_n;
      _a112t_75189 _tmp75323 = s_param_std_3547.size() + 1 ;
      *((_tmp75322))+=((_tmp75323));
      }
      goto continue__ll_lists_5788_L70556;
    _ml3689_L70557:;
/*match case 2:|None*/
      if(!(FLX_VNI(_vI70534_cat__apos_2_mv_3687)==0) ) goto _ml3691_L70558;
      goto _em3687_L70559;
    _ml3691_L70558:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",511,5,511,39);
;
    _em3687_L70559:;
      r  = ::std::string(""); //init
      {
      _a17555t_75163* _tmp75325 = (_a17555t_75163*)&r;
      ((_tmp75325))->reserve(_vI70543_n);
      }
      _vI70537_cat__apos_2_mv_3692  = _vI70555_x; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI70537_cat__apos_2_mv_3692)==0) ) goto _ml3694_L70560;
      return r;
    _ml3694_L70560:;
/*match case 2:|Snoc (tail_param_std_3549, head_param_std_3550)*/
      if(!andthen(FLX_VNI(_vI70537_cat__apos_2_mv_3692)==1,(FLX_NEWP(_lam_3701)(ptf, this))) ) goto _ml3695_L70565;
      head_param_std_3550  = (*((_tt75175*)FLX_VNP(_vI70537_cat__apos_2_mv_3692))).mem_1; //init
      tail_param_std_3549  = (*((_tt75175*)FLX_VNP(_vI70537_cat__apos_2_mv_3692))).mem_0; //init
      r = head_param_std_3550; //assign simple
      tl  = tail_param_std_3549; //init
    next_L70561:;
      _vI70540_cat__apos_2_mv_3696  = tl; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI70540_cat__apos_2_mv_3696)==0) ) goto _ml3698_L70562;
      return r;
    _ml3698_L70562:;
/*match case 2:|Snoc (t_param_std_3552_param_std_3555, h_param_std_3553_param_std_3556)*/
      if(!andthen(FLX_VNI(_vI70540_cat__apos_2_mv_3696)==1,(FLX_NEWP(_lam_3700)(ptf, this))) ) goto _ml3699_L70563;
      h_param_std_3553_param_std_3556  = (*((_tt75175*)FLX_VNP(_vI70540_cat__apos_2_mv_3696))).mem_1; //init
      t_param_std_3552_param_std_3555  = (*((_tt75175*)FLX_VNP(_vI70540_cat__apos_2_mv_3696))).mem_0; //init
      {
      _a17555t_75163* _tmp75326 = (_a17555t_75163*)&r;
      _a17555t_75163 _tmp75327 = sep_uncurry + h_param_std_3553_param_std_3556 ;
      ((_tmp75326))->append((_tmp75327));
      }
      tl = t_param_std_3552_param_std_3555; //assign simple
      goto next_L70561;
      FLX_HALT("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",516,7,516,24,"HALT: Jump to end of function");
    _ml3699_L70563:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",520,7,526,16);
;
      FLX_HALT("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",516,7,516,24,"HALT: Jump to end of function");
    _ml3695_L70565:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",514,5,527,14);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",508,3,529,4); // HACK! 
}

//------------------------------
//FUNCTION <75112>: cat_uncurry::_lam_3701: Apply method
 ::flx::rtl::cl_t _lam_3701::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",516,7,516,24); // HACK! 
}

//------------------------------
//FUNCTION <72167>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI72167__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <70948>: _init_::aux_uncurry::_lam_3641: Apply method
 ::flx::rtl::cl_t _lam_3641::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",369,9,369,18); // HACK! 
}

//------------------------------
//FUNCTION <71246>: flx_pkgconfig::add_val::_lam_3713: Apply method
 ::flx::rtl::cl_t _lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI71247_x = _arg;
      return eq(_vI71247_x,ptradd_val->v);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <74620>: flx_pkgconfig::parse_args::aux::aux_uncurry: Apply method
void* _fI74620_aux_uncurry::apply(_at75201 const &_arg ){
  _vI74621_x_uncurry = (_arg.data)[0];
  _vI74622_y = (_arg.data)[1];
    start_71064_L74642:;
      _vI74637_aux__apos_2_mv_3643  = _vI74621_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI74637_aux__apos_2_mv_3643)==0) ) goto _ml3645_L74636;
      return _vI74622_y;
    _ml3645_L74636:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI74637_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI74641__lam_3647)(ptf, this, ptr_fI74563_aux, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml3646_L74633;
      _vI74635_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI74637_aux__apos_2_mv_3643))).mem_1; //init
      _vI74634_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI74637_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI74622_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74622_y, _vI74635_h_param_std_3533))); //init
      _vI74621_x_uncurry  = _vI74634_t_param_std_3532; //init
      goto start_71064_L74642;
    _ml3646_L74633:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <73099>: flx_pkgconfig::handle_pkg::_lam_64825::aux::aux_uncurry: Apply method
void* _fI73099_aux_uncurry::apply(_at75201 const &_arg ){
  _vI73100_x_uncurry = (_arg.data)[0];
  _vI73101_y = (_arg.data)[1];
    start_71064_L73121:;
      _vI73116_aux__apos_2_mv_3643  = _vI73100_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73116_aux__apos_2_mv_3643)==0) ) goto _ml3645_L73115;
      return _vI73101_y;
    _ml3645_L73115:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI73116_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI73120__lam_3647)(ptf, this, ptr_fI73042_aux, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L73112;
      _vI73114_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI73116_aux__apos_2_mv_3643))).mem_1; //init
      _vI73113_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI73116_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI73101_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73101_y, _vI73114_h_param_std_3533))); //init
      _vI73100_x_uncurry  = _vI73113_t_param_std_3532; //init
      goto start_71064_L73121;
    _ml3646_L73112:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <74810>: flx_pkgconfig::reattach_drive_letters::_lam_64792::_lam_64793: Apply method
 ::flx::rtl::cl_t _lam_64793::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",251,18,251,32); // HACK! 
}

//------------------------------
//FUNCTION <71943>: search_and_replace_uncurry::iterator'2::_lam_3822: Apply method
 ::flx::rtl::cl_t _lam_3822::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",726,11,726,20); // HACK! 
}

//------------------------------
//FUNCTION <74470>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI74470_aux::apply(_at75201 const &_arg ){
  _vI74471_inp = (_arg.data)[0];
  _vI74472_out = (_arg.data)[1];
    start_71418_L74554:;
      _vI74518_aux_mv_3749  = _vI74471_inp; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI74518_aux_mv_3749)==0) ) goto _ml3751_L74517;
      return _fI74527_aux_uncurry(ptf, this, ptrparse_args, ptrflx_pkgconfig)
      .apply(_at75201(FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74472_out, ::std::string("Requires")))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    _ml3751_L74517:;
/*match case 2:|Snoc (t_param_std_3563, h_param_std_3564)*/
      if(!andthen(FLX_VNI(_vI74518_aux_mv_3749)==1,(FLX_NEWP(_fI74550__lam_3758)(ptf, this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml3752_L74514;
      _vI74516_h_param_std_3564  = (*((_tt75175*)FLX_VNP(_vI74518_aux_mv_3749))).mem_1; //init
      _vI74515_t_param_std_3563  = (*((_tt75175*)FLX_VNP(_vI74518_aux_mv_3749))).mem_0; //init
      _vI74552_aux_mv_3754  = !eq(_vI74516_h_param_std_3564,::std::string("Requires")) ; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI74552_aux_mv_3754==1) ) goto _ml3756_L74551;
/*parallel assignment (2)*/
      _vI74472_out  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74472_out, _vI74516_h_param_std_3564))); //init
      _vI74471_inp  = _vI74515_t_param_std_3563; //init
      goto start_71418_L74554;
    _ml3756_L74551:;
/*match case 2:any*/
/*parallel assignment (1)*/
      _vI74471_inp  = _vI74515_t_param_std_3563; //init
      goto start_71418_L74554;
    _ml3752_L74514:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",625,7,630,14);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",624,5,632,6); // HACK! 
}

//------------------------------
//FUNCTION <72571>: flx_pkgconfig::lexstr::_lam_64763: Apply method
 ::flx::rtl::cl_t _lam_64763::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",128,15,128,22); // HACK! 
}

//------------------------------
//FUNCTION <71947>: search_and_replace_uncurry::_lam_4674: Apply method
 ::flx::rtl::cl_t _lam_4674::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",647,5,649,9); // HACK! 
}

//------------------------------
//FUNCTION <71537>: +::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI71537__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <72066>: flx_pkgconfig::get_field::_lam_64805: Apply method
 ::flx::rtl::cl_t _lam_64805::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",275,11,275,17); // HACK! 
}

//------------------------------
//FUNCTION <74527>: flx_pkgconfig::parse_args::aux::aux_uncurry: Apply method
void* _fI74527_aux_uncurry::apply(_at75201 const &_arg ){
  _vI74528_x_uncurry = (_arg.data)[0];
  _vI74529_y = (_arg.data)[1];
    start_71064_L74549:;
      _vI74544_aux__apos_2_mv_3643  = _vI74528_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI74544_aux__apos_2_mv_3643)==0) ) goto _ml3645_L74543;
      return _vI74529_y;
    _ml3645_L74543:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI74544_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI74548__lam_3647)(ptf, this, ptr_fI74470_aux, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml3646_L74540;
      _vI74542_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI74544_aux__apos_2_mv_3643))).mem_1; //init
      _vI74541_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI74544_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI74529_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74529_y, _vI74542_h_param_std_3533))); //init
      _vI74528_x_uncurry  = _vI74541_t_param_std_3532; //init
      goto start_71064_L74549;
    _ml3646_L74540:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <71294>: flx_pkgconfig::add_val::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI71294__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <72983>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_3713: Apply method
 ::flx::rtl::cl_t _fI72983__lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI72984_x = _arg;
      return eq(_vI72984_x,ptrhandle_pkg->pkg);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <71504>: flx_pkgconfig::tail_val::aux::_lam_3758: Apply method
 ::flx::rtl::cl_t _lam_3758::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",627,9,627,18); // HACK! 
}

//------------------------------
//FUNCTION <73171>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry: Apply method
void* _fI73171_aux_uncurry::apply(_at75201 const &_arg ){
  _vI73172_x_uncurry = (_arg.data)[0];
  _vI73173_y = (_arg.data)[1];
    start_71064_L73193:;
      _vI73188_aux__apos_2_mv_3643  = _vI73172_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73188_aux__apos_2_mv_3643)==0) ) goto _ml3645_L73187;
      return _vI73173_y;
    _ml3645_L73187:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI73188_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI73192__lam_3647)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L73184;
      _vI73186_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI73188_aux__apos_2_mv_3643))).mem_1; //init
      _vI73185_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI73188_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI73173_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73173_y, _vI73186_h_param_std_3533))); //init
      _vI73172_x_uncurry  = _vI73185_t_param_std_3532; //init
      goto start_71064_L73193;
    _ml3646_L73184:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <73122>: flx_pkgconfig::handle_pkg::_lam_64825::aux::_lam_3758: Apply method
 ::flx::rtl::cl_t _fI73122__lam_3758::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",627,9,627,18); // HACK! 
}

//------------------------------
//FUNCTION <72607>: flx_pkgconfig::lexstr::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI72607__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <65247>: flx_pkgconfig::get_variable: Apply method
_at75165 get_variable::apply(_a17555t_75163 const &_arg ){
  _vI65260_line = _arg;
      _vI71869_find_mv_4416  = _vI65260_line.find((::flx::rtl::strutil::subscript(::std::string("="),0))); //init
/*begin match*/
/*match case 1:(i_param_std_4201 when (== (i_param_std_4201, stl_npos)))*/
      if(!((_vI71869_find_mv_4416 == ::std::string::npos)) ) goto _ml4418_L71872;
      get_variable_mv_64807  = (void* /*VR_nullptr*/ )0; //init
      goto _end_inline_find_71783_L71873;
    _ml4418_L71872:;
/*match case 2:i_param_std_4202*/
      _vI71871_i_param_std_4202  = _vI71869_find_mv_4416; //init
      get_variable_mv_64807  = FLX_VNR(1, new(*ptf->gcp, _a112t_75189_ptr_map, true) _a112t_75189 (_vI71871_i_param_std_4202)); //init
    _end_inline_find_71783_L71873:;
/*begin match*/
/*match case 1:|None*/
      if(!(FLX_VNI(get_variable_mv_64807)==0) ) goto _ml64809_L71838;
      return _at75165(::std::string(""), ::std::string(""));
    _ml64809_L71838:;
/*match case 2:|Some n_param_flx_pkgconfig_64721*/
      if(!andthen(FLX_VNI(get_variable_mv_64807)==1,(FLX_NEWP(_lam_64824)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64810_L71839;
      n_param_flx_pkgconfig_64721  = *((_a112t_75189*)FLX_VNP(get_variable_mv_64807)); //init
      get_variable_mv_64812  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI65260_line,0,n_param_flx_pkgconfig_64721),::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")); //init
/*begin match*/
/*match case 1:name_param_flx_pkgconfig_64722*/
      name_param_flx_pkgconfig_64722  = get_variable_mv_64812; //init
      get_variable_mv_64816  = lstrip(rstrip(::flx::rtl::strutil::substr(_vI65260_line,n_param_flx_pkgconfig_64721 + 1 ,_vI65260_line.size()),::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")); //init
/*begin match*/
/*match case 1:value_param_flx_pkgconfig_64723*/
      value_param_flx_pkgconfig_64723  = get_variable_mv_64816; //init
      get_variable_mv_64820  = check_id(ptf, ptrflx_pkgconfig)
      .apply(name_param_flx_pkgconfig_64722) /* apply_stack */; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(get_variable_mv_64820==1) ) goto _ml64822_L71904;
      return _at75165(name_param_flx_pkgconfig_64722, value_param_flx_pkgconfig_64723);
    _ml64822_L71904:;
/*match case 2:any*/
      return _at75165(::std::string(""), ::std::string(""));
    _ml64810_L71839:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",283,9,288,56);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",282,5,290,8); // HACK! 
}

//------------------------------
//FUNCTION <73322>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI73322__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------

//PROCEDURE <65269:> flx_pkgconfig::keep_val: Call method
::flx::rtl::con_t * keep_val::call(::flx::rtl::con_t *_ptr_caller, _a17555t_75163 const &_arg){
  _caller = _ptr_caller;
  _vI65271_v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65269:> flx_pkgconfig::keep_val: Resume method
::flx::rtl::con_t *keep_val::resume(){
      ptrflx_pkgconfig->result = _fI70009___plus_(ptf)
      .apply(_tt75175(ptrflx_pkgconfig->result, _vI65271_v)) /* apply_stack */; //assign simple
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <74550>: flx_pkgconfig::parse_args::aux::_lam_3758: Apply method
 ::flx::rtl::cl_t _fI74550__lam_3758::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",627,9,627,18); // HACK! 
}

//------------------------------
//FUNCTION <74548>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI74548__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <73298>: flx_pkgconfig::handle_pkg::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI73298__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <71249>: flx_pkgconfig::add_val::aux_uncurry: Apply method
void* _fI71249_aux_uncurry::apply(_at75201 const &_arg ){
  x_uncurry = (_arg.data)[0];
  _vI71251_y = (_arg.data)[1];
    start_71064_L71271:;
      _vI71266_aux__apos_2_mv_3643  = x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71266_aux__apos_2_mv_3643)==0) ) goto _ml3645_L71265;
      return _vI71251_y;
    _ml3645_L71265:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI71266_aux__apos_2_mv_3643)==1,(FLX_NEWP(_lam_3647)(ptf, this, ptradd_val, ptrflx_pkgconfig))) ) goto _ml3646_L71262;
      h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI71266_aux__apos_2_mv_3643))).mem_1; //init
      t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI71266_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI71251_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71251_y, h_param_std_3533))); //init
      x_uncurry  = t_param_std_3532; //init
      goto start_71064_L71271;
    _ml3646_L71262:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <72642>: flx_pkgconfig::lexstr::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI72642__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <71502>: flx_pkgconfig::tail_val::aux::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI71502__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <8883>: isidstart: Apply method
 ::flx::rtl::cl_t isidstart::apply(char const &_arg ){
  x = _arg;
      find_mv_4416  = (ptf-> letters).find(x); //init
/*begin match*/
/*match case 1:(i_param_std_4201 when (== (i_param_std_4201, stl_npos)))*/
      if(!((find_mv_4416 == ::std::string::npos)) ) goto _ml4418_L71669;
      isidstart_mv_2322  = (void* /*VR_nullptr*/ )0; //init
      goto _end_inline_find_71644_L71670;
    _ml4418_L71669:;
/*match case 2:i_param_std_4202*/
      i_param_std_4202  = find_mv_4416; //init
      isidstart_mv_2322  = FLX_VNR(1, new(*ptf->gcp, _a112t_75189_ptr_map, true) _a112t_75189 (i_param_std_4202)); //init
    _end_inline_find_71644_L71670:;
/*begin match*/
/*match case 1:|Some any*/
      if(!andthen(FLX_VNI(isidstart_mv_2322)==1,(FLX_NEWP(_lam_2325)(ptf, this))) ) goto _ml2324_L71657;
      return 1;
    _ml2324_L71657:;
/*match case 2:|None*/
      if(!(FLX_VNI(isidstart_mv_2322)==0) ) goto _ml2326_L71658;
      return 0;
    _ml2326_L71658:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/char.fdoc",67,28,67,90);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/char.fdoc",67,3,67,100); // HACK! 
}

//------------------------------
//C FUNC <7820>: andthen
 ::flx::rtl::cl_t andthen(  ::flx::rtl::cl_t _vI7824_x, _ft75173* _vI7825_y){
   ::flx::rtl::cl_t andthen_mv_2148;
      andthen_mv_2148  = _vI7824_x; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(andthen_mv_2148==1) ) goto _ml2150_L70821;
      return (_vI7825_y)->clone()
      ->apply() /* general apply */;
    _ml2150_L70821:;
/*match case 2:any*/
      return 0;
}
//------------------------------
//FUNCTION <72566>: flx_pkgconfig::lexstr::_lam_64760: Apply method
 ::flx::rtl::cl_t _lam_64760::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",127,15,127,25); // HACK! 
}

//------------------------------
//FUNCTION <65226>: flx_pkgconfig::check_id: Apply method
 ::flx::rtl::cl_t check_id::apply(_a17555t_75163 const &_arg ){
  _vI65233_s = _arg;
      acc  = 1; //init
      _vI71608_x  = _vI65233_s; //init
      _generator_flx_pkgconfig_11993  = (FLX_NEWP(_fI71604_iterator__apos_2)(ptf, this, ptrflx_pkgconfig)); //init
    continue__ll_flx_pkgconfig_11988_L65234:;
      check_id_mv_64795  = (_generator_flx_pkgconfig_11993)->clone()
      ->apply() /* general apply */; //init
/*begin match*/
/*match case 1:|Some elt_param_flx_pkgconfig_64719*/
      if(!andthen(FLX_VNI(check_id_mv_64795)==1,(FLX_NEWP(_lam_64798)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64797_L65235;
      elt_param_flx_pkgconfig_64719  = *((char*)FLX_VNP(check_id_mv_64795)); //init
      acc = acc && (isidstart(ptf)
      .apply(elt_param_flx_pkgconfig_64719) /* apply_stack */ || (!!isdigit(elt_param_flx_pkgconfig_64719)) ) ; //assign simple
      goto continue__ll_flx_pkgconfig_11988_L65234;
    _ml64797_L65235:;
/*match case 2:|None*/
      if(!(FLX_VNI(check_id_mv_64795)==0) ) goto _ml64799_L65236;
      goto _em64795_L65237;
    _ml64799_L65236:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",268,7,268,57);
;
    _em64795_L65237:;
      return acc;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",266,5,270,6); // HACK! 
}

//------------------------------
//FUNCTION <73301>: flx_pkgconfig::handle_pkg::aux_uncurry: Apply method
void* _fI73301_aux_uncurry::apply(_at75201 const &_arg ){
  _vI73302_x_uncurry = (_arg.data)[0];
  _vI73303_y = (_arg.data)[1];
    start_71064_L73323:;
      _vI73318_aux__apos_2_mv_3643  = _vI73302_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73318_aux__apos_2_mv_3643)==0) ) goto _ml3645_L73317;
      return _vI73303_y;
    _ml3645_L73317:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI73318_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI73322__lam_3647)(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L73314;
      _vI73316_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI73318_aux__apos_2_mv_3643))).mem_1; //init
      _vI73315_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI73318_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI73303_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73303_y, _vI73316_h_param_std_3533))); //init
      _vI73302_x_uncurry  = _vI73315_t_param_std_3532; //init
      goto start_71064_L73323;
    _ml3646_L73314:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <72146>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry: Apply method
void* _fI72146_aux_uncurry::apply(_at75201 const &_arg ){
  _vI72147_x_uncurry = (_arg.data)[0];
  _vI72148_y = (_arg.data)[1];
    start_71064_L72168:;
      _vI72163_aux__apos_2_mv_3643  = _vI72147_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI72163_aux__apos_2_mv_3643)==0) ) goto _ml3645_L72162;
      return _vI72148_y;
    _ml3645_L72162:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI72163_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI72167__lam_3647)(ptf, this, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L72159;
      _vI72161_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI72163_aux__apos_2_mv_3643))).mem_1; //init
      _vI72160_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI72163_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI72148_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI72148_y, _vI72161_h_param_std_3533))); //init
      _vI72147_x_uncurry  = _vI72160_t_param_std_3532; //init
      goto start_71064_L72168;
    _ml3646_L72159:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <75059>: flx_pkgconfig::_lam_64856: Apply method
 ::flx::rtl::cl_t _lam_64856::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",392,9,392,24); // HACK! 
}

//------------------------------

//PROCEDURE <65285:> flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836: Call method
::flx::rtl::con_t * _lam_64836::call(::flx::rtl::con_t *_ptr_caller, _a17555t_75163 const &_arg){
  _caller = _ptr_caller;
  _vI65308_line = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65285:> flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836: Resume method
::flx::rtl::con_t *_lam_64836::resume(){
  FLX_START_SWITCH
      _ds2_64837  = get_variable(ptf, ptrflx_pkgconfig)
      .apply(_vI65308_line) /* apply_stack */; //init
      variable  = (_ds2_64837.data)[0]; //init
      vval  = (_ds2_64837.data)[1]; //init
      if(!(!((variable == ::std::string(""))) ) ) goto _ifdoend_flx_pkgconfig_64734_L65309;
      bdy  = search_and_replace_uncurry(ptf)
      .apply(_tt75210(ptrhandle_pkg->variables, vval)) /* apply_stack */; //init
      ptrhandle_pkg->variables = FLX_VNR(1, new(*ptf->gcp, _tt75211_ptr_map, true) _tt75211 (_tt75211(ptrhandle_pkg->variables, _at75165((::std::string("${") + variable ) + ::std::string("}") , bdy)))); //assign simple
      FLX_RETURN // procedure return
    _ifdoend_flx_pkgconfig_64734_L65309:;
      _ds2_64838  = get_field(ptf, ptrflx_pkgconfig)
      .apply(_vI65308_line) /* apply_stack */; //init
      key  = (_ds2_64838.data)[0]; //init
      value  = (_ds2_64838.data)[1]; //init
      if(!ptrflx_pkgconfig->listkeys ) goto _ifdoelse_flx_pkgconfig_64737_L65311;
      _vI72138_insert_unique__apos_3_mv_3743  = mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_fI72143__lam_3713)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI72138_insert_unique__apos_3_mv_3743==1) ) goto _ml3745_L72137;
      _vI72076__urv71179  = ptrflx_pkgconfig->result; //init
      goto _end_hash_987309924;
    _ml3745_L72137:;
/*match case 2:any*/
      _vI72169_x  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_fI72146_aux_uncurry(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, key))); //init
      _vI72076__urv71179  = _fI72170_aux_uncurry(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(_vI72169_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    _end_hash_987309924:;
      ptrflx_pkgconfig->result = _vI72076__urv71179; //assign simple
    _ifdoelse_flx_pkgconfig_64737_L65311:;
      values  = lexstr(ptf, ptrflx_pkgconfig)
      .apply(value) /* apply_stack */; //init
      _vI72833_x  = (_fI72810_aux_uncurry(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(values, (void* /*VR_nullptr*/ )0)) /* apply_stack */); //init
      _genout_urv72840  = (_vI72833_x); //init
      _genout_urv72803  = _genout_urv72840; //init
      _vI72835__genout_urv70874  = _genout_urv72803; //init
      _vI72834_y  = _vI72835__genout_urv70874; //init
      {
      void** _tmp75341 = (void**)&_vI72834_y;
      _rev(((_tmp75341)),(_a17555t_75163*)0);
      }
      values = (_vI72834_y); //assign simple
      if(!mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_fI72845__lam_3713)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->fields)) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_64739_L65313;
      _lam_64836_mv_64840  = ptrflx_pkgconfig->keep; //init
/*begin match*/
/*match case 1:|keepleftmost*/
      if(!(_lam_64836_mv_64840==1) ) goto _ml64842_L72857;
      {
      _pt75206* _tmp75342 = (FLX_NEWP(add_val)(ptf, ptrflx_pkgconfig));
      FLX_SET_PC(75343)
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(this, _tt75207((_tmp75342), values));
      }
    FLX_CASE_LABEL(75343)
      goto _ifdoelse_flx_pkgconfig_64739_L65313;
    _ml64842_L72857:;
/*match case 2:|keeprightmost*/
      if(!(_lam_64836_mv_64840==2) ) goto _ml64844_L72858;
      {
      _pt75206* _tmp75344 = (FLX_NEWP(tail_val)(ptf, ptrflx_pkgconfig));
      FLX_SET_PC(75345)
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(this, _tt75207((_tmp75344), values));
      }
    FLX_CASE_LABEL(75345)
      goto _ifdoelse_flx_pkgconfig_64739_L65313;
    _ml64844_L72858:;
/*match case 3:|keepall*/
      if(!(_lam_64836_mv_64840==0) ) goto _ml64846_L72859;
      {
      _pt75206* _tmp75346 = (FLX_NEWP(keep_val)(ptf, ptrflx_pkgconfig));
      FLX_SET_PC(75347)
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(this, _tt75207((_tmp75346), values));
      }
    FLX_CASE_LABEL(75347)
      goto _ifdoelse_flx_pkgconfig_64739_L65313;
    _ml64846_L72859:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",352,18,355,57);
;
    _ifdoelse_flx_pkgconfig_64739_L65313:;
      if(!mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_fI72869__lam_3713)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->recfields)) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_64735_L65316;
      {
      _pt75206* _tmp75349 = (FLX_NEWP(_lam_64848)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig));
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(tmp, _tt75207((_tmp75349), values));
      }
      FLX_KILLPC
      FLX_RETURN // procedure return
    _ifdoelse_flx_pkgconfig_64735_L65316:;
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <73192>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI73192__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//C FUNC <18200>: rstrip
_a17555t_75163 rstrip( _a17555t_75163 _vI18205_x, _a17555t_75163 e){
  _a112t_75189 j;
   ::flx::rtl::cl_t _vI18203_found;
  _a112t_75189 _vI18202_i;
      if(!((0 < _vI18205_x.size())) ) goto _ifdoelse_std_4272_L18217;
      _vI18202_i  = _vI18205_x.size() - 1 ; //init
      {
      _a112t_75189* _tmp75351 = (_a112t_75189*)&_vI18202_i;
      ++*((_tmp75351));
      }
    redo__ll_strings_7869_L18207:;
      if(FLX_UNLIKELY(!((0 < _vI18202_i)) )) goto _ifdoelse_std_4272_L18217;
      {
      _a112t_75189* _tmp75352 = (_a112t_75189*)&_vI18202_i;
      --*((_tmp75352));
      }
      _vI18203_found  = 0; //init
      j  = 0; //init
    redo__ll_strings_7873_L18208:;
      if(FLX_UNLIKELY(!(!((e.size() - 1  < j)) ) )) goto break__ll_strings_7873_L18212;
      if(!((::flx::rtl::strutil::subscript(_vI18205_x,_vI18202_i) == ::flx::rtl::strutil::subscript(e,j))) ) goto _ifdoelse_std_4274_L18210;
      _vI18203_found = 1; //assign simple
    _ifdoelse_std_4274_L18210:;
      {
      _a112t_75189* _tmp75353 = (_a112t_75189*)&j;
      ++*((_tmp75353));
      }
      goto redo__ll_strings_7873_L18208;
    break__ll_strings_7873_L18212:;
      if(_vI18203_found) goto redo__ll_strings_7869_L18207;
      return ::flx::rtl::strutil::substr(_vI18205_x,0,(static_cast<int>(_vI18202_i)/*int.flx: ctor*/) + 1 );
      goto redo__ll_strings_7869_L18207;
    _ifdoelse_std_4272_L18217:;
      return ::std::string("");
}
//------------------------------
//FUNCTION <72728>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::iterator'2::_lam_3822: Apply method
 ::flx::rtl::cl_t _fI72728__lam_3822::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",726,11,726,20); // HACK! 
}

//------------------------------
//FUNCTION <74379>: flx_pkgconfig::parse_args::_lam_64782: Apply method
 ::flx::rtl::cl_t _lam_64782::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",174,9,174,24); // HACK! 
}

//------------------------------
//C FUNC <69621>: basic_get_stdout
_tt75218 basic_get_stdout( _a17555t_75163 cmd){
  _a20764t_75250 _genout_urv72293;
  _a17555t_75163 _genout_urv72292;
   ::flx::rtl::cl_t _genout_urv72291;
  _a11551t_75208 _genout_urv72290;
  _a20764t_75250 _genout_urv72254;
  _a17555t_75163 _genout_urv72253;
   ::flx::rtl::cl_t _genout_urv72252;
  _a11551t_75208 _genout_urv72251;
  _a20764t_75250 _vI72276_result;
  _a17555t_75163 output;
  _a11551t_75208 fout;
      _genout_urv72290  = _popen(((::std::string("\"") + cmd ) + ::std::string("\"") ).c_str(), "r"); //init
      _genout_urv72251  = _genout_urv72290; //init
      fout  = _genout_urv72251; //init
      _genout_urv72291  = fout!=(FILE*)0; //init
      _genout_urv72252  = _genout_urv72291; //init
      if(!_genout_urv72252 ) goto _ifdoend_std_5222_L72278;
      _genout_urv72292  = ::flx::rtl::ioutil::load_file(fout); //init
      _genout_urv72253  = _genout_urv72292; //init
      output  = _genout_urv72253; //init
      _genout_urv72293  = _pclose(fout); //init
      _genout_urv72254  = _genout_urv72293; //init
      _vI72276_result  = _genout_urv72254; //init
      return _tt75218((int)_vI72276_result , output);
    _ifdoend_std_5222_L72278:;
      {
      _a17555t_75163 _tmp75354 = (::std::string("Unable to run command '") + (((::std::string("\"") + cmd ) + ::std::string("\"") ) + ::std::string("'") ) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stdout,((_tmp75354)));
      }
      fflush(stdout);
      return _tt75218(- 1 , ::std::string(""));
}
//------------------------------
//FUNCTION <72729>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::_lam_4674: Apply method
 ::flx::rtl::cl_t _fI72729__lam_4674::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",647,5,649,9); // HACK! 
}

//------------------------------
//FUNCTION <74715>: flx_pkgconfig::parse_args::aux::_lam_4611: Apply method
 ::flx::rtl::cl_t _lam_4611::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",411,9,411,15); // HACK! 
}

//------------------------------
//FUNCTION <73010>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry: Apply method
void* _fI73010_aux_uncurry::apply(_at75201 const &_arg ){
  _vI73011_x_uncurry = (_arg.data)[0];
  _vI73012_y = (_arg.data)[1];
    start_71064_L73032:;
      _vI73027_aux__apos_2_mv_3643  = _vI73011_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73027_aux__apos_2_mv_3643)==0) ) goto _ml3645_L73026;
      return _vI73012_y;
    _ml3645_L73026:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI73027_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI73031__lam_3647)(ptf, this, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L73023;
      _vI73025_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI73027_aux__apos_2_mv_3643))).mem_1; //init
      _vI73024_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI73027_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI73012_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73012_y, _vI73025_h_param_std_3533))); //init
      _vI73011_x_uncurry  = _vI73024_t_param_std_3532; //init
      goto start_71064_L73032;
    _ml3646_L73023:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//C FUNC <14971>: range
void* range(thread_frame_t *ptf,  int low, int high, int step){
   ::flx::rtl::cl_t inner_mv_3656;
  void* _vI70800_values;
  int _vI70799_step;
  int _vI70798_high;
  int _vI70797_low;
   ::flx::rtl::cl_t range_mv_3667;
   ::flx::rtl::cl_t range_mv_3662;
  int _vI14987_n;
  int _vI14986_s;
  int hi;
  int lo;
  _at75171 _ds1_3660;
      range_mv_3662  = (low < high); //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(range_mv_3662==1) ) goto _ml3664_L70785;
      *&(((_at75171*)&_ds1_3660)->data)[0]=low; // storeat
      *&(((_at75171*)&_ds1_3660)->data)[1]=high; // storeat
      *&(((_at75171*)&_ds1_3660)->data)[2]=step; // storeat
      goto _end_inline_range_mf_3661_70787_L70787;
    _ml3664_L70785:;
/*match case 2:any*/
      *&(((_at75171*)&_ds1_3660)->data)[0]=high; // storeat
      *&(((_at75171*)&_ds1_3660)->data)[1]=low; // storeat
      *&(((_at75171*)&_ds1_3660)->data)[2]=- step ; // storeat
    _end_inline_range_mf_3661_70787_L70787:;
      lo  = (_ds1_3660.data)[0]; //init
      hi  = (_ds1_3660.data)[1]; //init
      _vI14986_s  = (_ds1_3660.data)[2]; //init
      _vI14987_n  = (hi - lo ) - 1 ; //init
      range_mv_3667  = !((0 < _vI14986_s)) ; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(range_mv_3667==1) ) goto _ml3669_L70790;
      return (void* /*VR_nullptr*/ )0;
    _ml3669_L70790:;
/*match case 2:any*/
      _vI70797_low  = lo; //init
      _vI70798_high  = (lo + _vI14987_n ) - (_vI14987_n % _vI14986_s ) ; //init
      _vI70799_step  = _vI14986_s; //init
      _vI70800_values  = (void* /*VR_nullptr*/ )0; //init
    start_70767_L70804:;
      inner_mv_3656  = (_vI70798_high < _vI70797_low); //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(inner_mv_3656==1) ) goto _ml3658_L70803;
      return _vI70800_values;
    _ml3658_L70803:;
/*match case 2:any*/
/*parallel assignment (2)*/
      _vI70800_values  = FLX_VNR(1, new(*ptf->gcp, _tt75188_ptr_map, true) _tt75188 (_tt75188(_vI70800_values, _vI70798_high))); //init
      _vI70798_high  = _vI70798_high - _vI70799_step ; //init
      goto start_70767_L70804;
}
//------------------------------
//FUNCTION <71481>: flx_pkgconfig::tail_val::aux::aux_uncurry: Apply method
void* _fI71481_aux_uncurry::apply(_at75201 const &_arg ){
  _vI71482_x_uncurry = (_arg.data)[0];
  _vI71483_y = (_arg.data)[1];
    start_71064_L71503:;
      _vI71498_aux__apos_2_mv_3643  = _vI71482_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71498_aux__apos_2_mv_3643)==0) ) goto _ml3645_L71497;
      return _vI71483_y;
    _ml3645_L71497:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI71498_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI71502__lam_3647)(ptf, this, ptraux, ptrtail_val, ptrflx_pkgconfig))) ) goto _ml3646_L71494;
      _vI71496_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI71498_aux__apos_2_mv_3643))).mem_1; //init
      _vI71495_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI71498_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI71483_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71483_y, _vI71496_h_param_std_3533))); //init
      _vI71482_x_uncurry  = _vI71495_t_param_std_3532; //init
      goto start_71064_L71503;
    _ml3646_L71494:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <73277>: flx_pkgconfig::handle_pkg::aux_uncurry: Apply method
void* _fI73277_aux_uncurry::apply(_at75201 const &_arg ){
  _vI73278_x_uncurry = (_arg.data)[0];
  _vI73279_y = (_arg.data)[1];
    start_71064_L73299:;
      _vI73294_aux__apos_2_mv_3643  = _vI73278_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI73294_aux__apos_2_mv_3643)==0) ) goto _ml3645_L73293;
      return _vI73279_y;
    _ml3645_L73293:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI73294_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI73298__lam_3647)(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L73290;
      _vI73292_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI73294_aux__apos_2_mv_3643))).mem_1; //init
      _vI73291_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI73294_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI73279_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI73279_y, _vI73292_h_param_std_3533))); //init
      _vI73278_x_uncurry  = _vI73291_t_param_std_3532; //init
      goto start_71064_L73299;
    _ml3646_L73290:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------

//PROCEDURE <65277:> flx_pkgconfig::handle_pkg::_lam_64825: Call method
::flx::rtl::con_t * _lam_64825::call(::flx::rtl::con_t *_ptr_caller, _a17555t_75163 const &_arg){
  _caller = _ptr_caller;
  dir = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65277:> flx_pkgconfig::handle_pkg::_lam_64825: Resume method
::flx::rtl::con_t *_lam_64825::resume(){
  FLX_START_SWITCH
      _lam_64825_mv_64827  = (dir == ::std::string("")); //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_lam_64825_mv_64827==1) ) goto _ml64829_L72878;
      _urv72875  = ::std::string("."); //init
      goto _end_hash_360287943;
    _ml64829_L72878:;
/*match case 2:any*/
      _urv72875  = dir; //init
    _end_hash_360287943:;
      filename  = (((_urv72875 + ::std::string("\\") ) + ptrhandle_pkg->pkg ) + ::std::string(".") ) + ptrflx_pkgconfig->extension ; //init
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_2786_L72899;
      {
      _a17555t_75163 _tmp75358 = (::std::string("[Open_input] ") + filename ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp75358)));
      }
      fflush(stderr);
    _ifdoelse_std_2786_L72899:;
      _genout_urv72910  = fopen(filename.c_str(),"rb"); //init
      _genout_urv72896  = _genout_urv72910; //init
      file  = _genout_urv72896; //init
      _genout_urv72911  = file!=(FILE*)0; //init
      if(!_genout_urv72911 ) goto _ifdoelse_flx_pkgconfig_64726_L65333;
      if(!ptrflx_pkgconfig->dolist ) goto _ifdoelse_flx_pkgconfig_64728_L65324;
      _lam_64825_mv_64831  = ptrflx_pkgconfig->keep; //init
/*begin match*/
/*match case 1:|keepleftmost*/
      if(!(_lam_64825_mv_64831==1) ) goto _ml64833_L65319;
      _vI72978_insert_unique__apos_3_mv_3743  = mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_fI72983__lam_3713)(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI72978_insert_unique__apos_3_mv_3743==1) ) goto _ml3745_L72977;
      _vI72916__urv71179  = ptrflx_pkgconfig->result; //init
      goto _end_hash_987344574;
    _ml3745_L72977:;
/*match case 2:any*/
      _vI73009_x  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_fI72986_aux_uncurry(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, ptrhandle_pkg->pkg))); //init
      _vI72916__urv71179  = _fI73010_aux_uncurry(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(_vI73009_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    _end_hash_987344574:;
      ptrflx_pkgconfig->result = _vI72916__urv71179; //assign simple
      goto _ifdoelse_flx_pkgconfig_64728_L65324;
    _ml64833_L65319:;
/*match case 2:|keeprightmost*/
      if(!(_lam_64825_mv_64831==2) ) goto _ml64834_L65320;
      ptrflx_pkgconfig->result = _fI73042_aux(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
      goto _ifdoelse_flx_pkgconfig_64728_L65324;
    _ml64834_L65320:;
/*match case 3:|keepall*/
      if(!(_lam_64825_mv_64831==0) ) goto _ml64835_L65321;
      ptrflx_pkgconfig->result = _fI70009___plus_(ptf)
      .apply(_tt75175(ptrflx_pkgconfig->result, ptrhandle_pkg->pkg)) /* apply_stack */; //assign simple
      goto _ifdoelse_flx_pkgconfig_64728_L65324;
    _ml64835_L65321:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",322,14,326,23);
;
    _ifdoelse_flx_pkgconfig_64728_L65324:;
      lines  = (void* /*VR_nullptr*/ )0; //init
      _genout_urv73133  = ::flx::rtl::ioutil::readln(file); //init
      _vI65284_line  = _genout_urv73133; //init
    continue__ll_flx_pkgconfig_12044_L65325:;
      if(FLX_UNLIKELY(!(!((_vI65284_line == ::std::string(""))) ) )) goto break__ll_flx_pkgconfig_12044_L65328;
      _vI65284_line = lstrip(rstrip(_vI65284_line,::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")); //assign simple
      if(!(!((_vI65284_line == ::std::string("")))  && !((::flx::rtl::strutil::subscript(_vI65284_line,0) == ::flx::rtl::strutil::subscript(::std::string("#"),0)))  ) ) goto _ifdoelse_flx_pkgconfig_64731_L65327;
      lines = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(lines, _vI65284_line))); //assign simple
    _ifdoelse_flx_pkgconfig_64731_L65327:;
      _genout_urv73168  = ::flx::rtl::ioutil::readln(file); //init
      _vI65284_line = _genout_urv73168; //assign simple
      goto continue__ll_flx_pkgconfig_12044_L65325;
    break__ll_flx_pkgconfig_12044_L65328:;
      if(ptrflx_pkgconfig->backwards) goto _ifdoelse_flx_pkgconfig_64733_L65330;
      lines = _fI73171_aux_uncurry(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig)
      .apply(_at75201(lines, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    _ifdoelse_flx_pkgconfig_64733_L65330:;
      {
      _pt75206* _tmp75360 = (FLX_NEWP(_lam_64836)(ptf, this, ptrhandle_pkg, ptrflx_pkgconfig));
      FLX_SET_PC(75361)
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(this, _tt75207((_tmp75360), lines));
      }
    FLX_CASE_LABEL(75361)
      (void)fclose(file);
      ptrhandle_pkg->found = 1; //assign simple
      if(!ptrflx_pkgconfig->hide ) goto _ifdoelse_flx_pkgconfig_64726_L65333;
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
      FLX_RETURN // procedure return
    _ifdoelse_flx_pkgconfig_64726_L65333:;
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <71564>: +::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI71564__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <70478>: search_and_replace_uncurry: Apply method
_a17555t_75163 search_and_replace_uncurry::apply(_tt75210 const &_arg ){
  vs_uncurry = _arg.mem_0;
  _vI70517_v = _arg.mem_1;
      _vI71931_xs  = vs_uncurry; //init
      _generator_strings_8155  = (FLX_NEWP(_fI71932_iterator__apos_2)(ptf, this)); //init
    continue__ll_strings_8150_L70518:;
      _vI70508_search_and_replace__apos_2_mv_4671  = (_generator_strings_8155)->clone()
      ->apply() /* general apply */; //init
/*begin match*/
/*match case 1:|Some (k_param_std_4326, b_param_std_4327)*/
      if(!andthen(FLX_VNI(_vI70508_search_and_replace__apos_2_mv_4671)==1,(FLX_NEWP(_lam_4674)(ptf, this))) ) goto _ml4673_L70519;
      b_param_std_4327  = ((*((_at75165*)FLX_VNP(_vI70508_search_and_replace__apos_2_mv_4671))).data)[1]; //init
      k_param_std_4326  = ((*((_at75165*)FLX_VNP(_vI70508_search_and_replace__apos_2_mv_4671))).data)[0]; //init
      spos  = 0; //init
      m  = k_param_std_4326.size(); //init
      o  = ::flx::rtl::strutil::substr(_vI70517_v,0,spos); //init
      n  = _vI70517_v.find(k_param_std_4326,spos); //init
    continue__ll_strings_8136_L71983:;
      if(FLX_UNLIKELY(!(!((n == ::std::string::npos)) ) )) goto break__ll_strings_8136_L71984;
      {
      _a17555t_75163* _tmp75362 = (_a17555t_75163*)&o;
      _a17555t_75163 _tmp75363 = ::flx::rtl::strutil::substr(_vI70517_v,spos,n) + b_param_std_4327 ;
      ((_tmp75362))->append((_tmp75363));
      }
      spos = n + m ; //assign simple
      n = ((_vI70517_v.find(k_param_std_4326,spos)))/*int.flx: ctor size IDENT*/; //assign simple
      goto continue__ll_strings_8136_L71983;
    break__ll_strings_8136_L71984:;
      {
      _a17555t_75163* _tmp75364 = (_a17555t_75163*)&o;
      _a17555t_75163 _tmp75365 = ::flx::rtl::strutil::substr(_vI70517_v,spos,_vI70517_v.size());
      ((_tmp75364))->append((_tmp75365));
      }
      _vI70517_v = o; //assign simple
      goto continue__ll_strings_8150_L70518;
    _ml4673_L70519:;
/*match case 2:|Some any*/
      if(!andthen(FLX_VNI(_vI70508_search_and_replace__apos_2_mv_4671)==1,(FLX_NEWP(_lam_4676)(ptf, this))) ) goto _ml4675_L70520;
      goto continue__ll_strings_8150_L70518;
    _ml4675_L70520:;
/*match case 3:|None*/
      if(!(FLX_VNI(_vI70508_search_and_replace__apos_2_mv_4671)==0) ) goto _ml4677_L70521;
      goto _em4671_L70522;
    _ml4677_L70521:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",647,5,649,9);
;
    _em4671_L70522:;
      return _vI70517_v;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",646,3,651,4); // HACK! 
}

//------------------------------
//FUNCTION <72869>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_3713: Apply method
 ::flx::rtl::cl_t _fI72869__lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI72870_x = _arg;
      return eq(_vI72870_x,ptr_lam_64836->key);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <71874>: flx_pkgconfig::get_variable::_lam_64824: Apply method
 ::flx::rtl::cl_t _lam_64824::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",285,11,285,17); // HACK! 
}

//------------------------------

//PROCEDURE <65140:> flx_pkgconfig::parse_args: Call method
::flx::rtl::con_t * parse_args::call(::flx::rtl::con_t *_ptr_caller, void* const &_arg){
  _caller = _ptr_caller;
  _vI65207_args = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65140:> flx_pkgconfig::parse_args: Resume method
::flx::rtl::con_t *parse_args::resume(){
  FLX_START_SWITCH
      parse_args_mv_64771  = _vI65207_args; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(parse_args_mv_64771)==0) ) goto _ml64773_L74090;
      FLX_RETURN // procedure return
    _ml64773_L74090:;
/*match case 2:|Cons (arg_param_flx_pkgconfig_64666, tail_param_flx_pkgconfig_64667)*/
      if(!andthen(!!parse_args_mv_64771 ,(FLX_NEWP(_lam_64782)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64775_L74091;
      tail_param_flx_pkgconfig_64667  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(parse_args_mv_64771))).mem_1; //init
      arg_param_flx_pkgconfig_64666  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(parse_args_mv_64771))).mem_0; //init
      if(!((::std::string("--hide") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--hide").size()))) ) goto _ifdoend_flx_pkgconfig_64668_L74393;
      ptrflx_pkgconfig->hide = 1; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64668_L74393:;
      if(!((::std::string("--backwards") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--backwards").size()))) ) goto _ifdoend_flx_pkgconfig_64670_L74394;
      ptrflx_pkgconfig->backwards = 1; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64670_L74394:;
      if(!((::std::string("--list") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--list").size()))) ) goto _ifdoend_flx_pkgconfig_64672_L74395;
      ptrflx_pkgconfig->dolist = 1; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64672_L74395:;
      if(!((::std::string("--missing") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--missing").size()))) ) goto _ifdoend_flx_pkgconfig_64674_L74396;
      ptrflx_pkgconfig->missing = 1; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64674_L74396:;
      if(!((::std::string("--noerror") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--noerror").size()))) ) goto _ifdoend_flx_pkgconfig_64676_L74397;
      ptrflx_pkgconfig->require_pkg_exists = 0; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64676_L74397:;
      if(!((::std::string("--keeprightmost") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--keeprightmost").size()))) ) goto _ifdoend_flx_pkgconfig_64678_L74398;
      ptrflx_pkgconfig->keep = /*VR_int*/2; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64678_L74398:;
      if(!((::std::string("--keepleftmost") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--keepleftmost").size()))) ) goto _ifdoend_flx_pkgconfig_64680_L74399;
      ptrflx_pkgconfig->keep = /*VR_int*/1; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64680_L74399:;
      if(!((::std::string("--keepall") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,::std::string("--keepall").size()))) ) goto _ifdoend_flx_pkgconfig_64682_L74400;
      ptrflx_pkgconfig->keep = /*VR_int*/0; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64682_L74400:;
      if(!((::std::string("--field") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,7))) ) goto _ifdoend_flx_pkgconfig_64684_L74401;
      ptrflx_pkgconfig->fields = _fI70009___plus_(ptf)
      .apply(_tt75175(ptrflx_pkgconfig->fields, ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,8,arg_param_flx_pkgconfig_64666.size()))) /* apply_stack */; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64684_L74401:;
      if(!((::std::string("--extension") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,11))) ) goto _ifdoend_flx_pkgconfig_64686_L74402;
      ptrflx_pkgconfig->extension = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,12,arg_param_flx_pkgconfig_64666.size()); //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64686_L74402:;
      if(!((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,1)) && !((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,1,2)))  ) ) goto _ifdoend_flx_pkgconfig_64688_L74411;
      _vI74388_flags  = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,1,arg_param_flx_pkgconfig_64666.size()); //init
      if(!xfind(ptf, ptrflx_pkgconfig)
      .apply(_at75165(_vI74388_flags, ::std::string("r"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_64691_L74404;
      ptrflx_pkgconfig->recfields = _fI74470_aux(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->recfields, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
    _ifdoelse_flx_pkgconfig_64691_L74404:;
      if(!xfind(ptf, ptrflx_pkgconfig)
      .apply(_at75165(_vI74388_flags, ::std::string("h"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_64693_L74406;
      ptrflx_pkgconfig->hide = 1; //assign simple
    _ifdoelse_flx_pkgconfig_64693_L74406:;
      if(!xfind(ptf, ptrflx_pkgconfig)
      .apply(_at75165(_vI74388_flags, ::std::string("b"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_64695_L74408;
      ptrflx_pkgconfig->backwards = 1; //assign simple
    _ifdoelse_flx_pkgconfig_64695_L74408:;
      if(!xfind(ptf, ptrflx_pkgconfig)
      .apply(_at75165(_vI74388_flags, ::std::string("l"))) /* apply_stack */ ) goto _ifdoelse_flx_pkgconfig_64669_L74438;
      ptrflx_pkgconfig->dolist = 1; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64688_L74411:;
      if(!((::std::string("--rec") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,5))) ) goto _ifdoend_flx_pkgconfig_64698_L74412;
      fld  = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,6,arg_param_flx_pkgconfig_64666.size()); //init
      _lam_64776_mv_64778  = (fld == ::std::string("")); //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_lam_64776_mv_64778==1) ) goto _ml64780_L74558;
      _urv73675  = ::std::string("Requires"); //init
      goto _end_hash_1011826752;
    _ml64780_L74558:;
/*match case 2:any*/
      _urv73675  = fld; //init
    _end_hash_1011826752:;
      fld = _urv73675; //assign simple
      ptrflx_pkgconfig->recfields = _fI74563_aux(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->recfields, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64698_L74412:;
      if(!((::std::string("--path+") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,7))) ) goto _ifdoend_flx_pkgconfig_64700_L74415;
      _vI74391_x  = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,8,arg_param_flx_pkgconfig_64666.size()); //init
      if(!(!((ptrflx_pkgconfig->path == ::std::string(""))) ) ) goto _ifdoend_flx_pkgconfig_64702_L74413;
      ptrflx_pkgconfig->path = (ptrflx_pkgconfig->path + ::std::string(":") ) + _vI74391_x ; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64702_L74413:;
      ptrflx_pkgconfig->path = _vI74391_x; //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64700_L74415:;
      if(!((::std::string("--path") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,6))) ) goto _ifdoend_flx_pkgconfig_64704_L74416;
      ptrflx_pkgconfig->path = ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,7,arg_param_flx_pkgconfig_64666.size()); //assign simple
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64704_L74416:;
      if(!((::std::string("--help") == arg_param_flx_pkgconfig_64666)) ) goto _ifdoend_flx_pkgconfig_64706_L74417;
      {
      print_help(ptrflx_pkgconfig)
      .stack_call();
      }
      ::std::exit(0);
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64706_L74417:;
      if(!((::std::string("@") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,1))) ) goto _ifdoend_flx_pkgconfig_64708_L74418;
      if(!(!((::flx::rtl::strutil::atostr(std::getenv((::std::string("FLX_FILE_MONITOR")).c_str())) == ::std::string(""))) ) ) goto _ifdoelse_std_2797_L74655;
      {
      _a17555t_75163 _tmp75369 = (::std::string("[load] ") + lstrip(rstrip(::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,1,arg_param_flx_pkgconfig_64666.size()),::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")) ) + ::std::string("\n") ;
      ::flx::rtl::ioutil::write(stderr,((_tmp75369)));
      }
      fflush(stderr);
    _ifdoelse_std_2797_L74655:;
      data  = ::flx::rtl::ioutil::load_file((lstrip(rstrip(::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,1,arg_param_flx_pkgconfig_64666.size()),::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")))); //init
      _vI74719_x  = (_fI74668_aux(ptf, this, ptrflx_pkgconfig)
      .apply(_tt75182(data, (void* /*VR_nullptr*/ )0)) /* apply_stack */); //init
      _genout_urv74727  = (_vI74719_x); //init
      _genout_urv74015  = _genout_urv74727; //init
      _genout_urv73946  = _genout_urv74015; //init
      _vI74721__genout_urv70874  = _genout_urv73946; //init
      _vI74720_y  = _vI74721__genout_urv70874; //init
      {
      void** _tmp75370 = (void**)&_vI74720_y;
      _rev(((_tmp75370)),(_a17555t_75163*)0);
      }
      _genout_urv74728  = ((_vI74720_y)); //init
      _genout_urv74016  = _genout_urv74728; //init
      _genout_urv73947  = _genout_urv74016; //init
      FLX_SET_PC(75371)
      return (FLX_NEWP(parse_args)(ptf, ptrflx_pkgconfig))
      ->call(this, _genout_urv73947);
    FLX_CASE_LABEL(75371)
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64708_L74418:;
      if(!((::std::string("-") == ::flx::rtl::strutil::substr(arg_param_flx_pkgconfig_64666,0,1))) ) goto _ifdoend_flx_pkgconfig_64710_L74419;
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64710_L74419:;
      if(!((::std::string("") == arg_param_flx_pkgconfig_64666)) ) goto _ifdoend_flx_pkgconfig_64712_L74420;
      goto _ifdoelse_flx_pkgconfig_64669_L74438;
    _ifdoend_flx_pkgconfig_64712_L74420:;
      ptrflx_pkgconfig->pkgs = _fI70009___plus_(ptf)
      .apply(_tt75175(ptrflx_pkgconfig->pkgs, arg_param_flx_pkgconfig_64666)) /* apply_stack */; //assign simple
    _ifdoelse_flx_pkgconfig_64669_L74438:;
      {
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(parse_args)(ptf, ptrflx_pkgconfig))
      ->call(tmp, tail_param_flx_pkgconfig_64667);
      }
      FLX_KILLPC
      FLX_RETURN // procedure return
    _ml64775_L74091:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",172,7,241,10);
;
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//C FUNC <18182>: lstrip
_a17555t_75163 lstrip( _a17555t_75163 _vI18187_x, _a17555t_75163 _vI18188_e){
  _a112t_75189 _vI18186_j;
   ::flx::rtl::cl_t _vI18185_found;
  _a112t_75189 _vI18184_i;
      if(!((0 < _vI18187_x.size())) ) goto _ifdoelse_std_4266_L18199;
      _vI18184_i  = 0; //init
    redo__ll_strings_7829_L18189:;
      if(FLX_UNLIKELY(!(!((_vI18187_x.size() - 1  < _vI18184_i)) ) )) goto _ifdoelse_std_4266_L18199;
      _vI18185_found  = 0; //init
      _vI18186_j  = 0; //init
    redo__ll_strings_7835_L18190:;
      if(FLX_UNLIKELY(!(!((_vI18188_e.size() - 1  < _vI18186_j)) ) )) goto break__ll_strings_7835_L18194;
      if(!((::flx::rtl::strutil::subscript(_vI18187_x,_vI18184_i) == ::flx::rtl::strutil::subscript(_vI18188_e,_vI18186_j))) ) goto _ifdoelse_std_4268_L18192;
      _vI18185_found = 1; //assign simple
    _ifdoelse_std_4268_L18192:;
      {
      _a112t_75189* _tmp75374 = (_a112t_75189*)&_vI18186_j;
      ++*((_tmp75374));
      }
      goto redo__ll_strings_7835_L18190;
    break__ll_strings_7835_L18194:;
      if(_vI18185_found) goto _ifdoend_std_4269_L18195;
      return ::flx::rtl::strutil::substr(_vI18187_x,_vI18184_i,_vI18187_x.size());
    _ifdoend_std_4269_L18195:;
      {
      _a112t_75189* _tmp75375 = (_a112t_75189*)&_vI18184_i;
      ++*((_tmp75375));
      }
      goto redo__ll_strings_7829_L18189;
    _ifdoelse_std_4266_L18199:;
      return ::std::string("");
}
//------------------------------
//FUNCTION <72744>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::_lam_4676: Apply method
 ::flx::rtl::cl_t _fI72744__lam_4676::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",647,5,649,9); // HACK! 
}

//------------------------------

//PROCEDURE <65261:> flx_pkgconfig::add_val: Call method
::flx::rtl::con_t * add_val::call(::flx::rtl::con_t *_ptr_caller, _a17555t_75163 const &_arg){
  _caller = _ptr_caller;
  v = _arg;
  INIT_PC
  return this;
}

//PROCEDURE <65261:> flx_pkgconfig::add_val: Resume method
::flx::rtl::con_t *add_val::resume(){
      _vI71241_insert_unique__apos_3_mv_3743  = mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_lam_3713)(ptf, this, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI71241_insert_unique__apos_3_mv_3743==1) ) goto _ml3745_L71240;
      _urv71179  = ptrflx_pkgconfig->result; //init
      goto _end_hash_987275081;
    _ml3745_L71240:;
/*match case 2:any*/
      _vI71272_x  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_fI71249_aux_uncurry(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, v))); //init
      _urv71179  = _fI71273_aux_uncurry(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(_vI71272_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    _end_hash_987275081:;
      ptrflx_pkgconfig->result = _urv71179; //assign simple
      FLX_RETURN // procedure return
    FLX_RETURN
}
//------------------------------
//FUNCTION <72170>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry: Apply method
void* _fI72170_aux_uncurry::apply(_at75201 const &_arg ){
  _vI72171_x_uncurry = (_arg.data)[0];
  _vI72172_y = (_arg.data)[1];
    start_71064_L72192:;
      _vI72187_aux__apos_2_mv_3643  = _vI72171_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI72187_aux__apos_2_mv_3643)==0) ) goto _ml3645_L72186;
      return _vI72172_y;
    _ml3645_L72186:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI72187_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI72191__lam_3647)(ptf, this, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3646_L72183;
      _vI72185_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI72187_aux__apos_2_mv_3643))).mem_1; //init
      _vI72184_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI72187_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI72172_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI72172_y, _vI72185_h_param_std_3533))); //init
      _vI72171_x_uncurry  = _vI72184_t_param_std_3532; //init
      goto start_71064_L72192;
    _ml3646_L72183:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <71270>: flx_pkgconfig::add_val::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <65239>: flx_pkgconfig::get_field: Apply method
_at75165 get_field::apply(_a17555t_75163 const &_arg ){
  line = _arg;
      _vI72061_find_mv_4416  = line.find((::flx::rtl::strutil::subscript(::std::string(":"),0))); //init
/*begin match*/
/*match case 1:(i_param_std_4201 when (== (i_param_std_4201, stl_npos)))*/
      if(!((_vI72061_find_mv_4416 == ::std::string::npos)) ) goto _ml4418_L72064;
      get_field_mv_64801  = (void* /*VR_nullptr*/ )0; //init
      goto _end_inline_find_72025_L72065;
    _ml4418_L72064:;
/*match case 2:i_param_std_4202*/
      _vI72063_i_param_std_4202  = _vI72061_find_mv_4416; //init
      get_field_mv_64801  = FLX_VNR(1, new(*ptf->gcp, _a112t_75189_ptr_map, true) _a112t_75189 (_vI72063_i_param_std_4202)); //init
    _end_inline_find_72025_L72065:;
/*begin match*/
/*match case 1:|None*/
      if(!(FLX_VNI(get_field_mv_64801)==0) ) goto _ml64803_L72051;
      return _at75165(::std::string(""), ::std::string(""));
    _ml64803_L72051:;
/*match case 2:|Some n_param_flx_pkgconfig_64720*/
      if(!andthen(FLX_VNI(get_field_mv_64801)==1,(FLX_NEWP(_lam_64805)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64804_L72052;
      n_param_flx_pkgconfig_64720  = *((_a112t_75189*)FLX_VNP(get_field_mv_64801)); //init
      return _at75165(lstrip(rstrip(::flx::rtl::strutil::substr(line,0,n_param_flx_pkgconfig_64720),::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")), lstrip(rstrip(::flx::rtl::strutil::substr(line,n_param_flx_pkgconfig_64720 + 1 ,line.size()),::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B")));
    _ml64804_L72052:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",273,9,277,32);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",272,5,279,8); // HACK! 
}

//------------------------------
//FUNCTION <70009>: +: Apply method
void* _fI70009___plus_::apply(_tt75175 const &_arg ){
  _vI70010_x = _arg.mem_0;
  _vI70011_y = _arg.mem_1;
      _vI71542_x  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_fI71516_aux_uncurry(ptf, this)
      .apply(_at75201(_vI70010_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */, _vI70011_y))); //init
      return _fI71543_aux_uncurry(ptf, this)
      .apply(_at75201(_vI71542_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",257,3,257,70); // HACK! 
}

//------------------------------
//FUNCTION <72703>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2: Apply method
_a17555t_75163 _fI72703_search_and_replace__apos_2::apply(_a17555t_75163 const &_arg ){
  _vI72709_v = _arg;
      _vI72716_xs  = ptrhandle_pkg->variables; //init
      _vI72704__generator_strings_8155  = (FLX_NEWP(_fI72717_iterator__apos_2)(ptf, this, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig)); //init
    continue__ll_strings_8150_L72710:;
      _vI72699_search_and_replace__apos_2_mv_4671  = (_vI72704__generator_strings_8155)->clone()
      ->apply() /* general apply */; //init
/*begin match*/
/*match case 1:|Some (k_param_std_4326, b_param_std_4327)*/
      if(!andthen(FLX_VNI(_vI72699_search_and_replace__apos_2_mv_4671)==1,(FLX_NEWP(_fI72729__lam_4674)(ptf, this, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml4673_L72711;
      _vI72706_b_param_std_4327  = ((*((_at75165*)FLX_VNP(_vI72699_search_and_replace__apos_2_mv_4671))).data)[1]; //init
      _vI72707_k_param_std_4326  = ((*((_at75165*)FLX_VNP(_vI72699_search_and_replace__apos_2_mv_4671))).data)[0]; //init
      _vI72737_spos  = 0; //init
      _vI72733_m  = _vI72707_k_param_std_4326.size(); //init
      _vI72734_o  = ::flx::rtl::strutil::substr(_vI72709_v,0,_vI72737_spos); //init
      _vI72735_n  = _vI72709_v.find(_vI72707_k_param_std_4326,_vI72737_spos); //init
    continue__ll_strings_8136_L72740:;
      if(FLX_UNLIKELY(!(!((_vI72735_n == ::std::string::npos)) ) )) goto break__ll_strings_8136_L72741;
      {
      _a17555t_75163* _tmp75378 = (_a17555t_75163*)&_vI72734_o;
      _a17555t_75163 _tmp75379 = ::flx::rtl::strutil::substr(_vI72709_v,_vI72737_spos,_vI72735_n) + _vI72706_b_param_std_4327 ;
      ((_tmp75378))->append((_tmp75379));
      }
      _vI72737_spos = _vI72735_n + _vI72733_m ; //assign simple
      _vI72735_n = ((_vI72709_v.find(_vI72707_k_param_std_4326,_vI72737_spos)))/*int.flx: ctor size IDENT*/; //assign simple
      goto continue__ll_strings_8136_L72740;
    break__ll_strings_8136_L72741:;
      {
      _a17555t_75163* _tmp75380 = (_a17555t_75163*)&_vI72734_o;
      _a17555t_75163 _tmp75381 = ::flx::rtl::strutil::substr(_vI72709_v,_vI72737_spos,_vI72709_v.size());
      ((_tmp75380))->append((_tmp75381));
      }
      _vI72709_v = _vI72734_o; //assign simple
      goto continue__ll_strings_8150_L72710;
    _ml4673_L72711:;
/*match case 2:|Some any*/
      if(!andthen(FLX_VNI(_vI72699_search_and_replace__apos_2_mv_4671)==1,(FLX_NEWP(_fI72744__lam_4676)(ptf, this, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml4675_L72712;
      goto continue__ll_strings_8150_L72710;
    _ml4675_L72712:;
/*match case 3:|None*/
      if(!(FLX_VNI(_vI72699_search_and_replace__apos_2_mv_4671)==0) ) goto _ml4677_L72713;
      goto _em4671_L72714;
    _ml4677_L72713:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",647,5,649,9);
;
    _em4671_L72714:;
      return _vI72709_v;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",646,3,651,4); // HACK! 
}

//------------------------------
//FUNCTION <65132>: flx_pkgconfig::xfind: Apply method
 ::flx::rtl::cl_t xfind::apply(_at75165 const &_arg ){
  flags = (_arg.data)[0];
  c = (_arg.data)[1];
      find_mv_4396  = flags.find(c); //init
/*begin match*/
/*match case 1:(i_param_std_4193 when (== (i_param_std_4193, stl_npos)))*/
      if(!((find_mv_4396 == ::std::string::npos)) ) goto _ml4398_L73510;
      xfind_mv_64765  = (void* /*VR_nullptr*/ )0; //init
      goto _end_inline_find_73485_L73511;
    _ml4398_L73510:;
/*match case 2:i_param_std_4194*/
      i_param_std_4194  = find_mv_4396; //init
      xfind_mv_64765  = FLX_VNR(1, new(*ptf->gcp, _a112t_75189_ptr_map, true) _a112t_75189 (i_param_std_4194)); //init
    _end_inline_find_73485_L73511:;
/*begin match*/
/*match case 1:|None*/
      if(!(FLX_VNI(xfind_mv_64765)==0) ) goto _ml64767_L73498;
      return 0;
    _ml64767_L73498:;
/*match case 2:|Some any*/
      if(!andthen(FLX_VNI(xfind_mv_64765)==1,(FLX_NEWP(_lam_64769)(ptf, this, ptrflx_pkgconfig))) ) goto _ml64768_L73499;
      return 1;
    _ml64768_L73499:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",164,6,166,22);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",163,5,168,6); // HACK! 
}

//------------------------------
//FUNCTION <75098>: cat_uncurry::iterator'2::_lam_3822: Apply method
 ::flx::rtl::cl_t _fI75098__lam_3822::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",726,11,726,20); // HACK! 
}

//------------------------------
//FUNCTION <74641>: flx_pkgconfig::parse_args::aux::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI74641__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <72586>: flx_pkgconfig::lexstr::aux_uncurry: Apply method
void* _fI72586_aux_uncurry::apply(_at75201 const &_arg ){
  _vI72587_x_uncurry = (_arg.data)[0];
  _vI72588_y = (_arg.data)[1];
    start_71064_L72608:;
      _vI72603_aux__apos_2_mv_3643  = _vI72587_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI72603_aux__apos_2_mv_3643)==0) ) goto _ml3645_L72602;
      return _vI72588_y;
    _ml3645_L72602:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI72603_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI72607__lam_3647)(ptf, this, ptrlexstr, ptrflx_pkgconfig))) ) goto _ml3646_L72599;
      _vI72601_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI72603_aux__apos_2_mv_3643))).mem_1; //init
      _vI72600_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI72603_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI72588_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI72588_y, _vI72601_h_param_std_3533))); //init
      _vI72587_x_uncurry  = _vI72600_t_param_std_3532; //init
      goto start_71064_L72608;
    _ml3646_L72599:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------

//PROCEDURE <65368:> _init_: Call method
::flx::rtl::con_t * _init_::call(::flx::rtl::con_t *_ptr_caller){
  _caller = _ptr_caller;
  INIT_PC
  return this;
}

//PROCEDURE <65368:> _init_: Resume method
::flx::rtl::con_t *_init_::resume(){
      ptf-> upper  = ::std::string("ABCDEFGHIJKLMNOPQRSTUVWXYZ"); //init
      ptf-> lower  = ::std::string("abcdefghijklmnopqrstuvwxyz"); //init
      ptf-> letters  = ptf-> upper + ptf-> lower ; //init
      ptf-> gcp->allow_collection_anywhere=false;
      _vI70950_x  = (aux_uncurry(ptf, this)
      .apply(_tt75168(range(ptf,0,ptf-> argc,1), (void* /*VR_nullptr*/ )0)) /* apply_stack */); //init
      _genout_urv70957  = (_vI70950_x); //init
      _genout_urv70917  = _genout_urv70957; //init
      _genout_urv70880  = _genout_urv70917; //init
      _vI70952__genout_urv70874  = _genout_urv70880; //init
      _vI70951_y  = _vI70952__genout_urv70874; //init
      {
      void** _tmp75386 = (void**)&_vI70951_y;
      _rev(((_tmp75386)),(_a17555t_75163*)0);
      }
      _vI70966_x  = (_vI70951_y); //init
      tail_mv_3628  = _vI70966_x; //init
/*begin match*/
/*match case 1:|Snoc (t_param_std_3527, any)*/
      if(!andthen(FLX_VNI(tail_mv_3628)==1,(FLX_NEWP(_lam_3631)(ptf, this))) ) goto _ml3630_L70967;
      t_param_std_3527  = (*((_tt75175*)FLX_VNP(tail_mv_3628))).mem_0; //init
      _urv70965  = t_param_std_3527; //init
      goto _end_inline_tail_70974_L70974;
    _ml3630_L70967:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",346,5,348,14);
;
    _end_inline_tail_70974_L70974:;
      ptf-> _ds2_64642  = flx_pkgconfig(ptf)
      .apply(_urv70965) /* apply_stack */; //init
      ptf-> _vI65366_return_code  = ptf-> _ds2_64642.mem_0; //init
      ptf-> _vI65367_result  = ptf-> _ds2_64642.mem_1; //init
      {
      _a17555t_75163 _tmp75388 = lstrip(rstrip(cat_uncurry(ptf)
      .apply(_tt75182(::std::string(" "), ptf-> _vI65367_result)) /* apply_stack */,::std::string(" \x09\n\x0D\x0C\x0B")),::std::string(" \x09\n\x0D\x0C\x0B"));
      ::flx::rtl::ioutil::write(stdout,((_tmp75388)));
      }
      ::flx::rtl::ioutil::write(stdout,(::std::string("\n")));
      ::std::exit((ptf-> _vI65366_return_code));
    FLX_RETURN
}
//------------------------------
//FUNCTION <71671>: isidstart::_lam_2325: Apply method
 ::flx::rtl::cl_t _lam_2325::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/char.fdoc",67,59,67,65); // HACK! 
}

//------------------------------
//FUNCTION <71991>: search_and_replace_uncurry::_lam_4676: Apply method
 ::flx::rtl::cl_t _lam_4676::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",647,5,649,9); // HACK! 
}

//------------------------------
//FUNCTION <72621>: flx_pkgconfig::lexstr::aux_uncurry: Apply method
void* _fI72621_aux_uncurry::apply(_at75201 const &_arg ){
  _vI72622_x_uncurry = (_arg.data)[0];
  _vI72623_y = (_arg.data)[1];
    start_71064_L72643:;
      _vI72638_aux__apos_2_mv_3643  = _vI72622_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI72638_aux__apos_2_mv_3643)==0) ) goto _ml3645_L72637;
      return _vI72623_y;
    _ml3645_L72637:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI72638_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI72642__lam_3647)(ptf, this, ptrlexstr, ptrflx_pkgconfig))) ) goto _ml3646_L72634;
      _vI72636_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI72638_aux__apos_2_mv_3643))).mem_1; //init
      _vI72635_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI72638_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI72623_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI72623_y, _vI72636_h_param_std_3533))); //init
      _vI72622_x_uncurry  = _vI72635_t_param_std_3532; //init
      goto start_71064_L72643;
    _ml3646_L72634:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <75102>: cat_uncurry::_lam_3690: Apply method
 ::flx::rtl::cl_t _lam_3690::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",511,5,511,39); // HACK! 
}

//------------------------------
//FUNCTION <72717>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::search_and_replace'2::iterator'2: Apply method
void* _fI72717_iterator__apos_2::apply(){
  FLX_START_SWITCH
    continue__ll_lists_5922_L72718:;
      _vI72724_iterator__apos_2_mv_3819  = ptr_fI72703_search_and_replace__apos_2->_vI72716_xs; //init
/*begin match*/
/*match case 1:|Snoc (t_param_std_3580, h_param_std_3581)*/
      if(!andthen(FLX_VNI(_vI72724_iterator__apos_2_mv_3819)==1,(FLX_NEWP(_fI72728__lam_3822)(ptf, this, ptr_fI72703_search_and_replace__apos_2, ptr_lam_64836, ptr_lam_64825, ptrhandle_pkg, ptrflx_pkgconfig))) ) goto _ml3821_L72721;
      _vI72723_h_param_std_3581  = (*((_tt75211*)FLX_VNP(_vI72724_iterator__apos_2_mv_3819))).mem_1; //init
      _vI72722_t_param_std_3580  = (*((_tt75211*)FLX_VNP(_vI72724_iterator__apos_2_mv_3819))).mem_0; //init
      ptr_fI72703_search_and_replace__apos_2->_vI72716_xs = _vI72722_t_param_std_3580; //assign simple
      FLX_SET_PC(75390)
      return FLX_VNR(1, new(*ptf->gcp, _at75165_ptr_map, true) _at75165 (_vI72723_h_param_std_3581));//yield
    FLX_CASE_LABEL(75390)
      goto continue__ll_lists_5922_L72718;
    _ml3821_L72721:;
/*match case 2:|Empty*/
      if(!(FLX_VNI(_vI72724_iterator__apos_2_mv_3819)==0) ) goto _ml3823_L72720;
      return (void* /*VR_nullptr*/ )0;
    _ml3823_L72720:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",725,9,728,18);
;
      goto continue__ll_lists_5922_L72718;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",723,5,730,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <74967>: flx_pkgconfig::aux: Apply method
void* _fI74967_aux::apply(_tt75182 const &_arg ){
  _vI74972_x = _arg.mem_0;
  _vI74973_y = _arg.mem_1;
    start_74890_L75017:;
      _vI75007_find_mv_4416  = _vI74972_x.find((::flx::rtl::strutil::subscript(::std::string(":"),0))); //init
/*begin match*/
/*match case 1:(i_param_std_4201 when (== (i_param_std_4201, stl_npos)))*/
      if(!((_vI75007_find_mv_4416 == ::std::string::npos)) ) goto _ml4418_L75010;
      aux_mv_4596  = (void* /*VR_nullptr*/ )0; //init
      goto _end_inline_find_74846_L75011;
    _ml4418_L75010:;
/*match case 2:i_param_std_4202*/
      _vI75009_i_param_std_4202  = _vI75007_find_mv_4416; //init
      aux_mv_4596  = FLX_VNR(1, new(*ptf->gcp, _a112t_75189_ptr_map, true) _a112t_75189 (_vI75009_i_param_std_4202)); //init
    _end_inline_find_74846_L75011:;
/*begin match*/
/*match case 1:|None*/
      if(!(FLX_VNI(aux_mv_4596)==0) ) goto _ml4598_L74998;
      return FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74973_y, _vI74972_x)));
    _ml4598_L74998:;
/*match case 2:|Some n_param_std_4277*/
      if(!andthen(FLX_VNI(aux_mv_4596)==1,(FLX_NEWP(_lam_4600)(ptf, this, ptrflx_pkgconfig))) ) goto _ml4599_L74999;
      n_param_std_4277  = *((_a112t_75189*)FLX_VNP(aux_mv_4596)); //init
/*parallel assignment (2)*/
      _vI74973_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74973_y, ::flx::rtl::strutil::substr(_vI74972_x,0,n_param_std_4277)))); //init
      _vI74972_x  = ::flx::rtl::strutil::substr(_vI74972_x,n_param_std_4277 + 1 ,_vI74972_x.size()); //init
      goto start_74890_L75017;
    _ml4599_L74999:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",385,7,387,61);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/strings.fdoc",384,5,389,6); // HACK! 
}

//------------------------------
//FUNCTION <65036>: flx_pkgconfig: Apply method
_tt75177 flx_pkgconfig::apply(void* const &_arg ){
  args = _arg;
      path  = ::flx::rtl::strutil::atostr(std::getenv((::std::string("PKG_CONFIG_PATH")).c_str())); //init
      fields  = (void* /*VR_nullptr*/ )0; //init
      pkgs  = (void* /*VR_nullptr*/ )0; //init
      hide  = 0; //init
      require_pkg_exists  = 1; //init
      missing  = 0; //init
      recfields  = (void* /*VR_nullptr*/ )0; //init
      dolist  = 0; //init
      listkeys  = 0; //init
      return_code  = 0; //init
      backwards  = 0; //init
      keep  = /*VR_int*/1; //init
      extension  = ::std::string("fpc"); //init
      //run procedure directcall parse_args<65140>directproc args<65356>varname;
      {
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(parse_args)(ptf, this))
          ->call(0, args);
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->svc_req;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller flx_pkgconfig\n");
            fprintf(stderr,"Calls  parse_args\n");
            abort();
          }
          _p=_p->resume();
        }
      }
      _vI75018_x  = (_fI74967_aux(ptf, this)
      .apply(_tt75182(path, (void* /*VR_nullptr*/ )0)) /* apply_stack */); //init
      _genout_urv75026  = (_vI75018_x); //init
      _genout_urv74957  = _genout_urv75026; //init
      _genout_urv70874  = _genout_urv74957; //init
      y  = _genout_urv70874; //init
      {
      void** _tmp75394 = (void**)&y;
      _rev(((_tmp75394)),(_a17555t_75163*)0);
      }
      _genout_urv75027  = ((y)); //init
      _genout_urv74958  = _genout_urv75027; //init
      dirs  = reattach_drive_letters(ptf, this)
      .apply(_genout_urv74958) /* apply_stack */; //init
      result  = (void* /*VR_nullptr*/ )0; //init
    continue__ll_flx_pkgconfig_12158_L65357:;
      is_empty_mv_3624  = pkgs; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(is_empty_mv_3624)==0) ) goto _ml3626_L75044;
      _urv75038  = 1; //init
      goto _end_inline_is_empty_75048_L75048;
    _ml3626_L75044:;
/*match case 2:any*/
      _urv75038  = 0; //init
    _end_inline_is_empty_75048_L75048:;
      if(FLX_UNLIKELY(_urv75038)) goto break__ll_flx_pkgconfig_12158_L65358;
      flx_pkgconfig_mv_64850  = pkgs; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(flx_pkgconfig_mv_64850)==0) ) goto _ml64852_L75057;
      goto continue__ll_flx_pkgconfig_12158_L65357;
    _ml64852_L75057:;
/*match case 2:|Cons (pkg_param_flx_pkgconfig_64749, tail_param_flx_pkgconfig_64750)*/
      if(!andthen(!!flx_pkgconfig_mv_64850 ,(FLX_NEWP(_lam_64856)(ptf, this))) ) goto _ml64854_L75058;
      tail_param_flx_pkgconfig_64750  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(flx_pkgconfig_mv_64850))).mem_1; //init
      pkg_param_flx_pkgconfig_64749  = (reinterpret<_tt75182>(flx::list::snoc2cons<_a17555t_75163>(flx_pkgconfig_mv_64850))).mem_0; //init
      pkgs = tail_param_flx_pkgconfig_64750; //assign simple
      //run procedure directcall handle_pkg<65273>directproc (pkg_param_flx_pkgconfig_64749<75055>varname, Empty<69477>varname);
      {
        ::flx::rtl::con_t *_p =
          (FLX_NEWP(handle_pkg)(ptf, this))
          ->call(0, _tt75182(pkg_param_flx_pkgconfig_64749, (void* /*VR_nullptr*/ )0));
        while(_p) {
          if(_p->p_svc) {
            int svc = _p->p_svc->svc_req;
            fprintf(stderr,"Function calls procedure which does service call %d: %s\n",
                svc,::flx::rtl::describe_service_call(svc));
            fprintf(stderr,"Caller flx_pkgconfig\n");
            fprintf(stderr,"Calls  handle_pkg\n");
            abort();
          }
          _p=_p->resume();
        }
      }
      goto continue__ll_flx_pkgconfig_12158_L65357;
    _ml64854_L75058:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",390,7,398,10);
;
      goto continue__ll_flx_pkgconfig_12158_L65357;
    break__ll_flx_pkgconfig_12158_L65358:;
      return _tt75177(return_code, result);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",24,3,405,4); // HACK! 
}

//------------------------------
//FUNCTION <72143>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::_lam_3713: Apply method
 ::flx::rtl::cl_t _fI72143__lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI72144_x = _arg;
      return eq(_vI72144_x,ptr_lam_64836->key);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <65049>: flx_pkgconfig::lexit: Apply method
_tt75215 lexit::apply(_at75213 const &_arg ){
  ini = (_arg.data)[0];
  finish = (_arg.data)[1];
      start  = ini; //init
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_64643_L65058;
      return _tt75215(start, (void* /*VR_packed*/ )2);
    _ifdoend_flx_pkgconfig_64643_L65058:;
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0))) ) goto _ifdoend_flx_pkgconfig_64645_L65061;
      {
      _a19692t_75212* _tmp75397 = (_a19692t_75212*)&start;
      ++*((_tmp75397));
      }
    continue__ll_flx_pkgconfig_11689_L65059:;
      if(FLX_UNLIKELY(!(!((start == finish))  && (*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0)) ) )) goto break__ll_flx_pkgconfig_11689_L65060;
      {
      _a19692t_75212* _tmp75398 = (_a19692t_75212*)&start;
      ++*((_tmp75398));
      }
      goto continue__ll_flx_pkgconfig_11689_L65059;
    break__ll_flx_pkgconfig_11689_L65060:;
      return _tt75215(start, (void* /*VR_packed*/ )2);
    _ifdoend_flx_pkgconfig_64645_L65061:;
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("\""),0))) ) goto _ifdoend_flx_pkgconfig_64647_L65065;
      {
      _a19692t_75212* _tmp75399 = (_a19692t_75212*)&start;
      ++*((_tmp75399));
      }
      p1  = start; //init
    continue__ll_flx_pkgconfig_11704_L65062:;
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("\""),0)))  ) )) goto break__ll_flx_pkgconfig_11704_L65063;
      {
      _a19692t_75212* _tmp75400 = (_a19692t_75212*)&start;
      ++*((_tmp75400));
      }
      goto continue__ll_flx_pkgconfig_11704_L65062;
    break__ll_flx_pkgconfig_11704_L65063:;
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_64649_L65064;
      return _tt75215(start, FLX_VR(0, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p1,start))));
    _ifdoend_flx_pkgconfig_64649_L65064:;
      return _tt75215(start + 1 , FLX_VR(0, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p1,start))));
    _ifdoend_flx_pkgconfig_64647_L65065:;
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("'"),0))) ) goto _ifdoend_flx_pkgconfig_64651_L65069;
      {
      _a19692t_75212* _tmp75401 = (_a19692t_75212*)&start;
      ++*((_tmp75401));
      }
      p2  = start; //init
    continue__ll_flx_pkgconfig_11732_L65066:;
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("'"),0)))  ) )) goto break__ll_flx_pkgconfig_11732_L65067;
      {
      _a19692t_75212* _tmp75402 = (_a19692t_75212*)&start;
      ++*((_tmp75402));
      }
      goto continue__ll_flx_pkgconfig_11732_L65066;
    break__ll_flx_pkgconfig_11732_L65067:;
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_64653_L65068;
      return _tt75215(start, FLX_VR(0, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p2,start))));
    _ifdoend_flx_pkgconfig_64653_L65068:;
      return _tt75215(start + 1 , FLX_VR(0, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p2,start))));
    _ifdoend_flx_pkgconfig_64651_L65069:;
      if(!((*start  == ::flx::rtl::strutil::subscript(::std::string("`"),0))) ) goto _ifdoend_flx_pkgconfig_64655_L65073;
      {
      _a19692t_75212* _tmp75403 = (_a19692t_75212*)&start;
      ++*((_tmp75403));
      }
      p3  = start; //init
    continue__ll_flx_pkgconfig_11760_L65070:;
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string("`"),0)))  ) )) goto break__ll_flx_pkgconfig_11760_L65071;
      {
      _a19692t_75212* _tmp75404 = (_a19692t_75212*)&start;
      ++*((_tmp75404));
      }
      goto continue__ll_flx_pkgconfig_11760_L65070;
    break__ll_flx_pkgconfig_11760_L65071:;
      if(!((start == finish)) ) goto _ifdoend_flx_pkgconfig_64657_L65072;
      return _tt75215(start, FLX_VR(1, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p3,start))));
    _ifdoend_flx_pkgconfig_64657_L65072:;
      return _tt75215(start + 1 , FLX_VR(1, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p3,start))));
    _ifdoend_flx_pkgconfig_64655_L65073:;
      p4  = start; //init
    continue__ll_flx_pkgconfig_11787_L65074:;
      if(FLX_UNLIKELY(!(!((start == finish))  && !((*start  == ::flx::rtl::strutil::subscript(::std::string(" "),0)))  ) )) goto break__ll_flx_pkgconfig_11787_L65075;
      {
      _a19692t_75212* _tmp75405 = (_a19692t_75212*)&start;
      ++*((_tmp75405));
      }
      goto continue__ll_flx_pkgconfig_11787_L65074;
    break__ll_flx_pkgconfig_11787_L65075:;
      return _tt75215(start, FLX_VR(0, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (::std::string(p4,start))));
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",57,5,111,6); // HACK! 
}

//------------------------------

//PROCEDURE <65273:> flx_pkgconfig::handle_pkg: Call method
::flx::rtl::con_t * handle_pkg::call(::flx::rtl::con_t *_ptr_caller, _tt75182 const &_arg){
  _caller = _ptr_caller;
  pkg = _arg.mem_0;
  trace = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <65273:> flx_pkgconfig::handle_pkg: Resume method
::flx::rtl::con_t *handle_pkg::resume(){
  FLX_START_SWITCH
      variables  = (void* /*VR_nullptr*/ )0; //init
      if(!mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_fI73201__lam_3713)(ptf, this, ptrflx_pkgconfig)), trace)) /* apply_stack */ ) goto _ifret_flx_pkgconfig_64724_L65337;
      FLX_RETURN // procedure return
    _ifret_flx_pkgconfig_64724_L65337:;
      found  = 0; //init
      {
      _pt75206* _tmp75406 = (FLX_NEWP(_lam_64825)(ptf, this, ptrflx_pkgconfig));
      FLX_SET_PC(75407)
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(this, _tt75207((_tmp75406), ptrflx_pkgconfig->dirs));
      }
    FLX_CASE_LABEL(75407)
      if(found) goto _ifdoelse_flx_pkgconfig_64744_L65343;
      if(!ptrflx_pkgconfig->require_pkg_exists ) goto _ifdoelse_flx_pkgconfig_64746_L65339;
      ptrflx_pkgconfig->return_code = 1; //assign simple
    _ifdoelse_flx_pkgconfig_64746_L65339:;
      if(!ptrflx_pkgconfig->missing ) goto _ifdoelse_flx_pkgconfig_64744_L65343;
      _vI73269_insert_unique__apos_3_mv_3743  = mem_uncurry(ptf)
      .apply(_tt75205((FLX_NEWP(_fI73274__lam_3713)(ptf, this, ptrflx_pkgconfig)), ptrflx_pkgconfig->result)) /* apply_stack */; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI73269_insert_unique__apos_3_mv_3743==1) ) goto _ml3745_L73268;
      _vI73207__urv71179  = ptrflx_pkgconfig->result; //init
      goto _end_hash_987347809;
    _ml3745_L73268:;
/*match case 2:any*/
      _vI73300_x  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_fI73277_aux_uncurry(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(ptrflx_pkgconfig->result, (void* /*VR_nullptr*/ )0)) /* apply_stack */, pkg))); //init
      _vI73207__urv71179  = _fI73301_aux_uncurry(ptf, this, ptrflx_pkgconfig)
      .apply(_at75201(_vI73300_x, (void* /*VR_nullptr*/ )0)) /* apply_stack */; //init
    _end_hash_987347809:;
      ptrflx_pkgconfig->result = _vI73207__urv71179; //assign simple
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
      FLX_RETURN // procedure return
    _ifdoelse_flx_pkgconfig_64744_L65343:;
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
    FLX_RETURN
  FLX_END_SWITCH
}
//------------------------------
//FUNCTION <75119>: cat_uncurry::_lam_3700: Apply method
 ::flx::rtl::cl_t _lam_3700::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",522,9,522,18); // HACK! 
}

//------------------------------
//FUNCTION <70972>: _init_::_lam_3631: Apply method
 ::flx::rtl::cl_t _lam_3631::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",347,7,347,16); // HACK! 
}

//------------------------------
//FUNCTION <72831>: flx_pkgconfig::handle_pkg::_lam_64825::_lam_64836::aux_uncurry::_lam_3641: Apply method
 ::flx::rtl::cl_t _fI72831__lam_3641::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",369,9,369,18); // HACK! 
}

//------------------------------
//FUNCTION <75087>: cat_uncurry::iterator'2: Apply method
void* _fI75087_iterator__apos_2::apply(){
  FLX_START_SWITCH
    continue__ll_lists_5922_L75088:;
      _vI75094_iterator__apos_2_mv_3819  = ptrcat_uncurry->_vI75086_xs; //init
/*begin match*/
/*match case 1:|Snoc (t_param_std_3580, h_param_std_3581)*/
      if(!andthen(FLX_VNI(_vI75094_iterator__apos_2_mv_3819)==1,(FLX_NEWP(_fI75098__lam_3822)(ptf, this, ptrcat_uncurry))) ) goto _ml3821_L75091;
      _vI75093_h_param_std_3581  = (*((_tt75175*)FLX_VNP(_vI75094_iterator__apos_2_mv_3819))).mem_1; //init
      _vI75092_t_param_std_3580  = (*((_tt75175*)FLX_VNP(_vI75094_iterator__apos_2_mv_3819))).mem_0; //init
      ptrcat_uncurry->_vI75086_xs = _vI75092_t_param_std_3580; //assign simple
      FLX_SET_PC(75408)
      return FLX_VNR(1, new(*ptf->gcp, _a17555t_75163_ptr_map, true) _a17555t_75163 (_vI75093_h_param_std_3581));//yield
    FLX_CASE_LABEL(75408)
      goto continue__ll_lists_5922_L75088;
    _ml3821_L75091:;
/*match case 2:|Empty*/
      if(!(FLX_VNI(_vI75094_iterator__apos_2_mv_3819)==0) ) goto _ml3823_L75090;
      return (void* /*VR_nullptr*/ )0;
    _ml3823_L75090:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",725,9,728,18);
;
      goto continue__ll_lists_5922_L75088;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",723,5,730,6); // HACK! 
  FLX_END_SWITCH
}

//------------------------------
//FUNCTION <74563>: flx_pkgconfig::parse_args::aux: Apply method
void* _fI74563_aux::apply(_at75201 const &_arg ){
  _vI74564_inp = (_arg.data)[0];
  _vI74565_out = (_arg.data)[1];
    start_71418_L74647:;
      _vI74611_aux_mv_3749  = _vI74564_inp; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI74611_aux_mv_3749)==0) ) goto _ml3751_L74610;
      return _fI74620_aux_uncurry(ptf, this, ptrparse_args, ptrflx_pkgconfig)
      .apply(_at75201(FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74565_out, ptrparse_args->fld))), (void* /*VR_nullptr*/ )0)) /* apply_stack */;
    _ml3751_L74610:;
/*match case 2:|Snoc (t_param_std_3563, h_param_std_3564)*/
      if(!andthen(FLX_VNI(_vI74611_aux_mv_3749)==1,(FLX_NEWP(_fI74643__lam_3758)(ptf, this, ptrparse_args, ptrflx_pkgconfig))) ) goto _ml3752_L74607;
      _vI74609_h_param_std_3564  = (*((_tt75175*)FLX_VNP(_vI74611_aux_mv_3749))).mem_1; //init
      _vI74608_t_param_std_3563  = (*((_tt75175*)FLX_VNP(_vI74611_aux_mv_3749))).mem_0; //init
      _vI74645_aux_mv_3754  = !eq(_vI74609_h_param_std_3564,ptrparse_args->fld) ; //init
/*begin match*/
/*match case 1:|case 1*/
      if(!(_vI74645_aux_mv_3754==1) ) goto _ml3756_L74644;
/*parallel assignment (2)*/
      _vI74565_out  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI74565_out, _vI74609_h_param_std_3564))); //init
      _vI74564_inp  = _vI74608_t_param_std_3563; //init
      goto start_71418_L74647;
    _ml3756_L74644:;
/*match case 2:any*/
/*parallel assignment (1)*/
      _vI74564_inp  = _vI74608_t_param_std_3563; //init
      goto start_71418_L74647;
    _ml3752_L74607:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",625,7,630,14);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",624,5,632,6); // HACK! 
}

//------------------------------
//FUNCTION <71614>: flx_pkgconfig::check_id::_lam_64798: Apply method
 ::flx::rtl::cl_t _lam_64798::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/flx_pkgconfig.fdoc",268,7,268,57); // HACK! 
}

//------------------------------
//C FUNC <69513>: eq
 ::flx::rtl::cl_t eq( _a17555t_75163 _vI70075_x, _a17555t_75163 _vI70076_y){
      return (_vI70075_x == _vI70076_y);
}
//------------------------------
//FUNCTION <73201>: flx_pkgconfig::handle_pkg::_lam_3713: Apply method
 ::flx::rtl::cl_t _fI73201__lam_3713::apply(_a17555t_75163 const &_arg ){
  _vI73202_x = _arg;
      return eq(_vI73202_x,ptrhandle_pkg->pkg);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",561,10,561,31); // HACK! 
}

//------------------------------
//FUNCTION <70920>: _init_::_a70718_argv: Apply method
_a17555t_75163 _a70718_argv::apply(int const &_arg ){
  _a70719 = _arg;
      return ::std::string(_a70719<0||_a70719>=ptf-> argc?"":ptf-> argv[_a70719]);
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/program.fdoc",673,3,674,35); // HACK! 
}

//------------------------------
//FUNCTION <71323>: iter_uncurry::_lam_3610: Apply method
 ::flx::rtl::cl_t _lam_3610::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",298,9,298,18); // HACK! 
}

//------------------------------
//FUNCTION <73031>: flx_pkgconfig::handle_pkg::_lam_64825::aux_uncurry::_lam_3647: Apply method
 ::flx::rtl::cl_t _fI73031__lam_3647::apply(){
      return 1;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",395,11,395,20); // HACK! 
}

//------------------------------
//FUNCTION <71273>: flx_pkgconfig::add_val::aux_uncurry: Apply method
void* _fI71273_aux_uncurry::apply(_at75201 const &_arg ){
  _vI71274_x_uncurry = (_arg.data)[0];
  _vI71275_y = (_arg.data)[1];
    start_71064_L71295:;
      _vI71290_aux__apos_2_mv_3643  = _vI71274_x_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71290_aux__apos_2_mv_3643)==0) ) goto _ml3645_L71289;
      return _vI71275_y;
    _ml3645_L71289:;
/*match case 2:|Snoc (t_param_std_3532, h_param_std_3533)*/
      if(!andthen(FLX_VNI(_vI71290_aux__apos_2_mv_3643)==1,(FLX_NEWP(_fI71294__lam_3647)(ptf, this, ptradd_val, ptrflx_pkgconfig))) ) goto _ml3646_L71286;
      _vI71288_h_param_std_3533  = (*((_tt75175*)FLX_VNP(_vI71290_aux__apos_2_mv_3643))).mem_1; //init
      _vI71287_t_param_std_3532  = (*((_tt75175*)FLX_VNP(_vI71290_aux__apos_2_mv_3643))).mem_0; //init
/*parallel assignment (2)*/
      _vI71275_y  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(_vI71275_y, _vI71288_h_param_std_3533))); //init
      _vI71274_x_uncurry  = _vI71287_t_param_std_3532; //init
      goto start_71064_L71295;
    _ml3646_L71286:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",393,9,395,41);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",390,5,398,6); // HACK! 
}

//------------------------------
//FUNCTION <70927>: _init_::aux_uncurry: Apply method
void* aux_uncurry::apply(_tt75168 const &_arg ){
  inp_uncurry = _arg.mem_0;
  out = _arg.mem_1;
    start_70843_L70949:;
      _vI70944_aux__apos_2_mv_3637  = inp_uncurry; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI70944_aux__apos_2_mv_3637)==0) ) goto _ml3639_L70943;
      return out;
    _ml3639_L70943:;
/*match case 2:|Snoc (t_param_std_3530, h_param_std_3531)*/
      if(!andthen(FLX_VNI(_vI70944_aux__apos_2_mv_3637)==1,(FLX_NEWP(_lam_3641)(ptf, this, ptr_init_))) ) goto _ml3640_L70940;
      h_param_std_3531  = (*((_tt75188*)FLX_VNP(_vI70944_aux__apos_2_mv_3637))).mem_1; //init
      t_param_std_3530  = (*((_tt75188*)FLX_VNP(_vI70944_aux__apos_2_mv_3637))).mem_0; //init
/*parallel assignment (2)*/
      out  = FLX_VNR(1, new(*ptf->gcp, _tt75175_ptr_map, true) _tt75175 (_tt75175(out, _a70718_argv(ptf, ptr_init_)
      .apply(h_param_std_3531) /* apply_stack */))); //init
      inp_uncurry  = t_param_std_3530; //init
      goto start_70843_L70949;
    _ml3640_L70940:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",367,7,369,45);
;
    FLX_DROPTHRU_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",366,5,371,6); // HACK! 
}

//------------------------------

//PROCEDURE <70477:> iter_uncurry: Call method
::flx::rtl::con_t * iter_uncurry::call(::flx::rtl::con_t *_ptr_caller, _tt75207 const &_arg){
  _caller = _ptr_caller;
  _f_uncurry = _arg.mem_0;
  _vI70496_x = _arg.mem_1;
  INIT_PC
  return this;
}

//PROCEDURE <70477:> iter_uncurry: Resume method
::flx::rtl::con_t *iter_uncurry::resume(){
  FLX_START_SWITCH
      _vI71317_iter__apos_2_mv_3604  = _vI70496_x; //init
/*begin match*/
/*match case 1:|Empty*/
      if(!(FLX_VNI(_vI71317_iter__apos_2_mv_3604)==0) ) goto _ml3606_L71316;
      FLX_RETURN // procedure return
    _ml3606_L71316:;
/*match case 2:|Snoc (t_param_std_3520, h_param_std_3521)*/
      if(!andthen(FLX_VNI(_vI71317_iter__apos_2_mv_3604)==1,(FLX_NEWP(_lam_3610)(ptf, this))) ) goto _ml3608_L71313;
      h_param_std_3521  = (*((_tt75175*)FLX_VNP(_vI71317_iter__apos_2_mv_3604))).mem_1; //init
      t_param_std_3520  = (*((_tt75175*)FLX_VNP(_vI71317_iter__apos_2_mv_3604))).mem_0; //init
      FLX_SET_PC(75413)
      return (_f_uncurry)->clone()
      ->call(this, h_param_std_3521);
    FLX_CASE_LABEL(75413)
      {
      ::flx::rtl::con_t *tmp = _caller;
      _caller = 0;
      return (FLX_NEWP(iter_uncurry)(ptf))
      ->call(tmp, _tt75207(_f_uncurry, t_param_std_3520));
      }
      FLX_KILLPC
      FLX_RETURN // procedure return
    _ml3608_L71313:;
/*match failure*/
            FLX_MATCH_FAILURE("c:/Users/Garrett/Documents/Projects/felix/src/packages/lists.fdoc",296,7,298,42);
;
      FLX_KILLPC
      FLX_RETURN // procedure return
      FLX_KILLPC
    FLX_RETURN
  FLX_END_SWITCH
}

//-----------------------------------------
}} // namespace flxusr::flx_pkgconfig
//CREATE STANDARD EXTERNAL INTERFACE
FLX_FRAME_WRAPPERS(::flxusr::flx_pkgconfig,flx_pkgconfig)
FLX_START_WRAPPER(::flxusr::flx_pkgconfig,flx_pkgconfig,_init_)

//-----------------------------------------
//body complete
